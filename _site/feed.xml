<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="https://linotes.netlify.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://linotes.netlify.com/" rel="alternate" type="text/html" /><updated>2018-08-06T07:18:02+08:00</updated><id>https://linotes.netlify.com/</id><title type="html">LINOTES</title><subtitle>用简洁清晰的语言讨论技术</subtitle><author><name>Hawk Zhang</name><email>imhawkz@gmail.com</email></author><entry><title type="html">文件描述符简介</title><link href="https://linotes.netlify.com/kernel/filedescriptor/" rel="alternate" type="text/html" title="文件描述符简介" /><published>2017-06-01T00:00:00+08:00</published><updated>2017-06-01T00:00:00+08:00</updated><id>https://linotes.netlify.com/kernel/filedescriptor</id><content type="html" xml:base="https://linotes.netlify.com/kernel/filedescriptor/">&lt;h2 id=&quot;文件描述符&quot;&gt;文件描述符&lt;/h2&gt;

&lt;h3 id=&quot;文件-io&quot;&gt;文件 I/O&lt;/h3&gt;

&lt;p&gt;处理文件 I/O 的基本系统调用：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt; ：请求生成到某文件的连接&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;close&lt;/code&gt; ：请求关闭到某文件的连接&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt; ：请求通过特定连接来读取文件的部分字节&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;write&lt;/code&gt; ：请求通过特定连接来写入部分字节到文件&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;文件描述符-1&quot;&gt;文件描述符&lt;/h3&gt;

&lt;p&gt;File Descriptor&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;由 &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt; 系统调用返回的值称为文件描述符，本质上是内核维护的打开文件数组的一个索引。&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/dev/sr0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面提到的数组即文件描述符表，文件描述符是该表的 &lt;strong&gt;索引&lt;/strong&gt;。针对每一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt; 系统调用，即进程打开一个文件时，内核就会创建一个文件描述符，并将其与底层的文件对象关联起来，该文件可以是设备文件，也可以是其它文件。&lt;/p&gt;

&lt;p&gt;文件描述符是内核为了高效管理被打开的文件所创建的索引，是一个非负整数（通常是小整数），用于 &lt;strong&gt;指代&lt;/strong&gt; 被打开的文件，所有执行 &lt;strong&gt;I/O 操作&lt;/strong&gt; 的系统调用都要通过文件描述符。&lt;/p&gt;

&lt;p&gt;每个 Unix 进程（除了可能的守护进程）均应有三个标准的 POSIX 文件描述符，对应于三个标准流：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;文件描述符&lt;/td&gt;
      &lt;td&gt;用途&lt;/td&gt;
      &lt;td&gt;POSIX 名称&lt;/td&gt;
      &lt;td&gt;标准 I/O 流&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;标准输入&lt;/td&gt;
      &lt;td&gt;STDIN_FILENO&lt;/td&gt;
      &lt;td&gt;stdin&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;标准输出&lt;/td&gt;
      &lt;td&gt;STDOUT_FILENO&lt;/td&gt;
      &lt;td&gt;stdout&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;标准错误&lt;/td&gt;
      &lt;td&gt;STDERR_FILENO&lt;/td&gt;
      &lt;td&gt;stderr&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;程序刚刚启动的时候，0 是标准输入，1 是标准输出，2 是标准错误。如果此时去打开一个新的文件，它的文件描述符会是 3。&lt;/p&gt;

&lt;p&gt;文件描述符在形式上是一个非负整数。实际上，它是一个索引值，指向内核为每一个进程所维护的该进程打开文件的记录表。当程序打开一个现有文件或者创建一个新文件时，内核向进程返回一个文件描述符。在程序设计中，一些涉及底层的程序编写往往会围绕着文件描述符展开。但是文件描述符这一概念往往只适用于 UNIX、Linux 这样的操作系统。&lt;/p&gt;

&lt;p&gt;POSIX 标准要求每次打开文件时（含 socket）必须使用当前进程中可用的最小的文件描述符号码，因此，在网络通信过程中，稍不注意就有可能造成串话。&lt;/p&gt;

&lt;p&gt;在 Linux 的系统调用中，&lt;strong&gt;大量的系统调用都是依赖于文件描述符&lt;/strong&gt;。文件描述符为在该系列平台上进行设备相关的编程提供了一个统一的方法。&lt;/p&gt;

&lt;h4 id=&quot;流&quot;&gt;流&lt;/h4&gt;

&lt;p&gt;Stream&lt;/p&gt;

&lt;p&gt;文件描述符是个抽象的句柄，通过它可以访问一个文件或任何其它的输入、输出资源，如网络套接字或管道。只要文件处于打开状态，就可以随时使用其文件描述符来对其进行读写操作。而此时的文件不是通常意义上的磁盘中的文件，而是代表一个流，可以对流进行读取的操作。&lt;/p&gt;

&lt;p&gt;打开一个文件时，操作系统会创建一个到该文件的 &lt;strong&gt;流&lt;/strong&gt;，将其连接到打开的文件上。描述符实际上就代表了这个流。类似的，操作系统创建了一些默认的流，但它们不是连接到文件，而是连接到终端。因此，你在终端输入时，会发送到标准输入流和操作系统中。当你在终端键入 &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; 命令时，操作系统会将结果输出到标准输出流。而标准输出流是连接到显示终端的，于是你看到了输出结果。&lt;/p&gt;

&lt;h3 id=&quot;文件描述符与-pcb&quot;&gt;文件描述符与 PCB&lt;/h3&gt;

&lt;p&gt;每个进程在 Linux 内核中都有一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;task_struct&lt;/code&gt; 结构体来维护进程相关的信息，称为进程描述符（Process Descriptor），而在操作系统理论中称为进程控制块（PCB，Process Control Block）。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;task_struct&lt;/code&gt; 中有一个指针（files）指向 &lt;code class=&quot;highlighter-rouge&quot;&gt;files_struct&lt;/code&gt; 结构体，称为文件描述符表，其中每个表项包含一个指向已打开的文件的指针，如下图。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2017.4.1.fd.png&quot; alt=&quot;image-center&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;用户程序不能直接访问内核中的文件描述符表，只能使用文件描述符表的索引（即 0、1、2、3 这些数字），这些索引即文件描述符，用 int 型变量保存。&lt;/p&gt;

&lt;p&gt;当调用 open 打开一个文件或创建一个新文件时，内核分配一个文件描述符，并返回给用户程序，该文件描述符表项中的指针指向新打开的文件。当读写文件时，用户程序把文件描述符传给 read 或 write ，内核根据文件描述符找到相应的表项，再通过表项中的指针找到相应的文件。&lt;/p&gt;

&lt;h3 id=&quot;文件描述的限制&quot;&gt;文件描述的限制&lt;/h3&gt;

&lt;p&gt;文件描述符是系统的一个重要资源，虽然说系统内存有多少就可以打开多少的文件描述符，但是在实际实现过程中内核是会做相应的处理。&lt;/p&gt;

&lt;p&gt;整个系统可以打开的最大文件数通常限制在系统内存的 10%（以 KB 计算），称之为系统级限制。可用 &lt;code class=&quot;highlighter-rouge&quot;&gt;sysctl -a | grep fs.file-max&lt;/code&gt; 查看。&lt;/p&gt;

&lt;p&gt;为了避免某一个进程消耗掉所有的文件资源，内核也会对单个进程可打开的最大文件数加以限制，称用户级限制，默认值为 1024，用 &lt;code class=&quot;highlighter-rouge&quot;&gt;ulimit -n&lt;/code&gt; 查看。在 Web 服务器中，常通过更改该默认值来优化服务器。&lt;/p&gt;

&lt;h3 id=&quot;文件描述符与打开的文件&quot;&gt;文件描述符与打开的文件&lt;/h3&gt;

&lt;p&gt;每一个文件描述符与一个打开的文件相对应，不同的文件描述符可指向同一个文件。既它们之间的关系可以是 &lt;strong&gt;一对一&lt;/strong&gt;，也可以是 &lt;strong&gt;多对一&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;同一个文件可以被 &lt;strong&gt;不同的进程&lt;/strong&gt; 打开，也可以在 &lt;strong&gt;同一个进程&lt;/strong&gt; 中被 &lt;strong&gt;多次&lt;/strong&gt; 打开。&lt;/p&gt;

&lt;p&gt;系统为每个进程维护了一个文件描述符表，该表的值都是从 0 开始的，所以在不同的进程中你会看到相同的文件描述符，但相同的文件描述符不一定指向同一个文件。&lt;/p&gt;

&lt;p&gt;具体指向哪个文件，需要查看由内核维护的 3 个数据结构：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;进程级的文件描述符表&lt;/li&gt;
  &lt;li&gt;系统级的打开文件描述符表&lt;/li&gt;
  &lt;li&gt;文件系统的 i-node 表&lt;/li&gt;
&lt;/ol&gt;

&lt;p class=&quot;notice--info&quot;&gt;从在进程中打开一个文件，一直到获取文件内容，这期间要经历几级的间接寻址。从实施角度来看，经历某个级别通常意味着：在内核中翻译成为某种 &lt;strong&gt;数据结构&lt;/strong&gt;，然后指向下一级。&lt;/p&gt;

&lt;h4 id=&quot;进程级描述符表&quot;&gt;进程级描述符表&lt;/h4&gt;

&lt;p&gt;The per-process Open File Descriptor Table&lt;/p&gt;

&lt;p&gt;对于 &lt;strong&gt;每一个进程&lt;/strong&gt;，内核都为其维护一个打开文件描述符的表。表中的每个条目都记录了单个文件描述符的相关信息，包括：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;控制文件描述符操作的一组标签（目前，此类标志仅定义了一个，即 &lt;code class=&quot;highlighter-rouge&quot;&gt;close-on-exec&lt;/code&gt; 标签）&lt;/li&gt;
  &lt;li&gt;对打开文件描述符的引用&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;数据结构&quot;&gt;数据结构&lt;/h5&gt;

&lt;p&gt;在 Linux 系统中，进程打开的文件是由 &lt;code class=&quot;highlighter-rouge&quot;&gt;files_struct&lt;/code&gt; 结构来管理的，而该结构又是位于进程的 &lt;code class=&quot;highlighter-rouge&quot;&gt;task_struct&lt;/code&gt; 结构中：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;struct task_struct {
    ...
    /* open file information */
    struct files_struct *files;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;每进程的文件描述符表（fdt）位于 &lt;code class=&quot;highlighter-rouge&quot;&gt;files_strct&lt;/code&gt; 结构中：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;struct files_struct {
    ...
    struct fdtable __rcu *fdt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;当进程要打开文件时，它会产生一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt; 调用，继而调用 &lt;code class=&quot;highlighter-rouge&quot;&gt;sys_open&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sys_open(filename, …)
    // 1)   从用户空间拷贝文件名
    getname(filename)
            strncpy_from_user()
    // 2)  获取第一个未用的描述符，会将其返回给进程
    int fd = get_unused_fd()
        struct files_struct *files = current-&amp;gt;files
    // 3) 从文件系统获取文件
    struct file *f = file_open(filename)
        open_namei
            // lookup operation for filesystem
            dentry = cached_lookup or real_lookup
            // initializes file struct
            dentry_open
    // 4) 把文件系统返回的文件安装到进程的描述符表中
    fd_install
        current-&amp;gt;files-&amp;gt;fd[fd] = file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;进程于是得到了返回的索引号，即描述符表指向该打开的文件的索引。&lt;/p&gt;

&lt;h4 id=&quot;系统级描述符表&quot;&gt;系统级描述符表&lt;/h4&gt;

&lt;p&gt;The system-wide table of open file descriptions，打开文件描述表&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;注意：该结构保存的是 file description，是比较详细的文件描述信息，而描述符 file descriptor 只是一个数字而已。&lt;/p&gt;

&lt;p&gt;内核针对 &lt;strong&gt;所有打开的文件&lt;/strong&gt; 会维护一个系统级的描述表，也称 &lt;strong&gt;打开文件表&lt;/strong&gt;（open file table），并将表中各条目称为 &lt;strong&gt;打开文件句柄&lt;/strong&gt;（open file handle），其中存储了与一个打开文件相关的全部信息：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;当前文件偏移量（调用 &lt;code class=&quot;highlighter-rouge&quot;&gt;read()&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;write()&lt;/code&gt; 时更新，或使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;lseek()&lt;/code&gt; 直接修改）&lt;/li&gt;
  &lt;li&gt;打开文件时所使用的状态标识（即，&lt;code class=&quot;highlighter-rouge&quot;&gt;open()&lt;/code&gt; 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;flags&lt;/code&gt; 参数）&lt;/li&gt;
  &lt;li&gt;文件访问模式（如调用 &lt;code class=&quot;highlighter-rouge&quot;&gt;open()&lt;/code&gt; 时所设置的只读模式、只写模式或读写模式）&lt;/li&gt;
  &lt;li&gt;与信号驱动相关的设置&lt;/li&gt;
  &lt;li&gt;对该文件 i-node 对象的引用&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Linux 系统中，系统级描述符表是由 &lt;code class=&quot;highlighter-rouge&quot;&gt;struct file&lt;/code&gt; 数据结构实现的。&lt;/p&gt;

&lt;h4 id=&quot;文件系统-i-node-表&quot;&gt;文件系统 i-node 表&lt;/h4&gt;

&lt;p&gt;每个文件系统都有一个 i-node 表，维护整个文件系统所有的文件，其中的信息包括：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;文件类型（例如：常规文件、套接字或 FIFO）和访问权限&lt;/li&gt;
  &lt;li&gt;一个指针，指向该文件所持有的锁列表&lt;/li&gt;
  &lt;li&gt;文件的各种属性，包括文件大小以及与不同类型操作相关的时间戳&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;三个数据结构的关系&quot;&gt;三个数据结构的关系&lt;/h4&gt;

&lt;p&gt;下图展示了文件描述符、打开的文件句柄以及 i-node 之间的关系，图中，两个进程拥有诸多打开的文件描述符。&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;https://linotes.netlify.com/assets/images/2017.4.1.pcb.inode.png&quot; alt=&quot;&quot; /&gt;
  
&lt;/figure&gt;

&lt;p&gt;图中，进程 A 的描述符 1 和 20 是指向打开文件表中同一个句柄的，这种情况可能是由调用 &lt;code class=&quot;highlighter-rouge&quot;&gt;dup()&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;dup2()&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;fcntl()&lt;/code&gt; 导致的，即 &lt;strong&gt;复制了描述符&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;而进程 A 的描述符 2 与进程 B 的描述符 2 同时指向句柄 73。这种情况可能是因为调用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;fork()&lt;/code&gt;，如 A 和 B 可能是父子进程关系，或者，&lt;strong&gt;一个进程通过域套接字传递了一个描述符给另一个进程&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;进程 A 的描述符 0 与进程 B 的描述符 3 虽然指向不同的句柄，但这些句柄是指向同一个 i-node 表条目 1976 的，即指向同一个文件。当 &lt;strong&gt;一个进程重复两次打开同一文件&lt;/strong&gt; 时会导致该结果。&lt;/p&gt;

&lt;h4 id=&quot;总结&quot;&gt;总结&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;由于进程级文件描述符表的存在，不同的进程中会出现相同的文件描述符，它们可能指向同一个文件，也可能指向不同的文件&lt;/li&gt;
  &lt;li&gt;如果两个不同的描述符指向同一个句柄，则这两个描述符共享相同的文件偏移量。因此，如果文件偏移量被其中的一个描述符修改了（&lt;code class=&quot;highlighter-rouge&quot;&gt;read()&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;write()&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;lseek()&lt;/code&gt; 都可导致），则该修改对于另一个描述符也是可见的。无论这两个描述符是属于同一进程还是不同进程，该情况都适用。当文件状态被某个描述符修改时，结果也是一样的。&lt;/li&gt;
  &lt;li&gt;描述符的标签（如 &lt;code class=&quot;highlighter-rouge&quot;&gt;close-on-exec&lt;/code&gt;）对于进程和描述符是私有的，修改这些标签不会影响另一个描述符。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;管道&quot;&gt;管道&lt;/h2&gt;

&lt;p&gt;管道是进程间通信的主要手段之一。&lt;/p&gt;

&lt;p&gt;Linux 管道有两种：&lt;strong&gt;匿名管道&lt;/strong&gt; 与 &lt;strong&gt;命名管道&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;管道有一个特点，如果管道中没有数据，那么取管道数据的操作就会滞留，直到管道内进入数据，然后读出后才会终止这一操作；同理，写入管道的操作如果没有读取管道的操作，这一动作就会滞留。&lt;/p&gt;

&lt;h3 id=&quot;管道的实现机制&quot;&gt;管道的实现机制&lt;/h3&gt;

&lt;p&gt;管道是由 &lt;strong&gt;内核管理&lt;/strong&gt; 的一个 &lt;strong&gt;缓冲区&lt;/strong&gt;，相当于我们放入内存中的一个纸条。&lt;/p&gt;

&lt;p&gt;管道的一端连接一个进程的输出。这个进程会向管道中放入信息。管道的另一端连接一个进程的输入，这个进程取出被放入管道的信息。&lt;/p&gt;

&lt;p&gt;一个缓冲区不需要很大，一般为 4K，它被设计成为 &lt;strong&gt;环形的数据结构&lt;/strong&gt;，以便管道可以被循环利用。当管道中没有信息时，从管道中读取的进程会等待，直到另一端的进程放入信息。当管道被放满信息的时候，尝试放入信息的进程会等待，直到另一端的进程取出信息。当两个进程都终结的时候，管道也自动消失。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2017.4.1.pipe.fork.png&quot; alt=&quot;image-center&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从原理上，管道利用 &lt;code class=&quot;highlighter-rouge&quot;&gt;fork&lt;/code&gt; 机制建立，从而让两个进程可以连接到同一个管道上：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;最开始的时候，管道的两端都连接在同一个进程上&lt;/li&gt;
  &lt;li&gt;复用 fork 复制进程时，会将这两个连接也复制到新进程上&lt;/li&gt;
  &lt;li&gt;随后，每个进程关闭自己不需要的一个连接，剩下的连接就构成了管道&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;匿名管道&quot;&gt;匿名管道&lt;/h3&gt;

&lt;p class=&quot;notice--info&quot;&gt;一个匿名管道实际上就是个 &lt;strong&gt;只存在于内存中的文件&lt;/strong&gt;，对这个文件的操作要通过两个已经打开的文件进行，它们分别代表管道的两端。&lt;/p&gt;

&lt;p&gt;匿名管道使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt; 作为操作符，两端是两个普通的、匿名的、打开的文件描述符：一个 &lt;strong&gt;只读端&lt;/strong&gt; 和一个 &lt;strong&gt;只写端&lt;/strong&gt;，这就让其它进程无法连接到该匿名管道。&lt;/p&gt;

&lt;p&gt;管道两端的进程均将该管道 &lt;strong&gt;看做一个文件&lt;/strong&gt;，一个进程负责往管道中写内容，而另一个从管道中读取。这种传输遵循 “先入先出”（FIFO）的规则。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;file | less
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;为了执行以上命令，shell 会创建两个进程来分别执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;cat&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;less&lt;/code&gt;：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2017.4.1.pipe.png&quot; alt=&quot;image-center&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;两个进程都连接到了管道上，写入进程 &lt;code class=&quot;highlighter-rouge&quot;&gt;cat&lt;/code&gt; 将其标准输出（描述符 1）连接到了管道的写入端，读取进程 &lt;code class=&quot;highlighter-rouge&quot;&gt;less&lt;/code&gt; 将其标准输入（描述符 0）连接到了管道的读入端。实际上，两个进程并不知道管道的存在，它们只是从标准文件描述符中读取数据和写入数据。&lt;/p&gt;

&lt;h4 id=&quot;匿名管道的特点&quot;&gt;匿名管道的特点&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;半双工&lt;/strong&gt;：数据只能向 &lt;strong&gt;一个方向&lt;/strong&gt; 流动，需要双方通信时，需建立起两个管道&lt;/li&gt;
  &lt;li&gt;管道没有名字：因此只能用于有 &lt;strong&gt;亲缘关系&lt;/strong&gt; 的进程，如父子进程或兄弟进程之间&lt;/li&gt;
  &lt;li&gt;单独构成一种 &lt;strong&gt;独立的文件系统&lt;/strong&gt;：管道对于其两端的进程而言，就是一个文件，但不是普通的文件，不属于某种文件系统，而是单独构成一种文件系统，且只存在于内存中&lt;/li&gt;
  &lt;li&gt;数据的读取和写入：一个进程向管道中写入的内容被另一端的进程读取。&lt;strong&gt;写入&lt;/strong&gt; 的内容每次都添加在管道 &lt;strong&gt;缓冲区&lt;/strong&gt; 的 &lt;strong&gt;末尾&lt;/strong&gt;，并且每次都是从缓冲区的 &lt;strong&gt;头部&lt;/strong&gt; 读取数据&lt;/li&gt;
  &lt;li&gt;向管道中写入数据时，linux 将不保证写入的原子性，管道缓冲区一有空闲区域，写进程就会试图向管道写入数据。如果读进程不读走管道缓冲区中的数据，那么写操作将一直 &lt;strong&gt;阻塞&lt;/strong&gt;。&lt;/li&gt;
  &lt;li&gt;只有在管道的 &lt;strong&gt;读端存在&lt;/strong&gt; 时，向管道中写入数据才有意义。否则，向管道中写入数据的进程将收到内核传来的 SIFPIPE 信号，应用程序可以处理该信号，也可以忽略（默认动作则是应用程序终止）。&lt;/li&gt;
  &lt;li&gt;管道的 &lt;strong&gt;缓冲区是有限的&lt;/strong&gt;：管道只存在于内存中，创建管道时，为缓冲区分配一个页面大小&lt;/li&gt;
  &lt;li&gt;管道所传递的是 &lt;strong&gt;无格式字节流&lt;/strong&gt;：这就要求管道双方必须事先约定好数据的格式，比如多少字节算作一个消息、命令或记录&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;命名管道&quot;&gt;命名管道&lt;/h3&gt;

&lt;p&gt;命名管道是为了解决匿名管道只能用于近亲进程之间通信的缺陷而设计的，也称 FIFO。&lt;/p&gt;

&lt;p&gt;命名管道是建立在 &lt;strong&gt;实际的磁盘介质或文件系统上的有自己名字的文件&lt;/strong&gt;，任何进程可以在任何时间通过文件名或路径名与该文件建立联系。即使与 FIFO 的创建进程不存在亲缘关系的进程，只要可以访问该路径，就能够彼此通过 FIFO 相互通信，因此，通过 FIFO，&lt;strong&gt;不相关的进程也能交换数据&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;FIFO 严格遵循先进先出（first in first out），对管道及 FIFO 的读总是从 &lt;strong&gt;开始处&lt;/strong&gt; 返回数据，对它们的写则把数据添加到 &lt;strong&gt;末尾&lt;/strong&gt;。它们不支持诸如 &lt;code class=&quot;highlighter-rouge&quot;&gt;lseek()&lt;/code&gt; 等文件定位操作。&lt;/p&gt;

&lt;h4 id=&quot;命名管道的特点&quot;&gt;命名管道的特点&lt;/h4&gt;

&lt;p&gt;从语义上来讲，FIFO 其实与匿名管道类似，其特点为：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在文件系统中，FIFO 拥有 &lt;strong&gt;名称&lt;/strong&gt;，并且是以 &lt;strong&gt;设备特殊文件&lt;/strong&gt; 的形式存在的；&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;任何进程&lt;/strong&gt; 都可以通过 FIFO &lt;strong&gt;共享&lt;/strong&gt; 数据；&lt;/li&gt;
  &lt;li&gt;FIFO 两端必须同时有读与写的进程，否则 FIFO 的数据流通将会阻塞；&lt;/li&gt;
  &lt;li&gt;匿名管道是由 shell 自动创建的，存在于内核中；而 FIFO 则是由程序创建的（如 &lt;code class=&quot;highlighter-rouge&quot;&gt;mkfifo&lt;/code&gt; 命令），存在于 &lt;strong&gt;文件系统&lt;/strong&gt; 中；&lt;/li&gt;
  &lt;li&gt;匿名管道是单向的字节流，而 FIFO 则是 &lt;strong&gt;双向&lt;/strong&gt; 的字节流；&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;notice--info&quot;&gt;匿名管道与命名管道的唯一区别就是它们 &lt;strong&gt;创建和打开的方式&lt;/strong&gt;，一旦这些任务完成，对管道的 I/O 操作在语义上是相同的。&lt;/p&gt;

&lt;h4 id=&quot;fifo-文件&quot;&gt;FIFO 文件&lt;/h4&gt;

&lt;p&gt;FIFO（First in, First out）为一种特殊的文件类型，它在文件系统中有对应的路径。&lt;/p&gt;

&lt;p&gt;为了实现命名管道，引入了一种新的文件类型 —— FIFO 文件（遵循先进先出的原则）。实现一个命名管道实际上就是实现一个 FIFO 文件。命名管道一旦建立，其读、写及关闭操作都与普通管道完全相同。虽然 FIFO 文件的 inode 节点在磁盘上，但是仅是一个节点而已，&lt;strong&gt;文件的数据&lt;/strong&gt; 还是存在于 &lt;strong&gt;内存&lt;/strong&gt; 缓冲页面中，和普通管道相同。&lt;/p&gt;

&lt;p&gt;FIFO 实际上也 &lt;strong&gt;由内核管理&lt;/strong&gt;，不与硬盘打交道。当进程之间通过 FIFO 进行数据交换时，内核 &lt;strong&gt;直接&lt;/strong&gt; 在管道内交换数据，而不会写入文件系统。因此，FIFO 文件在文件系统中没有任何内容，文件系统的入口只是作为一个引用点，以便进程能够使用文件系统中的 &lt;strong&gt;文件名&lt;/strong&gt; 来访问管道。&lt;/p&gt;

&lt;p&gt;FIFO 可以被 &lt;strong&gt;多个进程&lt;/strong&gt; 打开，进行读取或写入。但一个 FIFO 文件即使被多个进程打开，内核也同时只维护一个管道对象。而且，FIFO 必须同时在 &lt;strong&gt;两端都打开&lt;/strong&gt; 才能开始传递数据。当只有一端打开时，FIFO 会暂时 &lt;strong&gt;阻塞&lt;/strong&gt;，直到另一端也被打开。&lt;/p&gt;

&lt;p&gt;另外，一个进程也可以用非阻塞模式打开 FIFO，在这种情况下，即使写入端没有打开，以 &lt;strong&gt;只读方式&lt;/strong&gt; 也能够成功打开；但是，只有另一端打开时，才能以只写方式打开，否则会报 “找不到设备或地址” 的错误。&lt;/p&gt;

&lt;p&gt;当 &lt;strong&gt;删除&lt;/strong&gt; FIFO 文件时，管道连接也随之 &lt;strong&gt;消失&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;FIFO 的好处在于我们可以通过文件的路径来识别管道，从而让没有亲缘关系的进程之间可以建立连接。&lt;/p&gt;

&lt;p&gt;在 Linux 中，无论处于阻塞还是非阻塞模式，都可以打开 FIFO 成功地读写。POSIX 没有定义该行为，因此可以利用这一点，在 &lt;strong&gt;没有读取端&lt;/strong&gt; 时，打开 FIFO 进行 &lt;strong&gt;写入&lt;/strong&gt;。如果一个进程要复用管道的两端与自己通讯，一定要谨防死锁。&lt;/p&gt;

&lt;h4 id=&quot;fifo-读写规则&quot;&gt;FIFO 读写规则&lt;/h4&gt;

&lt;h5 id=&quot;关于文件的阻塞&quot;&gt;关于文件的阻塞&lt;/h5&gt;

&lt;p&gt;所谓的阻塞，即内核在对文件操作 I/O 系统调用时，如果条件不满足（可能需要产生 I/O），则内核会将该进程 &lt;strong&gt;挂起&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;非阻塞则是发现条件不满足就会 &lt;strong&gt;立即返回&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;此外需要注意的是非阻塞并不是轮询，不然就和阻塞没多大区别了，它只是调用不成功就直接返回了，不会再去看啥时候会满足条件，而是由你自己去选择接下来该做什么。&lt;/p&gt;

&lt;p&gt;read/write 系统调用 &lt;strong&gt;不会直接读写文件&lt;/strong&gt;，只是去操作文件所对应的内存页（此时的页为虚拟内存）：&lt;/p&gt;

&lt;p&gt;对于 read，如果在页中找到了想要读写的数据，则直接从页中将数据 &lt;strong&gt;复制到用户缓存&lt;/strong&gt; 即可；如果要读的页没有找到，只能从磁盘读出该页内容，缓存在内存中即可。所谓的读过程，其实文件系统所要做的只是 &lt;strong&gt;锁定页面&lt;/strong&gt;，然后 &lt;strong&gt;构造一个读请求&lt;/strong&gt;，并将请求发给底层的 I/O 子系统即可。linux 内核中默认 read 系统调用是阻塞的，write 调用是非阻塞的，因为写入时只是将用户态的数据写入缓存页面中即可返回。&lt;/p&gt;

&lt;h5 id=&quot;从-fifo-中读取数据&quot;&gt;从 FIFO 中读取数据&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;【 约定 】&lt;/strong&gt;：一个进程想从 FIFO 中读取数据，如果 &lt;strong&gt;以阻塞模式打开&lt;/strong&gt; FIFO，称该进程的读操作为 “&lt;strong&gt;设置了阻塞标志&lt;/strong&gt; 的” 读操作。&lt;/p&gt;

&lt;p&gt;以下把为了写入而打开 FIFO 简称 &lt;strong&gt;写打开&lt;/strong&gt;，为了读取数据而打开 FIFO 简称 &lt;strong&gt;读打开&lt;/strong&gt;。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果有进程写打开 FIFO，且当前 FIFO 内没有数据，则设置了阻塞标志的读操作将一直阻塞，没有设置阻塞标志的读操会返回 -1，errno 值为 EAGAIN，提醒以后再试。&lt;/li&gt;
  &lt;li&gt;对于设置了阻塞标志的读操作，如果 FIFO 内没有数据，或 FIFO 内虽然有数据，但其它进程在读，会造成阻塞。只要 FIFO 中有新的数据写入，就会解阻塞。&lt;/li&gt;
  &lt;li&gt;读打开的阻塞标志只对本进程第一个读操作起作用，如果本进程内有多个读操作序列，则在第一个读操作被唤醒并完成读操作后，其它将要执行的读操作将不再阻塞，即使在执行读操作时，FIFO 中没有数据也一样（此时，读操作返回 0）。&lt;/li&gt;
  &lt;li&gt;如果没有进程写打开 FIFO，则设置了阻塞标志的读操作会阻塞。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;注：如果 FIFO 中有数据，则设置了阻塞标志的读操作不会因为 FIFO 中的字节数小于请求读的字节数而阻塞，此时，读操作会返回 FIFO 中现有的数据量。&lt;/p&gt;

&lt;h5 id=&quot;向-fifo-中写入数据&quot;&gt;向 FIFO 中写入数据&lt;/h5&gt;

&lt;p&gt;【 约定 】：如果一个进程为了向 FIFO 中写入数据而以阻塞模式打开 FIFO，那么称该进程内的写操作为 &lt;strong&gt;设置了阻塞标志&lt;/strong&gt; 的写操作。&lt;/p&gt;

&lt;h6 id=&quot;对于设置了阻塞标志的写操作&quot;&gt;对于设置了阻塞标志的写操作：&lt;/h6&gt;

&lt;p&gt;当要写入的数据量不大于 &lt;code class=&quot;highlighter-rouge&quot;&gt;PIPE_BUF&lt;/code&gt; 时，linux 将保证写入的原子性。如果此时管道可用缓冲区不足以容纳要写入的字节数，则进入睡眠，直到当缓冲区中能够容纳要写入的字节数时，才开始进行一次性写操作。&lt;/p&gt;

&lt;p&gt;当要写入的数据量大于 &lt;code class=&quot;highlighter-rouge&quot;&gt;PIPE_BUF&lt;/code&gt; 时，linux 将不再保证写入的原子性。FIFO 缓冲区一有可用区域，写进程就会试图向管道写入数据，写操作在写完所有请求写的数据后返回。&lt;/p&gt;

&lt;h6 id=&quot;对于没有设置阻塞标志的写操作&quot;&gt;对于没有设置阻塞标志的写操作：&lt;/h6&gt;

&lt;p&gt;当要写入的数据量不大于 &lt;code class=&quot;highlighter-rouge&quot;&gt;PIPE_BUF&lt;/code&gt; 时，linux 将保证写入的原子性。如果当前 FIFO 空闲缓冲区能够容纳请求写入的字节数，写完后成功返回；如果当前 FIFO 空闲缓冲区不能够容纳请求写入的字节数，则返回 EAGAIN 错误，提醒以后再写；&lt;/p&gt;

&lt;p&gt;当要写入的数据量大于 &lt;code class=&quot;highlighter-rouge&quot;&gt;PIPE_BUF&lt;/code&gt; 时，linux 将不再保证写入的原子性。在写满所有 FIFO 空闲缓冲区后，写操作返回。&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;</content><author><name>Hawk Zhang</name><email>imhawkz@gmail.com</email></author><category term="文件描述符" /><category term="管道" /></entry><entry><title type="html">Bash 入门 03</title><link href="https://linotes.netlify.com/programming/bash03/" rel="alternate" type="text/html" title="Bash 入门 03" /><published>2017-05-03T00:00:00+08:00</published><updated>2017-05-03T00:00:00+08:00</updated><id>https://linotes.netlify.com/programming/bash03</id><content type="html" xml:base="https://linotes.netlify.com/programming/bash03/">&lt;h2 id=&quot;9-重复性任务&quot;&gt;9. 重复性任务&lt;/h2&gt;

&lt;h3 id=&quot;91-for-循环&quot;&gt;9.1 &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; 循环&lt;/h3&gt;

&lt;h4 id=&quot;911-工作方式&quot;&gt;9.1.1 工作方式&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for NAME [in LIST ]; do COMMANDS; done&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;按照 LIST 列表，逐次执行 COMMANDS，直到 LIST 结束。&lt;/p&gt;

&lt;p&gt;如果 [in LIST ] 不存在，则会用 &lt;code class=&quot;highlighter-rouge&quot;&gt;in $@&lt;/code&gt; 替换，并用每个位置参数来执行一次 COMMANDS。&lt;/p&gt;

&lt;p&gt;执行的最后一条命令的退出状态作为该循环的返回状态。如果因为 LIST 没扩展出任何条目，而导致没有执行任何命令，返回状态为 0。&lt;/p&gt;

&lt;p&gt;NAME 可以是变量名，经常习惯地使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; 做变量名。&lt;/p&gt;

&lt;p&gt;LIST 可以是任何字段的列表，列表也可以由命令生成。&lt;/p&gt;

&lt;p&gt;COMMANDS 可以是任何命令、脚本、程序、语句。&lt;/p&gt;

&lt;h4 id=&quot;912-范例&quot;&gt;9.1.2 范例&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;1..100..2&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do  
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sum+=i&quot;&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;done  

&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sum=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sum&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;i 按步数 2 不断递增，计算 sum 值。&lt;/p&gt;

&lt;h5 id=&quot;用命令替换来指定列表条目&quot;&gt;用命令替换来指定列表条目&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for i in &lt;/code&gt;cat list&lt;code class=&quot;highlighter-rouge&quot;&gt;; do cp &quot;$i&quot; &quot;$i&quot;.bak ; done&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for i in &lt;/code&gt;ls /sbin&lt;code class=&quot;highlighter-rouge&quot;&gt;; do file /sbin/$i | grep ASCII; done&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;使用变量内容来指定列表条目&quot;&gt;使用变量内容来指定列表条目&lt;/h5&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;LIST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.html&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LIST&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
     &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;NEWNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/html/php/'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;beginfile &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$NEWNAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
     &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1,25d'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tac&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1,21d'&lt;/span&gt;| &lt;span class=&quot;nb&quot;&gt;tac&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$NEWNAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
     &lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;endfile &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$NEWNAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;计次循环&quot;&gt;计次循环&lt;/h5&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt; i &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; i &amp;lt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 100&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; i + 2 &lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;do  
     &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sum += i&quot;&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;done  
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sum=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sum&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;i = 1&lt;/code&gt; ：循环变量赋初值&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;i &amp;lt;= 100&lt;/code&gt; ：条件表达式，退出状态为 0 则继续循环，否则退出循环&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;i = i + 2&lt;/code&gt; ：循环变量自增&lt;/p&gt;

&lt;h3 id=&quot;92-while-循环&quot;&gt;9.2 &lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt; 循环&lt;/h3&gt;

&lt;p&gt;也称为 &lt;strong&gt;前测试循环语句&lt;/strong&gt;，利用一个 &lt;strong&gt;条件&lt;/strong&gt; 来 &lt;strong&gt;控制&lt;/strong&gt; 是否继续 &lt;strong&gt;重复&lt;/strong&gt; 执行这个语句。&lt;/p&gt;

&lt;h4 id=&quot;921-工作方式&quot;&gt;9.2.1 工作方式&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;while CONTROL-COMMAND; do CONSEQUENT-COMMANDS; done&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;只要 CONTROL-COMMAND 条件为真，就不停地执行执行 CONSEQUENT-COMMANDS。一旦条件为假，立即退出循环，继续执行 done 之后，即循环之外的命令。&lt;/p&gt;

&lt;p&gt;为了 &lt;strong&gt;避免死循环&lt;/strong&gt;，必须保证循环体中包含 &lt;strong&gt;循环出口条件&lt;/strong&gt;，即表达式存在退出状态为非 0 的情况。&lt;/p&gt;

&lt;h4 id=&quot;922-范例&quot;&gt;9.2.2 范例&lt;/h4&gt;

&lt;h5 id=&quot;一般用法&quot;&gt;一般用法&lt;/h5&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-lt&lt;/span&gt; 4 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do
&lt;/span&gt;xterm &amp;amp;
&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$[$i&lt;/span&gt;+1]
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;嵌套&quot;&gt;嵌套&lt;/h5&gt;

&lt;p&gt;以下脚本目的是把网络摄像头拍摄的照片自动归档。摄像头每 5 分钟会拍一张照片。&lt;/p&gt;

&lt;p&gt;每天创建一个当天的目录，每小时新建一个目录，用于保存这一小时内拍摄的照片。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;PICSDIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/home/carol/pics
&lt;span class=&quot;nv&quot;&gt;WEBDIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/www/carol/webcam

&lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
	&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; +%Y%m%d&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;HOUR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; +%H&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$WEBDIR&lt;/span&gt;/&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DATE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$HOUR&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ne&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;00&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
		&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DESTDIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$WEBDIR&lt;/span&gt;/&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DATE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;/&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOUR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DESTDIR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;mv&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$PICDIR&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.jpg &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DESTDIR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;/
		&lt;span class=&quot;nb&quot;&gt;sleep &lt;/span&gt;3600
		&lt;span class=&quot;nv&quot;&gt;HOUR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; +%H&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;done
done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; 语句时，代表无条件执行，直到被强制中断，也许是被 &lt;code class=&quot;highlighter-rouge&quot;&gt;kill&lt;/code&gt; 信号，或 &lt;code class=&quot;highlighter-rouge&quot;&gt;^C&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;下面的脚本可以用于生成测试文件：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;pic-&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; +%s&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;.jpg
&lt;span class=&quot;nb&quot;&gt;sleep &lt;/span&gt;300
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;每 5 分钟生成一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;.jpg&lt;/code&gt; 文件。&lt;/p&gt;

&lt;h5 id=&quot;用键盘输入来控制循环&quot;&gt;用键盘输入来控制循环&lt;/h5&gt;

&lt;p&gt;以下脚本可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;^C&lt;/code&gt; 来终止运行：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;FORTUNE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/games/fortune

&lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;On which topic do you want advice?&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;topics&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;
politics
startrek
kernelnewbies
sports
bofh-excuses
magic
love
literature
drugs
education
&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;topics

&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo
echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Make your choice: &quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;topic
&lt;span class=&quot;nb&quot;&gt;echo
echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Free advice on the topic of &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$topic&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: &quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$FORTUNE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$topic&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;计算平均值&quot;&gt;计算平均值&lt;/h5&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;SCORE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;AVERAGE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;NUM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do

  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Enter your score [0-100%] ('q' for quit): &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;SCORE&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SCORE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &amp;lt; &lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SCORE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;100&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Be serious.  Common, try again: &quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SCORE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;q&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Average rating: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$AVERAGE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;%.&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;break
  &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$[$SUM&lt;/span&gt; + &lt;span class=&quot;nv&quot;&gt;$SCORE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;NUM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$[$NUM&lt;/span&gt; + 1]
    &lt;span class=&quot;nv&quot;&gt;AVERAGE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$[$SUM&lt;/span&gt; / &lt;span class=&quot;nv&quot;&gt;$NUM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;fi

done

&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Exiting.&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;93--until-循环&quot;&gt;9.3  &lt;code class=&quot;highlighter-rouge&quot;&gt;until&lt;/code&gt; 循环&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;until TEST-COMMAND; do CONSEQUENT-COMMANDS; done&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;只要条件不满足，就一直循环运行，一旦满足，退出循环。&lt;/p&gt;

&lt;h4 id=&quot;范例&quot;&gt;范例&lt;/h4&gt;

&lt;p&gt;还是网络摄像头那个例子，加上磁盘空间的检测，一于磁盘空间不够用（占用率 &amp;gt; 90%），就自动转移图片。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
	&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DISKFUL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$WEBDIR&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; File | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $5 }'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f1&lt;/span&gt; -&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$DISKFUL&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ge&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;90&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do

        	&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; +%Y%m%d&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
        	&lt;span class=&quot;nv&quot;&gt;HOUR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; +%H&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
        	&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$WEBDIR&lt;/span&gt;/&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DATE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

        	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$HOUR&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ne&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;00&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
                	&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DESTDIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$WEBDIR&lt;/span&gt;/&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DATE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;/&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOUR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
                	&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DESTDIR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
                	&lt;span class=&quot;nb&quot;&gt;mv&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$PICDIR&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.jpg &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DESTDIR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;/
                	&lt;span class=&quot;nb&quot;&gt;sleep &lt;/span&gt;3600
                	&lt;span class=&quot;nv&quot;&gt;HOUR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; +%H&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
        	&lt;span class=&quot;k&quot;&gt;done

	&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DISKFULL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$WEBDIR&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; File | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{ print $5 }'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f1&lt;/span&gt; -&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;done

	&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TOREMOVE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;find &lt;span class=&quot;nv&quot;&gt;$WEBDIR&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; d &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-mtime&lt;/span&gt; +30&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$TOREMOVE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
		&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;done

done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;94-io-重定向和循环&quot;&gt;9.4 I/O 重定向和循环&lt;/h3&gt;

&lt;h4 id=&quot;941-输入重定向&quot;&gt;9.4.1 输入重定向&lt;/h4&gt;

&lt;p&gt;除了通过一条命令的测试结果或用户的输入来控制循环以外，还可以指定一个文件，通过它来读取输入，借此控制循环。这种情况下，&lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt; 通常是控制命令。只要有输入行的数据交给循环，循环的命令就一直执行。读完所有输入行以后，循环退出。&lt;/p&gt;

&lt;p&gt;因为循环结构基本上可以看作是一条命令的结构，因此重定向应该放在 &lt;code class=&quot;highlighter-rouge&quot;&gt;done&lt;/code&gt; 语句之后。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;command &amp;lt; file&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;what the fuck????&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;942-输出重定向&quot;&gt;9.4.2 输出重定向&lt;/h4&gt;

&lt;p&gt;下例中，&lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; 命令的输出作为 &lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt; 命令的输入，用来控制 &lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt; 循环：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;ARCHIVENR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; +%Y%m%d&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DESTDIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PWD&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/archive-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ARCHIVENR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DESTDIR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

find &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PWD&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; f &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-mtime&lt;/span&gt; +5 | &lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;$'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;00'&lt;/span&gt; file

&lt;span class=&quot;k&quot;&gt;do
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;gzip&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mv&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;.gz &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DESTDIR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; archived&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在当前目录创建子目录，把旧文件都移到那里。&lt;/p&gt;

&lt;h3 id=&quot;95-break-与-continue&quot;&gt;9.5 &lt;code class=&quot;highlighter-rouge&quot;&gt;break&lt;/code&gt; 与 &lt;code class=&quot;highlighter-rouge&quot;&gt;continue&lt;/code&gt;&lt;/h3&gt;

&lt;h4 id=&quot;951-break&quot;&gt;9.5.1 &lt;code class=&quot;highlighter-rouge&quot;&gt;break&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;break&lt;/code&gt; 语句用于在正常结束之前退出当前循环。&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;注意：&lt;code class=&quot;highlighter-rouge&quot;&gt;break&lt;/code&gt; 只是退出当前循环，而非脚本。&lt;/p&gt;

&lt;p&gt;在嵌套循环中，可以指定要退出哪个循环。&lt;/p&gt;

&lt;h4 id=&quot;952-continue&quot;&gt;9.5.2 &lt;code class=&quot;highlighter-rouge&quot;&gt;continue&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;continue&lt;/code&gt; 语句用于继续迭代循环。&lt;/p&gt;

&lt;p&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; 循环中使用时，控制变量会取列表中下一个元素的值。&lt;/p&gt;

&lt;p&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;until&lt;/code&gt; 中使用时，则继续执行 TEST-COMMAND。&lt;/p&gt;

&lt;p&gt;以下脚本会把当前目录中所有文件名有含有大写字母的，一律修改为小写字母：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;LIST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;name &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LIST&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do

if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;:upper:]]&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
continue&lt;/span&gt;  
&lt;span class=&quot;c&quot;&gt;# 如果文件名中不含大写字母，循环运行到这一步就不再往下运行，&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 而是直接取列表中下一个文件名&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ORIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;NEW&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'A-Z'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'a-z'&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;mv&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ORIG&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$NEW&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;new name for &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ORIG&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; is &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$NEW&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;96-用-select-命令做选择菜单&quot;&gt;9.6 用 &lt;code class=&quot;highlighter-rouge&quot;&gt;select&lt;/code&gt; 命令做选择菜单&lt;/h3&gt;

&lt;h4 id=&quot;select-命令&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;select&lt;/code&gt; 命令&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;select&lt;/code&gt; 结构可以生成菜单：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;select WORD [in LIST]; do RESPECTIVE-COMMANDS; done&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;LIST 会被扩展开，生成一个项目列表。该扩展会被输出到标准错误，每个项目前面会自动加上一个序号。如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;in LIST&lt;/code&gt; 不存在，则会把位置参数做为项目打印出来。&lt;/p&gt;

&lt;p&gt;在打印出所有项目后，会打印 &lt;code class=&quot;highlighter-rouge&quot;&gt;PS3&lt;/code&gt; 提示符，并且会从标准输入读取一行。如果该行包含与项目对应的数字之一，WORD 的值会被设置成该项目的名称。如果读取到的输入是空行，这些项目列表和提示符会重新显示一次。&lt;/p&gt;

&lt;p&gt;如果读取到 EOF 字符，循环会退出。&lt;/p&gt;

&lt;p&gt;因为大部分用户都不了解什么组合键是用来产生 EOF 的，因此，如果能单独添加一个含有 &lt;code class=&quot;highlighter-rouge&quot;&gt;break&lt;/code&gt; 命令的项目，算是对用户比较友好了。&lt;/p&gt;

&lt;p&gt;读取到的所有其它的值都会把 WORD 设置为空字符串。&lt;/p&gt;

&lt;p&gt;读取到的这一行内容被保存到变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;REPLY&lt;/code&gt; 中。&lt;/p&gt;

&lt;p&gt;用户每次做出选择，都会执行 RESPECTIVE-COMMANDS 中的命令，直到做出的选择导致了 &lt;code class=&quot;highlighter-rouge&quot;&gt;break&lt;/code&gt; 语句的运行，才会退出循环。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;This script can make any of the files in this directory private.&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Enter the number of the file you want to protect:&quot;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;PS3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Your choice: &quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;QUIT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;QUIT THIS PROGRAM - I feel safe now.&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;touch&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$QUIT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;select &lt;/span&gt;FILENAME &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do
  case&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$FILENAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$QUIT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Exiting.&quot;&lt;/span&gt;
          &lt;span class=&quot;nb&quot;&gt;break&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;You picked &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$FILENAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; (&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$REPLY&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;)&quot;&lt;/span&gt;
          &lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;go-rwx &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$FILENAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;esac&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$QUIT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;子菜单&quot;&gt;子菜单&lt;/h4&gt;

&lt;p&gt;通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;select&lt;/code&gt; 结构的嵌套就可以实现子菜单。&lt;/p&gt;

&lt;p&gt;默认情况下，进行嵌套 &lt;code class=&quot;highlighter-rouge&quot;&gt;select&lt;/code&gt; 循环时，&lt;code class=&quot;highlighter-rouge&quot;&gt;PS3&lt;/code&gt; 变量不会改变，如果需要，可以在子 &lt;code class=&quot;highlighter-rouge&quot;&gt;select&lt;/code&gt; 结构中单独设定。&lt;/p&gt;

&lt;h3 id=&quot;97-shift&quot;&gt;9.7 &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt;&lt;/h3&gt;

&lt;h4 id=&quot;971-shift-简介&quot;&gt;9.7.1 &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; 简介&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; 为 bash 内建命令，接受一个数字 N 做为参数。所有的位置参数会由于这个数字 N 而整体向左移动。于是原来的位置参数 &lt;code class=&quot;highlighter-rouge&quot;&gt;$#&lt;/code&gt; 变成了 &lt;code class=&quot;highlighter-rouge&quot;&gt;$# - N+1&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;假如有个命令使用了 10 个参数，而且 N=4，则 &lt;code class=&quot;highlighter-rouge&quot;&gt;$4&lt;/code&gt; 变成了 &lt;code class=&quot;highlighter-rouge&quot;&gt;$1&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;$5&lt;/code&gt; 变成了 &lt;code class=&quot;highlighter-rouge&quot;&gt;$2&lt;/code&gt; 等等。而原来的 &lt;code class=&quot;highlighter-rouge&quot;&gt;$1&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;$2&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;$3&lt;/code&gt; 被 &lt;strong&gt;丢弃&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;如果 N 为 0 或大于 &lt;code class=&quot;highlighter-rouge&quot;&gt;$#&lt;/code&gt;，位置参数则不会改变，&lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; 命令也没有什么效果。如果 N 不存在，会假定 N=1。&lt;/p&gt;

&lt;p&gt;如果 N 介于 0 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;$#&lt;/code&gt; 之间，则返回状态为 0，否则为非 0。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; 应用的场合主要是某个命令要使用的参数不能提前预知时，用户则可以提前准备许多参数。这种情况下，通常使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt; 循环来处理这些参数，把 &lt;code class=&quot;highlighter-rouge&quot;&gt;(( $# ))&lt;/code&gt; 做为测试条件。只要参数的总数大于 0，条件就为真。&lt;code class=&quot;highlighter-rouge&quot;&gt;$1&lt;/code&gt; 变量和 &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; 语句会处理每一个参数。每次执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; 以后，参数的总数就会减少，直到最终为 0，&lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt; 循环就会退出。&lt;/p&gt;

&lt;h5 id=&quot;范例-1&quot;&gt;范例&lt;/h5&gt;

&lt;p&gt;以下脚本用于删除超过一年以上未访问的文件，使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt; 语句来处理由 &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; 生成的文件列表中的每个文件。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;USAGE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Usage: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; dir1 dir2 dir3 ... dirN&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;$#&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$USAGE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;$#&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do

if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Empty directory, nothing to be done.&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else
	&lt;/span&gt;find &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; f &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-atime&lt;/span&gt; +365 | xargs &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;shift

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;以下脚本用于安装软件包：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$# &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-lt&lt;/span&gt; 1 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
        &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Usage: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; package(s)&quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi
while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$#)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
	&lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CONFIRM&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;
y
&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CONFIRM
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;shift
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;10-变量&quot;&gt;10. 变量&lt;/h2&gt;

&lt;h3 id=&quot;101-变量的类别&quot;&gt;10.1 变量的类别&lt;/h3&gt;

&lt;h4 id=&quot;1011-一般的赋值方法&quot;&gt;10.1.1 一般的赋值方法&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;VARIABLE=string&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;通常在脚本开始处对常量进行赋值，以便整个脚本中可以引用变量名。&lt;/p&gt;

&lt;h4 id=&quot;1012-delcare-命令&quot;&gt;10.1.2 &lt;code class=&quot;highlighter-rouge&quot;&gt;delcare&lt;/code&gt; 命令&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;declare&lt;/code&gt; 为内建命令，用于限制为该变量赋值的范围。一旦使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;delcare&lt;/code&gt; 对变量的赋值范围进行限定，它就只能接受这类的数据了。&lt;/p&gt;

&lt;p&gt;常用的限制为整数、常量或数组。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;declare OPTION(s) VARIABLE=value&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;选项&lt;/th&gt;
      &lt;th&gt;用途&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-a&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;变量是数组&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;仅使用函数名做变量&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;变量会被作为整数处理&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;显示每个变量的属性和值，只要使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; 选项，其它所有选项都会被忽略&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;让变量为只读。不能被后续命令所赋值，也不能被 unset&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-t&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;为变量设置 trace 属性&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-x&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;标记变量，用于通过环境变量导出到后续命令&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;以上选项，如果把 &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; 变成 &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; 就会关闭该选项。&lt;/p&gt;

&lt;p&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;declare&lt;/code&gt; 是在函数中进行的，会创建局部变量。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;VARIABLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;12
&lt;span class=&quot;nv&quot;&gt;$ VARIABLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;string
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$VARIABLE&lt;/span&gt;
0
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; VARIABLE
&lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;VARIABLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;bash 可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; 声明数字变量，但没有选项可以声明字符串变量。因为每个变量默认可以赋予任何数据。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ OTHERVAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;blah
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; OTHERVAR
&lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;OTHERVAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;blah&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;1013-常量&quot;&gt;10.1.3 常量&lt;/h4&gt;

&lt;p&gt;bash 中，通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;readonly&lt;/code&gt; 命令来创建只读变量，来创建常量。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;readonly OPTION VARIABLE(s)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;一经该命令的赋值，该变量的值就再也无法被后续命令修改。&lt;/p&gt;

&lt;p&gt;如果使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt; 选项，则每个变量都是指一个 shell 函数。&lt;/p&gt;

&lt;p&gt;如果使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;-a&lt;/code&gt; 选项，每个变量都是指一个数组变量。&lt;/p&gt;

&lt;p&gt;如果使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; 选项，输出可以被当作输入来重用。&lt;/p&gt;

&lt;p&gt;如果没有使用参数，或使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; 选项，会列出所有只读变量。&lt;/p&gt;

&lt;h3 id=&quot;102-数组变量&quot;&gt;10.2 数组变量&lt;/h3&gt;

&lt;h4 id=&quot;1021-创建数组&quot;&gt;10.2.1 创建数组&lt;/h4&gt;

&lt;p&gt;数组变量包含多个值，所有的变量都可以做为数组来使用。没有数组大小的限制，也不必连续赋值。&lt;/p&gt;

&lt;p&gt;数组是从 0 开始索引的。&lt;/p&gt;

&lt;h5 id=&quot;为数组的某个索引赋值&quot;&gt;为数组的某个索引赋值&lt;/h5&gt;

&lt;p&gt;间接声明数组的一种方式。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ARRAY[INDEXNR]=value&lt;/code&gt;   如 &lt;code class=&quot;highlighter-rouge&quot;&gt;SHIT[0]=thor&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;INDEXNR&lt;/code&gt; 会以算术表达式被对待，必须最终算出一个正数。&lt;/p&gt;

&lt;h5 id=&quot;显式声明数组&quot;&gt;显式声明数组&lt;/h5&gt;

&lt;p&gt;可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;declare&lt;/code&gt; 显式声明一个数组：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;declare -a SHIT&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;声明时如果使用了索引编号，会被忽略。&lt;/p&gt;

&lt;p&gt;可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;declare&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;readonly&lt;/code&gt; 来为数组设定属性。属性会应用到数组中的所有变量中。&lt;/p&gt;

&lt;h5 id=&quot;为数组全部索引赋值&quot;&gt;为数组全部索引赋值&lt;/h5&gt;

&lt;p&gt;间接声明数组的另一种方式。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ARRAY=(value1 value2 ... valueN)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;赋值时如果没有指定索引值，则索引会从 0 开始。&lt;/p&gt;

&lt;h4 id=&quot;1022-引用数组变量&quot;&gt;10.2.2 引用数组变量&lt;/h4&gt;

&lt;p&gt;要想引用数组中某个项目的内容，需要用大括号 &lt;code class=&quot;highlighter-rouge&quot;&gt;{ARRAY[5]}&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ ARRAY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;one two three&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[*]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
one two three

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ARRAY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
one[&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[2]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
three
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果索引号为 &lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 则相当于引用了数组中所有成员。&lt;/p&gt;

&lt;p&gt;如果没有索引号，则相当于引用第一个索引，即 ARRAY[0]。&lt;/p&gt;

&lt;h4 id=&quot;1023-删除数据变量&quot;&gt;10.2.3 删除数据变量&lt;/h4&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;unset&lt;/code&gt; 可以清除整个数组或某个变量成员。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;unset &lt;/span&gt;ARRAY[1]
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[*]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
one three four

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;unset &lt;/span&gt;ARRAY
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[*]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&amp;lt;&lt;span class=&quot;nt&quot;&gt;--no&lt;/span&gt; output--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;1024-范例&quot;&gt;10.2.4 范例&lt;/h4&gt;

&lt;p&gt;把 Apache 配置文件分发到各主机。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;whoami&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'root'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
        &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Must be root to run &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi
if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
        &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Usage: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &amp;lt;/path/to/httpd.conf&amp;gt;&quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;httpd_conf_new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;httpd_conf_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/usr/local/apache/conf&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;htuser

&lt;span class=&quot;nv&quot;&gt;farm_hosts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;web03 web04 web05 web06 web07&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;farm_hosts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[@]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
        &lt;/span&gt;su &lt;span class=&quot;nv&quot;&gt;$login&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;scp &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$httpd_conf_new&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;httpd_conf_path&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
        su &lt;span class=&quot;nv&quot;&gt;$login&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ssh &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; sudo /usr/local/apache/bin/apachectl graceful&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;某公司网站上有一些演示程序，每周要由人对所有这些程序进程测试。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# This is get-tester-address.sh&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# First, we test whether bash supports arrays.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# (Support for arrays was only added recently.)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
whotest[0]&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'test'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Failure: arrays not supported in this version of
bash.'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Our list of candidates. (Feel free to add or&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# remove candidates.)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;wholist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;
     &lt;span class=&quot;s1&quot;&gt;'Bob Smith &amp;lt;bob@example.com&amp;gt;'&lt;/span&gt;
     &lt;span class=&quot;s1&quot;&gt;'Jane L. Williams &amp;lt;jane@example.com&amp;gt;'&lt;/span&gt;
     &lt;span class=&quot;s1&quot;&gt;'Eric S. Raymond &amp;lt;esr@example.com&amp;gt;'&lt;/span&gt;
     &lt;span class=&quot;s1&quot;&gt;'Larry Wall &amp;lt;wall@example.com&amp;gt;'&lt;/span&gt;
     &lt;span class=&quot;s1&quot;&gt;'Linus Torvalds &amp;lt;linus@example.com&amp;gt;'&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Count the number of possible testers.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# (Loop until we find an empty string.)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;x&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;wholist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[count]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;x&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do
   &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Now we calculate whose turn it is.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;week&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'+%W'&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;    	&lt;span class=&quot;c&quot;&gt;# The week of the year (0..53).&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;week&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;week&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;#0&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;       	&lt;span class=&quot;c&quot;&gt;# Remove possible leading zero.&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;index = &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$week&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; % &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# week modulo count = the lucky person&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;wholist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[index]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;# Get the lucky person's e-mail address.&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$email&lt;/span&gt;     	&lt;span class=&quot;c&quot;&gt;# Output the person's e-mail address.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;103-对变量的操作&quot;&gt;10.3 对变量的操作&lt;/h3&gt;

&lt;h4 id=&quot;1031-变量长度&quot;&gt;10.3.1 变量长度&lt;/h4&gt;

&lt;p&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;${#VAR}&lt;/code&gt; 来表示变量的字符总数。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$SHELL&lt;/span&gt;
/bin/bash

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${#&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SHELL&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果变量是 &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt;，其变量值会用位置参数的总数或数组元素的数量来替换。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ ARRAY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;one two three&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${#&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ARRAY&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;1032-变量的转换&quot;&gt;10.3.2 变量的转换&lt;/h4&gt;

&lt;h5 id=&quot;变量替换&quot;&gt;变量替换&lt;/h5&gt;

&lt;h6 id=&quot;var-word--或--varword&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${VAR:-WORD}&lt;/code&gt;  或  &lt;code class=&quot;highlighter-rouge&quot;&gt;${VAR:=WORD}&lt;/code&gt;&lt;/h6&gt;

&lt;p&gt;如果 VAR 未定义或为空，就用 WORD 的扩展来替换，否则用变量值替换。即 &lt;strong&gt;只替换空变量&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;常用来做条件测试。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ TEST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mother fucker!'&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TEST&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
mother fucker!
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TEST&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
mother fucker!
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;unset &lt;/span&gt;TEST
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TEST&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
hello
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TEST&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;TEST&lt;/code&gt; 未定义或为空，则结果会显示 shit，否则显示 &lt;code class=&quot;highlighter-rouge&quot;&gt;TEST&lt;/code&gt; 变量的值。&lt;/p&gt;

&lt;h6 id=&quot;varother-或-varother&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${var+$OTHER}&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;${var:+$OTHER}&lt;/code&gt;&lt;/h6&gt;

&lt;p&gt;如果变量已定义，表达式求值结果为 &lt;code class=&quot;highlighter-rouge&quot;&gt;$OTHER&lt;/code&gt;，否则为空。即 &lt;strong&gt;只替换非空变量&lt;/strong&gt;。&lt;/p&gt;

&lt;h5 id=&quot;删除子串&quot;&gt;删除子串&lt;/h5&gt;

&lt;h6 id=&quot;varoffsetlength&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${VAR:OFFSET:LENGTH}&lt;/code&gt;&lt;/h6&gt;

&lt;p&gt;😈 想像在 WORD 中编辑文字，光标在该字符串最前面，现在你想从字符串中截取一部分留下，其余的删除。该语法是指光标向右移动 OFFSET 个字符，从新位置向右保留 LENGTH 个字符。其余的删除。如果 LENGTH 被省略，则从新光标处到字符串结尾的字符都保留。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2017.3.3.bash03.strip.substring.png&quot; alt=&quot;image-center&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;STRING&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;thisisaverylongname&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;STRING&lt;/span&gt;:4&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
isaverylongname
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;STRING&lt;/span&gt;:11:4&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
long
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;varword-及-varword&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${VAR#WORD}&lt;/code&gt; 及 &lt;code class=&quot;highlighter-rouge&quot;&gt;${VAR##WORD}&lt;/code&gt;&lt;/h6&gt;

&lt;p&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;VAR&lt;/code&gt; 中删除子串 &lt;code class=&quot;highlighter-rouge&quot;&gt;WORD&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;WORD&lt;/code&gt; 会被扩展以生成一个模板，用来匹配子串。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${VAR#WORD}&lt;/code&gt; ：从 VAR 的开头删除 WORD 的最短匹配&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${VAR##WORD}&lt;/code&gt; ：从 VAR 的开头删除 WORD 的最长匹配&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ VAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;abcdefg
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;#a*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
bcdefg
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;##a*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果 VAR 是 &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt;，则删除模板的操作符被依次应用于每个位置参数。&lt;/p&gt;

&lt;p&gt;如果 VAR 是用 &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt; 表示的数组变量，操作符则依次应用于数组中的每个成员。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[*]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
one two one three one four

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[*]#one&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
two three four

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[*]#t&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
one wo one hree one four

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[*]#t*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
one wo one hree one four

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[*]##t*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
one one one four
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;varword-及-varword-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${VAR%WORD}&lt;/code&gt; 及 &lt;code class=&quot;highlighter-rouge&quot;&gt;${VAR%%WORD}&lt;/code&gt;&lt;/h6&gt;

&lt;p&gt;与上面相反，这是从字符串的尾部开始匹配的。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$STRING&lt;/span&gt;
thisisaverylongname

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;STRING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
thisisaverylong
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;对变量值进行部分替换&quot;&gt;对变量值进行部分替换&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${VAR/PATTERN/STRING}&lt;/code&gt;  替换第一个匹配&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${VAR//PATTERN/STRING}&lt;/code&gt;  替换所有匹配&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;STRING&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;thisisaverylongname&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;STRING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/name/string&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
thisisaverylongstring
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;11-函数&quot;&gt;11. 函数&lt;/h2&gt;

&lt;h3 id=&quot;111-函数简介&quot;&gt;11.1 函数简介&lt;/h3&gt;

&lt;p&gt;函数就是把命令组合在一起，便于随后执行。给组合（即 routine）起个名字。函数的名字在 shell 或脚本内必须是 &lt;strong&gt;唯一&lt;/strong&gt; 的。&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;函数比别名使用起来更灵活，而且适应用户的环境也更加简单和容易。&lt;/p&gt;

&lt;p&gt;组成函数的所有命令都像一般命令一样地执行。用简单命令名调用一个函数时，与该函数关联的命令列表即被执行。&lt;/p&gt;

&lt;p&gt;如果函数是在当前 shell 被声明，它也会仅在当前 shell 执行，不会产生新进程。&lt;/p&gt;

&lt;p&gt;在进行命令查找时，这些内建命令会先于函数被查找：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;break&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;continue&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;eval&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;exec&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;exit&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;export&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;readonly&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;trap&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;unset&lt;/code&gt;。&lt;/p&gt;

&lt;h4 id=&quot;1111-函数的语法&quot;&gt;11.1.1 函数的语法&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;function TEST { COMMANDS; }&lt;/code&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;function&lt;/code&gt; 为内建命令&lt;/p&gt;

&lt;p&gt;或&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TEST () { COMMANDS; }&lt;/code&gt;  不使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;function&lt;/code&gt; 命令，就必须要使用括号&lt;/p&gt;

&lt;p&gt;以上语法都可以定义函数 TEST。&lt;/p&gt;

&lt;p&gt;括号左右都要有 &lt;strong&gt;空格&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;大括号中的命令列表构成了函数的主体，只要 TEST 作为命令名称被指定，这些命令就会执行。&lt;/p&gt;

&lt;p&gt;函数主体必须以 &lt;strong&gt;分号&lt;/strong&gt; 或 &lt;strong&gt;换行符&lt;/strong&gt; 结束。&lt;/p&gt;

&lt;p&gt;退出状态以函数中最后一个命令为准。&lt;/p&gt;

&lt;h4 id=&quot;1112-函数中的位置参数&quot;&gt;11.1.2 函数中的位置参数&lt;/h4&gt;

&lt;p&gt;函数很像迷你的脚本，它们可以 &lt;strong&gt;接受参数&lt;/strong&gt;、使用 &lt;strong&gt;内部变量&lt;/strong&gt;，还可以向调用它的 shell &lt;strong&gt;返回值&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;函数也会解析位置参数，但其位置参数与传递给命令或脚本的有些不同。&lt;/p&gt;

&lt;p&gt;函数被执行时，传递给函数的参数成为位置参数。&lt;code class=&quot;highlighter-rouge&quot;&gt;$#&lt;/code&gt; 扩展成位置参数的总个数，&lt;code class=&quot;highlighter-rouge&quot;&gt;$0&lt;/code&gt; 不变，bash 变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;FUNCNAME&lt;/code&gt; 更新为该函数名称。&lt;/p&gt;

&lt;p&gt;如果在函数中执行了 &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt; 内建命令，则函数立即结束。返回继续执行调用该函数命令的下一个命令。&lt;/p&gt;

&lt;p&gt;函数结束时，其位置参数的值与参数的个数被恢复成调用函数之前的值。&lt;/p&gt;

&lt;p&gt;函数的返回值经常保存在变量里，以便之后可以引用。函数的返回值经常做为整个脚本的退出码来使用。如 &lt;code class=&quot;highlighter-rouge&quot;&gt;exit $RETVAL&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如果随 &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt; 命令给了一个数字，则将其作为返回值。&lt;/p&gt;

&lt;p&gt;范例：以下为脚本 &lt;code class=&quot;highlighter-rouge&quot;&gt;showparams.sh&lt;/code&gt; 的内容：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Positional parameter 1 for the script is &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&quot;&lt;/span&gt;


&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Positional parameter 1 in the function is &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;RETURN_VALUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;The exit code of this function is &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$RETURN_VALUE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;FUNCPARA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;运行脚本以测试：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./showparams.sh SCRPARA
Positional parameter 1 for the script is SCRPARA.
Positional parameter 1 in the function is FUNCPARA.
The exit code of this function is 0.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;1114-查看函数&quot;&gt;11.1.4 查看函数&lt;/h4&gt;

&lt;p&gt;所有当前 shell 已知的函数都可以通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt; 命令查看。这些函数通常在 &lt;strong&gt;启动配置文件&lt;/strong&gt; 中定义。&lt;/p&gt;

&lt;p&gt;默认情况下，函数被使用后仍然存在，除非用 &lt;code class=&quot;highlighter-rouge&quot;&gt;unset&lt;/code&gt; 来取消定义。&lt;/p&gt;

&lt;p&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;which&lt;/code&gt; 可以查看具体的函数内容。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;which zless
zless is a &lt;span class=&quot;k&quot;&gt;function
&lt;/span&gt;zless &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    zcat &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PAGER&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;112-范例脚本中的函数&quot;&gt;11.2 范例：脚本中的函数&lt;/h3&gt;

&lt;h4 id=&quot;1121-循环使用&quot;&gt;11.2.1 循环使用&lt;/h4&gt;

&lt;p&gt;系统中有很多脚本是 把使用函数作为一个结构化的方法 来管理一系列的命令的。&lt;/p&gt;

&lt;p&gt;例如，在某些 Linux 中，会使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/rc.d/init.d/functions&lt;/code&gt; 文件来专门定义函数，该文件会在所有初始化脚本中被调用。通过这种方法，类似于 “检查进程是否在运行、启动或暂停服务” 等比较通用的任务就只需编写一次就可以了，平时在需要时尽可循环使用。&lt;/p&gt;

&lt;p&gt;用户可以创建自己的 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/functions&lt;/code&gt; 文件，把自己会用到的函数写到其中，使用时，只需在脚本的开始处加上 &lt;code class=&quot;highlighter-rouge&quot;&gt;. /etc/functions&lt;/code&gt; 即可循环使用这些函数了。&lt;/p&gt;

&lt;h4 id=&quot;1122-设置路径&quot;&gt;11.2.2 设置路径&lt;/h4&gt;

&lt;p&gt;这个例子取自 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/profile&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;pathmunge&lt;/code&gt; 函数用于为 root 和其他用户设置路径。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pathmunge &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt; | /bin/egrep &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;(^|:)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:)&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
           if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;after&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
              &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;else
              &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;fi
        fi&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Path manipulation&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
        &lt;/span&gt;pathmunge /sbin
        pathmunge /usr/sbin
        pathmunge /usr/local/sbin
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;pathmunge /usr/X11R6/bin after

&lt;span class=&quot;nb&quot;&gt;unset &lt;/span&gt;pathmunge
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该函数将其第一个参数做为路径名。如果在当前路径尚未加入 &lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt;，则会加进去。&lt;/p&gt;

&lt;p&gt;第二个参数用来指定要加到 &lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt; 的前面还是后面。&lt;/p&gt;

&lt;p&gt;如果是超级用户，则加入 4 个路径，如果是普通用户，只加入最后那个路径。&lt;/p&gt;

&lt;h4 id=&quot;1123-远程备份&quot;&gt;11.2.3 远程备份&lt;/h4&gt;

&lt;p&gt;本例使用 SSH 密钥来进行远程连接，定义了两个函数 &lt;code class=&quot;highlighter-rouge&quot;&gt;buplinux&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;bupbash&lt;/code&gt;，各自都会生成一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;.tar&lt;/code&gt; 文件，然后会进一步压缩，发送给远程服务端。最后删除本地副本。&lt;/p&gt;

&lt;p&gt;星期天的时候只执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;bupbash&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;LOGFILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/nethome/tille/log/backupscript.log&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Starting backups for &lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOGFILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

buplinux&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/nethome/tille/xml/db/linux-basics/&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;TAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Linux.tar&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;BZIP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TAR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.bz2&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;SERVER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rincewind&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;RDIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/var/www/intra/tille/html/training/&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DIR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;cf &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TAR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; src/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xml src/images/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.png src/images/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.eps
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Compressing &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TAR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;...&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOGFILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
bzip2 &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TAR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;...done.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOGFILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Copying to &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SERVER&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;...&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOGFILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
scp &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$BZIP&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SERVER&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$RDIR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/null 2&amp;gt;&amp;amp;1
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;...done.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOGFILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Done backing up Linux course:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Source files, PNG and EPS images.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Rubbish removed.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOGFILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$BZIP&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

bupbash&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/nethome/tille/xml/db/&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;TAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Bash.tar&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;BZIP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TAR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.bz2&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;FILES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bash-programming/&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;SERVER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rincewind&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;RDIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/var/www/intra/tille/html/training/&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DIR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;cf &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TAR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$FILES&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Compressing &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TAR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;...&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOGFILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
bzip2 &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TAR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;...done.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOGFILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Copying to &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SERVER&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;...&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOGFILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
scp &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$BZIP&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SERVER&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$RDIR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/null 2&amp;gt;&amp;amp;1
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;...done.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOGFILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Done backing up Bash course:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$FILES&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Rubbish removed.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOGFILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$BZIP&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;DAY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; +%w&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DAY&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-lt&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;It is &lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; +%A&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, only backing up Bash course.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOGFILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  bupbash
&lt;span class=&quot;k&quot;&gt;else
  &lt;/span&gt;buplinux
  bupbash
&lt;span class=&quot;k&quot;&gt;fi


&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Remote backup &lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; SUCCESS&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;----------&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOGFILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;把脚本交给 &lt;code class=&quot;highlighter-rouge&quot;&gt;cron&lt;/code&gt; 来定期运行，无需用户干预，因此把标准错误重定向给 &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/null&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;虽然完全可以压缩成一条命令：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;c dir_to_backup/ | bzip2 | ssh server &lt;span class=&quot;s2&quot;&gt;&quot;cat &amp;gt; backup.tar.bz2&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;但是，把命令分解会得到更详细的中间记录，有利于排错。&lt;/p&gt;

&lt;h2 id=&quot;12-捕捉信号&quot;&gt;12. 捕捉信号&lt;/h2&gt;

&lt;h3 id=&quot;121-信号&quot;&gt;12.1 信号&lt;/h3&gt;

&lt;h4 id=&quot;1211-信号简介&quot;&gt;12.1.1 信号简介&lt;/h4&gt;

&lt;h5 id=&quot;查阅信号帮助文档&quot;&gt;查阅信号帮助文档&lt;/h5&gt;

&lt;p&gt;一般的 Linux 系统都会有所有可用信号的帮助文档列表，多数情况可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;man 7 signal&lt;/code&gt; 来查阅。&lt;/p&gt;

&lt;p&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;kill -l&lt;/code&gt; 可以查看所有信号的名字。&lt;/p&gt;

&lt;h5 id=&quot;给-bash-发送的信号&quot;&gt;给 bash 发送的信号&lt;/h5&gt;

&lt;p&gt;如果交互式 bash shell 不包含任何的 &lt;code class=&quot;highlighter-rouge&quot;&gt;trap&lt;/code&gt; 命令，则会忽略 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGTERM&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGQUIT&lt;/code&gt; 信号。&lt;/p&gt;

&lt;p&gt;如果启用了作业控制，会捕捉并处理 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGINT&lt;/code&gt; 信号，忽略 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGTTIN&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;SIGTTOU&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;SIGTSTP&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如果是键盘产生的信号，作为命令替换的结果来运行的命令，也会忽略它们。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SIGHUP&lt;/code&gt; 信号默认会 &lt;strong&gt;退出 shell&lt;/strong&gt;。交互式 shell 会给所有运行和暂停的作业发送一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGHUP&lt;/code&gt; 信号，如果希望为了某个进程而禁用该默认行为，可以查看 &lt;code class=&quot;highlighter-rouge&quot;&gt;disown&lt;/code&gt; 命令的帮助文档。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shopt -s huponexit&lt;/code&gt; 可以实现收到 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGHUP&lt;/code&gt; 信号时杀掉所有作业。&lt;/p&gt;

&lt;h5 id=&quot;用-shell-发信号&quot;&gt;用 shell 发信号&lt;/h5&gt;

&lt;p&gt;用 bash shell 可以发送以下信号：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;快捷键&lt;/th&gt;
      &lt;th&gt;作用&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^C&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;中断信号，发送 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGINT&lt;/code&gt; 给前台运行的作业&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^Y&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;延迟休眠信号，运行的进程要从终端读取数据时会被暂停，把控制权交还 shell，然后用户可以把进程放到前台或后台运行，或杀掉。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^Z&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;休眠信号，给运行中进程发送 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGTSTP&lt;/code&gt; 信号，将其暂停，把控制权交还 shell。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;1212-用-kill-发送信号&quot;&gt;12.1.2 用 &lt;code class=&quot;highlighter-rouge&quot;&gt;kill&lt;/code&gt; 发送信号&lt;/h4&gt;

&lt;p&gt;现今大多数 shell，包括 bash，都有 &lt;code class=&quot;highlighter-rouge&quot;&gt;kill&lt;/code&gt; 这个内建命令。在 bash 中，信号的名称和编号都可以做为选项，可以把作业或进程 ID 做为参数。启用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-l&lt;/code&gt; 选项可以反馈退出状态，只要有一个信号成功发送就会返回 0，否则返回非 0。&lt;/p&gt;

&lt;p&gt;如果以 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/bin/kill&lt;/code&gt; 绝对路径运行，可以启用一些额外的选项，如可以杀掉不属于你的进程，可以用进程的名称来做参数。&lt;/p&gt;

&lt;p&gt;执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;kill&lt;/code&gt; 命令时，如果不指定信号，则默认会发送 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGTERM&lt;/code&gt; 信号。&lt;/p&gt;

&lt;p&gt;常用的信号：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;信号名&lt;/th&gt;
      &lt;th&gt;编号&lt;/th&gt;
      &lt;th&gt;作用&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SIGHUP&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;告诉进程其控制终端已关闭&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SIGINT&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;中断进程&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SIGKILL&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;杀掉进程&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SIGTERM&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;优雅终止进程&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SIGSTOP&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;17, 19, 23&lt;/td&gt;
      &lt;td&gt;暂停进程&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a href=&quot;https://liloli.github.io/basic/signal/#2223-linux-%E4%BF%A1%E5%8F%B7%E5%88%97%E8%A1%A8&quot;&gt;更多信号的解释&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;杀掉一个或一系列进程时，普通的认知是先用危险性最小的信号 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGTERM&lt;/code&gt; 来尝试。于是，那些比较在意 &lt;strong&gt;按特定顺序关闭&lt;/strong&gt; 的程序，收到 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGTERM&lt;/code&gt; 信号时，就有机会按照其设计的流程有序地执行。比如 &lt;strong&gt;清除临时文件、关闭打开的文件&lt;/strong&gt; 等操作。&lt;/p&gt;

&lt;p&gt;反之，如果直接给进程发送 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGKILL&lt;/code&gt; 信号，就会剥夺了它清除临时文件再关闭的机会，有可能会造成不可预期的后果。&lt;/p&gt;

&lt;p&gt;如果用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGTERM&lt;/code&gt; 信号无法优雅地结束进程，也许只能用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGINT&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGKILL&lt;/code&gt; 了。例如，当进程对 &lt;code class=&quot;highlighter-rouge&quot;&gt;^C&lt;/code&gt; 没有响应时，最好用 &lt;code class=&quot;highlighter-rouge&quot;&gt;kill -9&lt;/code&gt; 来结束。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ps &lt;span class=&quot;nt&quot;&gt;-ef&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;stuck_process
maud    5607   2214  0 20:05 pts/5    00:00:02 stuck_process

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-9&lt;/span&gt; 5607

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ps &lt;span class=&quot;nt&quot;&gt;-ef&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;stuck_process
maud    5614    2214 0 20:15 pts/5    00:00:00 &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;stuck_process
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果同一个进程启动了多个实例，更适合用 &lt;code class=&quot;highlighter-rouge&quot;&gt;killall&lt;/code&gt; 来干掉。它会作用于指定进程的所有实例。&lt;/p&gt;

&lt;h3 id=&quot;122-trap&quot;&gt;12.2 Trap&lt;/h3&gt;

&lt;h4 id=&quot;1221-trap-简介&quot;&gt;12.2.1 &lt;code class=&quot;highlighter-rouge&quot;&gt;trap&lt;/code&gt; 简介&lt;/h4&gt;

&lt;p&gt;在某些情况下，你可能不希望使用脚本的用户过早地用快捷键退出，例如因为要接受一些输入，或清理临时文件等。&lt;code class=&quot;highlighter-rouge&quot;&gt;trap&lt;/code&gt; 语句会捕捉这些信号，并可以设计成根据捕捉到的信号执行不同的命令。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;trap [COMMANDS] [SIGNALS]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;trap&lt;/code&gt; 会捕捉 SIGNALS 信号，信号的表示可以用标准的信号名称或编号。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果信号是 &lt;code class=&quot;highlighter-rouge&quot;&gt;EXIT&lt;/code&gt; 或 0，shell 退出时会执行 COMMANDS。&lt;/li&gt;
  &lt;li&gt;如果其中一个信号是 &lt;code class=&quot;highlighter-rouge&quot;&gt;DEBUG&lt;/code&gt;，则 COMMANDS 会在每个简单命令之后执行。&lt;/li&gt;
  &lt;li&gt;如果信号是 &lt;code class=&quot;highlighter-rouge&quot;&gt;ERR&lt;/code&gt;，则每当一个简单命令的退出状态为非 0 时才会执行 COMMANDS。&lt;/li&gt;
  &lt;li&gt;如果非 0 的退出状态是从 &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;until&lt;/code&gt; 语句内部得到的，COMMANDS 不会执行。&lt;/li&gt;
  &lt;li&gt;如果逻辑与 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt; 或逻辑或 &lt;code class=&quot;highlighter-rouge&quot;&gt;||&lt;/code&gt; 得到的是非 0 退出状态，COMMANDS 也不会执行。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;trap&lt;/code&gt; 命令自身的退出状态是 0，除非指定了无效的信号。&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;脚本中可以有多个 &lt;code class=&quot;highlighter-rouge&quot;&gt;trap&lt;/code&gt; ，可以为不同的信号定义不同的行为，也可以修改、删除已定义的 &lt;code class=&quot;highlighter-rouge&quot;&gt;trap&lt;/code&gt; 。每个 &lt;code class=&quot;highlighter-rouge&quot;&gt;trap&lt;/code&gt; 也有其作用范围，如果把它放在函数中，它将只在这个函数里有效。&lt;/p&gt;

&lt;h4 id=&quot;1222-exit&quot;&gt;12.2.2 &lt;code class=&quot;highlighter-rouge&quot;&gt;EXIT&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;虽然 &lt;code class=&quot;highlighter-rouge&quot;&gt;EXIT&lt;/code&gt; 通常被当作信号来使用，但实际上它不是真正意义上的信号。&lt;/p&gt;

&lt;p&gt;一个针对 &lt;code class=&quot;highlighter-rouge&quot;&gt;EXIT&lt;/code&gt; 定义的 trap 会在 &lt;strong&gt;脚本因任何原因退出&lt;/strong&gt; 时被执行。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;EXIT&lt;/code&gt; 这个特殊的名字是 POSIX 定义的，可以被任何信号处理器解析，其作用仅仅是在退出脚本时进行一些 &lt;strong&gt;清理&lt;/strong&gt; 工作，它不会做复杂的操作。&lt;/p&gt;

&lt;p&gt;要想退出前进行清理，只需针对 &lt;code class=&quot;highlighter-rouge&quot;&gt;EXIT&lt;/code&gt; 定义一个 trap，调用一个清理函数。虽然 bash 支持，也不要一次 trap 太多信号，其它 shell 中，只有在其它信号都无法促成退出时才会使用它。&lt;/p&gt;

&lt;p class=&quot;notice--warning&quot;&gt;警告：&lt;code class=&quot;highlighter-rouge&quot;&gt;EXIT&lt;/code&gt; 只支持 &lt;strong&gt;非交互式 shell&lt;/strong&gt;，即脚本，在交互式 shell 中是不会被调用的。&lt;/p&gt;

&lt;h4 id=&quot;1223-trap-是捕捉信号的时机&quot;&gt;12.2.3 &lt;code class=&quot;highlighter-rouge&quot;&gt;trap&lt;/code&gt; 是捕捉信号的时机&lt;/h4&gt;

&lt;p class=&quot;notice--success&quot;&gt;当 bash 收到一个被 trap 定义的信号时，如果当前正有一个外部命令在 &lt;strong&gt;前台&lt;/strong&gt; 执行，那么 trap 会等待当前命令 &lt;strong&gt;结束以后&lt;/strong&gt; 再处理信号队列中的信号。如果 bash 正通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;wait&lt;/code&gt; 命令在等待一个 &lt;strong&gt;异步&lt;/strong&gt; 命令，则该信号会促使 &lt;code class=&quot;highlighter-rouge&quot;&gt;wait&lt;/code&gt; &lt;strong&gt;立即返回&lt;/strong&gt;，退出状态会大于 128。&lt;/p&gt;

&lt;h5 id=&quot;外部命令前台运行完才处理信号&quot;&gt;外部命令前台运行完才处理信号&lt;/h5&gt;

&lt;p&gt;当 bash 在 &lt;strong&gt;前台&lt;/strong&gt; 执行一个外部命令时，直到 &lt;strong&gt;进程终止&lt;/strong&gt;，它才会处理接收到的信号。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;trap&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'echo &quot;doing some cleaning&quot;'&lt;/span&gt; EXIT
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;waiting a bit&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sleep &lt;/span&gt;10000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该脚本执行后，如果在终端上直接按 &lt;code class=&quot;highlighter-rouge&quot;&gt;^C&lt;/code&gt; 会立即退出脚本。&lt;/p&gt;

&lt;p&gt;但，如果登陆另一终端，用 &lt;code class=&quot;highlighter-rouge&quot;&gt;kill -SIGINT pid&lt;/code&gt; 来尝试终止该进程，bash 会一直等到 &lt;code class=&quot;highlighter-rouge&quot;&gt;sleep 10000&lt;/code&gt; 运行完毕，才肯调用 &lt;code class=&quot;highlighter-rouge&quot;&gt;trap&lt;/code&gt; 退出脚本，这可能不是你希望看到的结果。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;【 为什么同一信号会出现不同的结果？】
使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;^C&lt;/code&gt; 按键组合会向进程组发送 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGINT&lt;/code&gt; 信号，因此在同一个进程组中的子进程 sleep 也会收到信号，所以它会退出，返回主进程后 trap 捕捉到了信号，脚本退出。
而使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;kill -SIGINT pid&lt;/code&gt; 只会针对脚本这个进程发信号，需要等到 sleep 这个外部命令运行完毕，才能捕捉到信号。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;针对这个问题，一个解决办法是把 sleep 切割成 1 秒的 &lt;strong&gt;小 sleep 循环&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;trap&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'echo &quot;doing some cleaning&quot;'&lt;/span&gt; EXIT
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;waiting a bit&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; :
&lt;span class=&quot;k&quot;&gt;do
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sleep &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样一来，脚本对信号做出反应的机会就大了很多。&lt;/p&gt;

&lt;h5 id=&quot;内部命令立即处理信号&quot;&gt;内部命令立即处理信号&lt;/h5&gt;

&lt;p&gt;所有的 &lt;strong&gt;bash 内部命令&lt;/strong&gt; 都会被非忽略的信号所中断。&lt;/p&gt;

&lt;p&gt;若想实现对信号能立即做出反应，另一个解决办法是使用可被中断的内建命令，比如 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wait&lt;/code&gt;&lt;/strong&gt;：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;trap&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'echo &quot;doing some cleaning&quot;'&lt;/span&gt; EXIT
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;waiting a bit
&lt;span class=&quot;nb&quot;&gt;sleep &lt;/span&gt;10000 &amp;amp; &lt;span class=&quot;nb&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$!&lt;/code&gt; 扩展为新放入后台的进程 ID。把 sleep 放到后台运行，再用内建的 &lt;code class=&quot;highlighter-rouge&quot;&gt;wait&lt;/code&gt; 去等待其执行结束。&lt;/p&gt;

&lt;p&gt;注意：虽然这样一来 &lt;code class=&quot;highlighter-rouge&quot;&gt;^C&lt;/code&gt; 终于可以让脚本退出了，但此时 &lt;code class=&quot;highlighter-rouge&quot;&gt;sleep 10000&lt;/code&gt; 还在后台运行呢，不会被杀掉，而是继续运行。如果希望脚本被终止时，&lt;code class=&quot;highlighter-rouge&quot;&gt;sleep&lt;/code&gt; 这样的 &lt;strong&gt;后台作业也能够被杀掉&lt;/strong&gt;：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;trap&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[[ $pid ]] &amp;amp;&amp;amp; kill $pid'&lt;/span&gt; EXIT
&lt;span class=&quot;nb&quot;&gt;sleep &lt;/span&gt;10000 &amp;amp; &lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$!&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;wait
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样，当脚本无论因何退出时，不仅会立即退出，而且会终止后台运行的 &lt;code class=&quot;highlighter-rouge&quot;&gt;sleep&lt;/code&gt; 作业。&lt;/p&gt;

&lt;p&gt;如果不喜欢 &lt;code class=&quot;highlighter-rouge&quot;&gt;wait&lt;/code&gt;，还可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt;。可以通过从一个永远不会给出任何数据的 &lt;strong&gt;管道&lt;/strong&gt; 中读取数据，来实现一个 &lt;strong&gt;无休止的睡眠&lt;/strong&gt;。&lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt; 会一直阻塞下去，无需像外部命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;sleep&lt;/code&gt; 一样还得持续跟踪。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;trap&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'echo &quot;we get signal&quot;; rm -f ~/fifo'&lt;/span&gt; EXIT
&lt;span class=&quot;nb&quot;&gt;mkfifo&lt;/span&gt; ~/fifo &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit
chmod &lt;/span&gt;400 ~/fifo
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sleeping&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; &amp;lt; ~/fifo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;mkfifo&lt;/code&gt; 创建临时管道，然后将其重定向给标准输入，交给 &lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt;。退出时自动删除临时管道。&lt;/p&gt;

&lt;h4 id=&quot;1224-sigint-注意事项&quot;&gt;12.2.4 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGINT&lt;/code&gt; 注意事项&lt;/h4&gt;

&lt;p&gt;如果选择不用 &lt;code class=&quot;highlighter-rouge&quot;&gt;EXIT&lt;/code&gt; 来 trap，而是用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGINT&lt;/code&gt;，应该要注意的是，进程收到该信号退出时，应该把自己杀掉，而不是单纯的退出，以防止对其调用者造成问题。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;trap&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rm -f &quot;$tempfile&quot;; trap - INT; kill -INT $$'&lt;/span&gt; INT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rm&lt;/code&gt; 删除临时文件，&lt;code class=&quot;highlighter-rouge&quot;&gt;trap - INT&lt;/code&gt; 恢复 INT 默认动作，&lt;code class=&quot;highlighter-rouge&quot;&gt;kill&lt;/code&gt; 杀掉自己。&lt;/p&gt;

&lt;h4 id=&quot;1225-其它范例&quot;&gt;12.2.5 其它范例&lt;/h4&gt;

&lt;h5 id=&quot;检测变量什么时候被使用了&quot;&gt;检测变量什么时候被使用了&lt;/h5&gt;

&lt;p&gt;在调试比较长的脚本时，可能会需要给变量赋予 trace 属性，以便追踪该变量的调试信息。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;VARIABLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;value

&lt;span class=&quot;nb&quot;&gt;trap&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;echo VARIABLE is being used here.&quot;&lt;/span&gt; DEBUG
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;退出时删除垃圾文件&quot;&gt;退出时删除垃圾文件&lt;/h5&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;LOCKFILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/lock/makewhatis.lock

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$LOCKFILE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0

&lt;span class=&quot;nb&quot;&gt;trap&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;{ rm -f &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOCKFILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; ; exit 255; }&quot;&lt;/span&gt; EXIT

&lt;span class=&quot;nb&quot;&gt;touch&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$LOCKFILE&lt;/span&gt;
makewhatis &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;……….&lt;/p&gt;</content><author><name>Hawk Zhang</name><email>imhawkz@gmail.com</email></author><category term="bash" /><category term="for" /><category term="while" /><category term="until" /><category term="变量" /><summary type="html">循环，变量，函数，捕捉信号</summary></entry><entry><title type="html">Bash 入门 02</title><link href="https://linotes.netlify.com/programming/bash02/" rel="alternate" type="text/html" title="Bash 入门 02" /><published>2017-05-03T00:00:00+08:00</published><updated>2017-05-03T00:00:00+08:00</updated><id>https://linotes.netlify.com/programming/bash02</id><content type="html" xml:base="https://linotes.netlify.com/programming/bash02/">&lt;h2 id=&quot;4-正则表达式&quot;&gt;4. 正则表达式&lt;/h2&gt;

&lt;p&gt;Regular Expressions&lt;/p&gt;

&lt;h3 id=&quot;41-正则表达式&quot;&gt;4.1 正则表达式&lt;/h3&gt;

&lt;h4 id=&quot;411-正则表达式简介&quot;&gt;4.1.1 正则表达式简介&lt;/h4&gt;

&lt;p&gt;正则表达式就是用模板来表示一组字符。&lt;/p&gt;

&lt;p&gt;与算术表达式类似，正则表达式也是通过 “用各种操作符连接较小的表达式” 而构建起来的。&lt;/p&gt;

&lt;p&gt;基本的组件是用来匹配 &lt;strong&gt;单个字符&lt;/strong&gt; 的表达式。包括所有字母及标点在内的大部分字符都可用来匹配自己。有特殊含义的 &lt;strong&gt;元字符&lt;/strong&gt; 可以用 &lt;strong&gt;反斜线&lt;/strong&gt; 来转义。&lt;/p&gt;

&lt;h4 id=&quot;412-正则表达式元字符&quot;&gt;4.1.2 正则表达式元字符&lt;/h4&gt;

&lt;p&gt;一个正则表达式后面可以跟一个或多个 &lt;strong&gt;元字符&lt;/strong&gt;。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;元字符：一个字符，并不仅仅表示它自身，而是有特殊的含义。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;正则表达式操作符：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;操作符&lt;/th&gt;
      &lt;th&gt;效果&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;匹配任何单个字符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;最多匹配一次&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;最少匹配一次&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;任意次匹配（零或更多次）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{N}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;前面字符串匹配 N 次&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{N,}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;前面字符串匹配 N 或更多次&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{N,M}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;前面字符串匹配 N ~ M 次&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;若其不在列表的两头、不是列表中某范围的结束点，代表范围&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;匹配行首空字符，或把字符串从范围排除&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;匹配行尾空字符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\b&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;匹配字段外沿相邻空字符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\B&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;匹配字段外非相邻空字符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\&amp;lt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;匹配字段开头空字符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;匹配字段结尾空字符&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;各操作的优先级&quot;&gt;各操作的优先级&lt;/h5&gt;

&lt;p&gt;处理优先级从高到低：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(R)&lt;/code&gt; 组合操作&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;R*&lt;/code&gt; 数量限定操作&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;R1R2&lt;/code&gt; 串接操作&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;R1 | R2&lt;/code&gt; 选择操作&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;为了避免括号，星号有最高优先级，接着是串接，接着是选择。如果没有歧义则可以省略括号。&lt;/p&gt;

&lt;p&gt;因此 &lt;code class=&quot;highlighter-rouge&quot;&gt;ab*c|d&lt;/code&gt; 会被解析为 &lt;code class=&quot;highlighter-rouge&quot;&gt;((a(b*))c)|d&lt;/code&gt;。解析流程：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;因为没有括号，所以首先处理数量限定操作 &lt;code class=&quot;highlighter-rouge&quot;&gt;b*&lt;/code&gt;，得到 &lt;code class=&quot;highlighter-rouge&quot;&gt;(b*)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;再处理串接操作 &lt;code class=&quot;highlighter-rouge&quot;&gt;a(b*)c&lt;/code&gt;，得到 &lt;code class=&quot;highlighter-rouge&quot;&gt;(a(b*)c)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;最后处理选择操作，得到 &lt;code class=&quot;highlighter-rouge&quot;&gt;((a(b*))c)|d&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;组合操作&quot;&gt;组合操作&lt;/h6&gt;

&lt;p&gt;用 &lt;strong&gt;括号&lt;/strong&gt; 把字符强制组合在一起，组合操作具有最高优先级。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;go!(go!)*&lt;/code&gt; 匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;go!&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;go!go!&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;go!go!go!&lt;/code&gt; 等。&lt;/p&gt;

&lt;h6 id=&quot;数量限定操作&quot;&gt;数量限定操作&lt;/h6&gt;

&lt;p&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 等操作符来限定左侧字符串出现的次数。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;booo*&lt;/code&gt; 匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;boo&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;booo&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;boooo&lt;/code&gt; 等。&lt;/p&gt;

&lt;h6 id=&quot;串接操作&quot;&gt;串接操作&lt;/h6&gt;

&lt;p&gt;Concatenation&lt;/p&gt;

&lt;p&gt;把两个正则表达式直接放在一起就是串接操作。相邻的字符默认为串接关系。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;f&lt;/code&gt; 串接 &lt;code class=&quot;highlighter-rouge&quot;&gt;o&lt;/code&gt; 得到 &lt;code class=&quot;highlighter-rouge&quot;&gt;fo&lt;/code&gt;，只匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;fo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;f&lt;/code&gt; 串接 &lt;code class=&quot;highlighter-rouge&quot;&gt;o*&lt;/code&gt; 得到 &lt;code class=&quot;highlighter-rouge&quot;&gt;fo*&lt;/code&gt;，匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;fo&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;fool&lt;/code&gt; 等&lt;/p&gt;

&lt;h6 id=&quot;选择操作&quot;&gt;选择操作&lt;/h6&gt;

&lt;p&gt;Alternation&lt;/p&gt;

&lt;p&gt;两个正则表达式可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt; 操作符连接起来，得到的表达式匹配它们的 &lt;strong&gt;或集&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;trick|treat&lt;/code&gt; 匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;trick&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;treat&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;413-基本正则表达式与扩展正则表达式&quot;&gt;4.1.3 基本正则表达式与扩展正则表达式&lt;/h4&gt;

&lt;p&gt;POSIX 定义了两种正则表达式语法：基本正则表达式（BRE）和扩展正则表达式（ERE）。&lt;/p&gt;

&lt;p&gt;在 BRE 中，这些元字符失去了其特殊功能，要想让它们再做为元字符使用，必须用反斜线转义：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;{&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;(&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BRE 定义的语法符号&lt;/strong&gt; 包括：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;       - 匹配任意一个字符。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt;      - 字符集匹配，匹配方括号中定义的字符集之一。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[^]&lt;/code&gt;     - 字符集否定匹配，匹配没有在方括号中定义的字符。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt;       - 匹配开始位置。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;       - 匹配结束位置。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\(\)&lt;/code&gt;    - 定义子表达式。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt;      - 子表达式向前引用，n 为 1-9 之间的数字。 由于此功能已超出正则语义，需&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;        要在字符串中回溯，因此需要使用 NFA 算法进行匹配。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;       - 任意次匹配（零次或多次匹配）。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\{m,n\}&lt;/code&gt; - 至少 m 次，至多 n 次匹配；{m} 表示 m 次精确匹配；{m,} 表示至少 m&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;        次匹配。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;ERE&lt;/strong&gt; 修改了 BRE 中的部分语法，并 &lt;strong&gt;增加了以下语法符号&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt;       - 最多一次匹配（零次或一次匹配）。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;       - 至少一次匹配（一次或更多次匹配）。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;       - 或运算，其左右操作数均可以为一个子表达式。&lt;/p&gt;

&lt;p&gt;同时，ERE 在使用子表达式 &lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;/code&gt; 和 次数匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;{m,n}&lt;/code&gt; 语法符号时，不再需要转义符。 与此同时， ERE 也取消了非正则语义的子表达式向前引用能力。&lt;/p&gt;

&lt;p&gt;BRE 和 ERE 共享同样的 &lt;strong&gt;POSIX 字符类定义&lt;/strong&gt;。同时，它们还支持 &lt;strong&gt;字符类比较操作&lt;/strong&gt; “[. .]” 和字符类等效体 “[= =]” 操作，但很少被使用。&lt;/p&gt;

&lt;h3 id=&quot;42-用-grep-做范例&quot;&gt;4.2 用 GREP 做范例&lt;/h3&gt;

&lt;h4 id=&quot;421-grep-简介&quot;&gt;4.2.1 GREP 简介&lt;/h4&gt;

&lt;p&gt;对于给定的模板，grep 会在输入文件中查找匹配的 &lt;strong&gt;行&lt;/strong&gt;，如果在某一行中发现了匹配内容，它默认会将该行的内容复制到标准输出，或用户指定的其它输出。&lt;/p&gt;

&lt;p&gt;如果输入文件的 &lt;strong&gt;结尾&lt;/strong&gt; 不是换行符，grep 会 &lt;strong&gt;自动加上一个换行符&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;因为换行符是分隔符之一，所以无法被匹配。&lt;/p&gt;

&lt;h4 id=&quot;422-grep-与正则表达式&quot;&gt;4.2.2 GREP 与正则表达式&lt;/h4&gt;

&lt;h5 id=&quot;4221-行与字段锚点&quot;&gt;4.2.2.1 行与字段锚点&lt;/h5&gt;

&lt;p&gt;锚点是指定义模板时，关键字的位置，如：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;行首：&lt;code class=&quot;highlighter-rouge&quot;&gt;grep ^root /etc/passwd&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;行尾：&lt;code class=&quot;highlighter-rouge&quot;&gt;gep :$ /etc/passwd&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;字段头：&lt;code class=&quot;highlighter-rouge&quot;&gt;grep '\&amp;lt;PATH' file&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;字段尾：&lt;code class=&quot;highlighter-rouge&quot;&gt;grep 'bash\&amp;gt;' file&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;单独字段：&lt;code class=&quot;highlighter-rouge&quot;&gt;grep -w / /etc/fstab&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;4222-字符类&quot;&gt;4.2.2.2 字符类&lt;/h5&gt;

&lt;p&gt;一对方括号可以用于定义一个字符列表，用来匹配其中的任意 &lt;strong&gt;单个&lt;/strong&gt; 字符。如果列表开头为 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt;&lt;/strong&gt;，表示 &lt;strong&gt;取反&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;如果方括号中的字符列表是一段连续的字符，即某个 &lt;strong&gt;范围&lt;/strong&gt; 内的字符，为了简化，可以在首尾两个字符中间使用 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;&lt;/strong&gt; 来表示，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;[a-d]&lt;/code&gt;。&lt;/p&gt;

&lt;h6 id=&quot;字典顺序&quot;&gt;字典顺序&lt;/h6&gt;

&lt;p&gt;但是，&lt;code class=&quot;highlighter-rouge&quot;&gt;[a-d]&lt;/code&gt; 并不一定代表 &lt;code class=&quot;highlighter-rouge&quot;&gt;[abcd]&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如果系统语系是默认的 C，&lt;code class=&quot;highlighter-rouge&quot;&gt;[a-d]&lt;/code&gt; 是代表 &lt;code class=&quot;highlighter-rouge&quot;&gt;[abcd]&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;但有许多其它语系是按字典顺序来排列字符的，在那些语系中，&lt;code class=&quot;highlighter-rouge&quot;&gt;[a-d]&lt;/code&gt; 代表 &lt;code class=&quot;highlighter-rouge&quot;&gt;[aBbCcDd]&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;因此，如果希望得到预想的结果，建议把 &lt;code class=&quot;highlighter-rouge&quot;&gt;LC-ALL&lt;/code&gt; 变量设置为 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;C&lt;/code&gt;&lt;/strong&gt;。&lt;/p&gt;

&lt;h5 id=&quot;4223-通配符&quot;&gt;4.2.2.3 通配符&lt;/h5&gt;

&lt;h6&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;&lt;/h6&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; 作为通配符时，用来匹配任意单个字符，因此 &lt;code class=&quot;highlighter-rouge&quot;&gt;grep '\&amp;lt;c...r\&amp;gt;'&lt;/code&gt; 可以匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;color&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如果要匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; 本身，即句点，则要使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;grep -F&lt;/code&gt; 选项。&lt;/p&gt;

&lt;h6 id=&quot;-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;&lt;/h6&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 作为通配符时，用来匹配多个字符，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;grep '\&amp;lt;c.*h' .&lt;/code&gt; 匹配当前目录中以 &lt;code class=&quot;highlighter-rouge&quot;&gt;c&lt;/code&gt; 开头 &lt;code class=&quot;highlighter-rouge&quot;&gt;h&lt;/code&gt; 结尾的文件名。&lt;/p&gt;

&lt;p&gt;如果要匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 自身，即星号，可以用 &lt;strong&gt;单引号&lt;/strong&gt; 将其 &lt;strong&gt;引用&lt;/strong&gt;，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;grep '*' /etc/profile&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&quot;43-用-bash-的功能来匹配&quot;&gt;4.3 用 bash 的功能来匹配&lt;/h3&gt;

&lt;h4 id=&quot;431-字符范围&quot;&gt;4.3.1 字符范围&lt;/h4&gt;

&lt;p&gt;除了 grep 和正则表达式，实际上在 shell 中可以直接使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;[ ]&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt; 这些元字符进行匹配，而无需任何第三方程序。&lt;/p&gt;

&lt;p&gt;如果要匹配它们自身，也需要将其 &lt;strong&gt;引用&lt;/strong&gt;，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;'*'&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;*&quot;&lt;/code&gt; 都可以。&lt;/p&gt;

&lt;p&gt;同样可以用 &lt;strong&gt;方括号&lt;/strong&gt; 来指定字符范围：&lt;code class=&quot;highlighter-rouge&quot;&gt;ls -ld [a-cx-z]*&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt; 来取反。&lt;/p&gt;

&lt;h4 id=&quot;432-字符类&quot;&gt;4.3.2 字符类&lt;/h4&gt;

&lt;p&gt;方括号中还以指定字符类，语法为 &lt;code class=&quot;highlighter-rouge&quot;&gt;[:CLASS:]&lt;/code&gt;，其中 &lt;code class=&quot;highlighter-rouge&quot;&gt;CLASS&lt;/code&gt; 是 POSIX 定义的标准，主要有以下值：&lt;/p&gt;

&lt;p&gt;[:alnum:]  字母数字&lt;/p&gt;

&lt;p&gt;[:alpha:]  字母&lt;/p&gt;

&lt;p&gt;[:ascii:]  ASCII 字符&lt;/p&gt;

&lt;p&gt;[:blank:]  空格与制表符&lt;/p&gt;

&lt;p&gt;[:cntrl:]  控制字符&lt;/p&gt;

&lt;p&gt;[:digit:]  数字&lt;/p&gt;

&lt;p&gt;[:graph:]  可见字符（非空白、非控制字符）&lt;/p&gt;

&lt;p&gt;[:lower:]  小写字母&lt;/p&gt;

&lt;p&gt;[:print:]  可见字符与空格&lt;/p&gt;

&lt;p&gt;[:punct:]  标点&lt;/p&gt;

&lt;p&gt;[:space:]  所有空白字符（换行符、空格、制表符）&lt;/p&gt;

&lt;p&gt;[:upper:]  大写字母&lt;/p&gt;

&lt;p&gt;[:word:]  字母、数字、下划线&lt;/p&gt;

&lt;p&gt;[:xdigit:]  十六进制数字&lt;/p&gt;

&lt;p&gt;如果 shell 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;extglob&lt;/code&gt; 选项被启用，还可以使用其它几个扩展的操作符。&lt;/p&gt;

&lt;h2 id=&quot;5-sed&quot;&gt;5. SED&lt;/h2&gt;

&lt;p&gt;GDN sed 流编辑器。&lt;/p&gt;

&lt;h3 id=&quot;51-sed-简介&quot;&gt;5.1 SED 简介&lt;/h3&gt;

&lt;p&gt;SED，&lt;strong&gt;S&lt;/strong&gt;tream &lt;strong&gt;ED&lt;/strong&gt;itor，&lt;strong&gt;流编辑器&lt;/strong&gt; 用于把从文件或管道读取的文本进行一些基本的转换，转换的结果被发送给 &lt;strong&gt;基本输出&lt;/strong&gt;。SED &lt;strong&gt;不会直接修改原始文件&lt;/strong&gt;，可以用重定向将修改结果另存为文件。&lt;/p&gt;

&lt;p&gt;sed 与 &lt;code class=&quot;highlighter-rouge&quot;&gt;vi&lt;/code&gt; 等编辑器的区别在于，它可以 &lt;strong&gt;过滤&lt;/strong&gt; 来自于管道的文本。你无需与其交互，因此 sed 又被称为批处理编辑器。它允许把多个文本编辑的命令保存到脚本中，大大简化了重复的编辑任务。它可以在大量文件中进行 &lt;strong&gt;批量的文本替换&lt;/strong&gt;。&lt;/p&gt;

&lt;h4 id=&quot;sed-命令&quot;&gt;sed 命令&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sed&lt;/code&gt; 程序可以使用正则表达式，进行文本的 &lt;strong&gt;替换&lt;/strong&gt; 和 &lt;strong&gt;删除&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sed SCRIPT INPUTFILE&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h5 id=&quot;sed-编辑命令&quot;&gt;sed 编辑命令&lt;/h5&gt;

&lt;p&gt;其编辑文本的命令与 &lt;code class=&quot;highlighter-rouge&quot;&gt;vi&lt;/code&gt; 有些类似：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;命令&lt;/th&gt;
      &lt;th&gt;作用&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a\&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;在当前行下面追加文本&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;c\&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;修改当前行文本&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;删除匹配行&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;i\&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;在当前行上面插入文本&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;打印匹配行&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;读取文件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;s&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;查找并替换文本&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;w&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;写入文件&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;sed-选项&quot;&gt;sed 选项&lt;/h5&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;选项&lt;/th&gt;
      &lt;th&gt;作用&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-e SCRIPT&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;用 &lt;strong&gt;脚本&lt;/strong&gt; 来处理输入&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;用 &lt;strong&gt;脚本文件&lt;/strong&gt; 中的命令来处理输入&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-n&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;不打印原文件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-V&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;查看 sed 版本&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/^foo/d'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; script2.sed input.txt &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; output.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;52-交互式编辑&quot;&gt;5.2 交互式编辑&lt;/h3&gt;

&lt;h4 id=&quot;521-打印匹配行&quot;&gt;5.2.1 打印匹配行&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/erors/p'&lt;/span&gt; example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-n&lt;/code&gt; 确保不打印全部原文&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt; 打印匹配行&lt;/p&gt;

&lt;h4 id=&quot;522-删除匹配行&quot;&gt;5.2.2 删除匹配行&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/erors/d'&lt;/span&gt; example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt; 删除匹配行。即 &lt;strong&gt;取反&lt;/strong&gt;，打印不匹配的行。&lt;/p&gt;

&lt;h4 id=&quot;523-根据行号限定行&quot;&gt;5.2.3 根据行号限定行&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2,4d'&lt;/span&gt; example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;删除第 2 行 ~ 第 4 行。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'3,$d'&lt;/span&gt; example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;删除第 3 行到末行，即仅保留前 2 行。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/a text/,/This/p'&lt;/span&gt; example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;匹配的起始行为 &lt;code class=&quot;highlighter-rouge&quot;&gt;a text&lt;/code&gt; 所在行，结束行为 &lt;code class=&quot;highlighter-rouge&quot;&gt;This&lt;/code&gt; 所在行。&lt;/p&gt;

&lt;h4 id=&quot;524-查找并替换&quot;&gt;5.2.4 查找并替换&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/erors/errors/'&lt;/span&gt; example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查找 &lt;code class=&quot;highlighter-rouge&quot;&gt;erors&lt;/code&gt;，替换为 &lt;code class=&quot;highlighter-rouge&quot;&gt;errors&lt;/code&gt;，但仅针对每行找到的 &lt;strong&gt;第一个&lt;/strong&gt; 字段。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/erors/errors/g'&lt;/span&gt; example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查找替换所有字段。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/^/&amp;gt; /'&lt;/span&gt; example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在每行开头插入 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt; &lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/$/EOL/'&lt;/span&gt; example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在每行结尾插入 &lt;code class=&quot;highlighter-rouge&quot;&gt;EOL&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/erors/errors/g'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/last/final/g'&lt;/span&gt; example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;同时进行多个查找与替换。&lt;/p&gt;

&lt;h3 id=&quot;53-非交互式编辑&quot;&gt;5.3 非交互式编辑&lt;/h3&gt;

&lt;h4 id=&quot;531-从文件中读取-sed-命令&quot;&gt;5.3.1 从文件中读取 sed 命令&lt;/h4&gt;

&lt;p&gt;可以把多个 sed 命令写入文件，然后用 &lt;code class=&quot;highlighter-rouge&quot;&gt;sed -f file.sed&lt;/code&gt; 选项来执行。创建 sed 文件时，要确保：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;每行结尾不能有空白&lt;/li&gt;
  &lt;li&gt;不能使用引用&lt;/li&gt;
  &lt;li&gt;如果要插入或替换文本，除最后一行外，每行要以反斜线 &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; 结束&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;532-输出文件另存为&quot;&gt;5.3.2 输出文件另存为&lt;/h4&gt;

&lt;p&gt;需要借助输出重定向操作系统 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; 来把输出另存为文件。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;SCRIPT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/home/sandy/scripts/script.sed&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;TEMPFILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/var/tmp/sed.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PID&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.tmp&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;s/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/^M/&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$SCRIPT&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;s/^M/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$TEMPFILE&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;mv&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$TEMPFILE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;6-awk&quot;&gt;6. AWK&lt;/h2&gt;

&lt;h3 id=&quot;61-从-gawk-开始&quot;&gt;6.1 从 gawk 开始&lt;/h3&gt;

&lt;h4 id=&quot;611-gawk-是什么&quot;&gt;6.1.1 gawk 是什么&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 是一个 UNIX 程序，而 &lt;code class=&quot;highlighter-rouge&quot;&gt;gawk&lt;/code&gt; 是其常用的 GNU 版本，它是另一个流编辑器。实际上 &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 程序通常是 &lt;code class=&quot;highlighter-rouge&quot;&gt;gawk&lt;/code&gt; 的符号链接。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 的基本功能是按照 &lt;strong&gt;一个或多个模板&lt;/strong&gt;，查找文件的匹配 &lt;strong&gt;行&lt;/strong&gt; 或 &lt;strong&gt;其它匹配单位&lt;/strong&gt;，可以针对匹配行进行特殊的操作。&lt;/p&gt;

&lt;p&gt;通常的程序是 “程序化” 的，需要在程序中详细描述每一步它应该做什么，很难清楚地表达程序要处理的数据。&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;而 &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 中的众多程序比较特别，它们是 “&lt;strong&gt;数据驱动&lt;/strong&gt;” 的，你可以先描述要处理的 &lt;strong&gt;数据是什么样的&lt;/strong&gt;，然后告诉程序找到这些数据以后要 &lt;strong&gt;做什么&lt;/strong&gt;*。&lt;/p&gt;

&lt;h4 id=&quot;612-gawk-命令&quot;&gt;6.1.2 gawk 命令&lt;/h4&gt;

&lt;p&gt;运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 时，需要指定一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 程序来 &lt;strong&gt;处理匹配数据&lt;/strong&gt;。该程序由一系列规则组成，其中可以包含函数定义、循环、条件等编程组件。每条规则指定 &lt;strong&gt;一个模板&lt;/strong&gt; 用来查找，&lt;strong&gt;一个动作&lt;/strong&gt; 用来处理匹配。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 有多种运行方式，通常使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;awk PROGRAM inputfile(s)&lt;/code&gt; 格式。&lt;/p&gt;

&lt;p&gt;如果要对多个文件、进行多种修改，最好把 &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 命令写入脚本文件，以如下方式运行：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; PROGRAM-FILE inputfile&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;62-print-程序&quot;&gt;6.2 &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt; 程序&lt;/h3&gt;

&lt;h4 id=&quot;621-打印所选字段&quot;&gt;6.2.1 打印所选字段&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt; 命令用于将所选数据打印出来。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 从文件中读取一行时，会基于字段分隔符（FS）将该行分割成字段。&lt;code class=&quot;highlighter-rouge&quot;&gt;FS&lt;/code&gt; 是一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 的变量，默认为一个或多个空白字符。&lt;/p&gt;

&lt;p&gt;变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;$1&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;$2&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;$3&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;$4&lt;/code&gt; 等用于保存分割后的每个字段的值，&lt;code class=&quot;highlighter-rouge&quot;&gt;$0&lt;/code&gt; 用于保存整行的内容。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{ print $5 &quot;\t&quot; $9 }'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;622-格式化字段&quot;&gt;6.2.2 格式化字段&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ldh&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; total | &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{ print &quot;Size is &quot; $5 &quot; bytes for &quot; $9 }'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;要想让  &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 的输出更加易于阅读，还是需要人为地为格式化做些努力。如在适当的位置插入一些文字说明、空格、制表符等。&lt;/p&gt;

&lt;p&gt;需要时还可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;sort&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;head&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;tail&lt;/code&gt; 等来排序、截取。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rnk&lt;/span&gt; 5 | &lt;span class=&quot;nb&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-3&lt;/span&gt; | &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{ print &quot;Partition &quot; $6 &quot;\t: &quot; $5 &quot; used.&quot; }'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;特殊格式化字符&quot;&gt;特殊格式化字符&lt;/h5&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;字符&lt;/th&gt;
      &lt;th&gt;作用&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\a&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;提示音&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;换行符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\t&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;制表符&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;623-print-命令与正则表达式&quot;&gt;6.2.3 &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt; 命令与正则表达式&lt;/h4&gt;

&lt;p&gt;把正则表达式放到一对斜线中，可以用来做模板来匹配。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;awk 'EXPRESSION { PROGRAM }' file(s)&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/dev\/hd/ { print $6 &quot;\t: &quot; $5 }'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/dev\/hd/&lt;/code&gt; 表达式中的斜线必须转义。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/\&amp;lt;(a|x).*\.conf$/ { print $9 }'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;匹配以 a 或 x 开头的 &lt;code class=&quot;highlighter-rouge&quot;&gt;.conf&lt;/code&gt; 文件。表达式中第一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; 为通配符，第二个 &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; 为句点本身，所以被转义。&lt;/p&gt;

&lt;h4 id=&quot;624-在输出中添加注释&quot;&gt;6.2.4 在输出中添加注释&lt;/h4&gt;

&lt;p&gt;要想在输出的前面或后面添加注释，需要使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;BEGIN&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;END&lt;/code&gt; 来标记：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; | &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BEGIN { print &quot;Files found:\n&quot; } /\&amp;lt;[a|x].*\.conf$/ { print $9 }'&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; | &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/\&amp;lt;[a|x].*\.conf$/ { print $9 } END { print \
&quot;these files are found.&quot; }'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;625-gawk-脚本&quot;&gt;6.2.5 gawk 脚本&lt;/h4&gt;

&lt;p&gt;把 &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 命令写入脚本文件，以便重用。&lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 脚本可以包含 &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; &lt;strong&gt;声明&lt;/strong&gt;，通过声明来 &lt;strong&gt;定义模板和动作&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat diskrep.awk
BEGIN { print &quot;*** WARNING WARNING WARNING ***&quot; }
/\&amp;lt;[8|9][0-9]%/ { print &quot;Partition &quot; $6 &quot;\t: &quot; $5 &quot; full!&quot; }
END { print &quot;*** Give money for new disks URGENTLY! ***&quot; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;80% ~ 99%&lt;/code&gt; 。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; diskrep.awk
&lt;span class=&quot;k&quot;&gt;***&lt;/span&gt; WARNING WARNING WARNING &lt;span class=&quot;k&quot;&gt;***&lt;/span&gt;
Partition /usr  : 97% full!
&lt;span class=&quot;k&quot;&gt;***&lt;/span&gt; Give money &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;new disks URGENTLY! &lt;span class=&quot;k&quot;&gt;***&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;63-gawk-变量&quot;&gt;6.3 gawk 变量&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 处理输入文件时，要用到几个变量，其中有的是可修改的，有的是只读的。&lt;/p&gt;

&lt;h4 id=&quot;631-输入字段分隔符&quot;&gt;6.3.1 输入字段分隔符&lt;/h4&gt;

&lt;p&gt;Field Separator，FS&lt;/p&gt;

&lt;p&gt;字段分隔符可以是单个字符，也可以是一个正则表达式，用来控制 &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 如何把输入分割成字段。&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;字段分隔符用内建变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;FS&lt;/code&gt; 表示，注意，它与兼容 POSIX 的 shell 所使用的 &lt;code class=&quot;highlighter-rouge&quot;&gt;IFS&lt;/code&gt; 变量不是一回事。&lt;/p&gt;

&lt;p&gt;字段分隔符的值可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; 来修改。通常对它的定义需要在 &lt;code class=&quot;highlighter-rouge&quot;&gt;BEGIN&lt;/code&gt; 模板中进行：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BEGIN { FS=&quot;:&quot; } { print $1 &quot;\t&quot; $5 }'&lt;/span&gt; /etc/passwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果写到脚本中：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat printnames.awk
BEGIN { FS=&quot;:&quot; }
{ print $1 &quot;\t&quot; $5 }

$ awk -f printnames.awk /etc/passwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;定义分隔符时一定要小心，否则容易出问题。&lt;/p&gt;

&lt;h4 id=&quot;632-输出分隔符&quot;&gt;6.3.2 输出分隔符&lt;/h4&gt;

&lt;h5 id=&quot;6321-输出字段分隔符&quot;&gt;6.3.2.1 输出字段分隔符&lt;/h5&gt;

&lt;p&gt;Output Field Separator，OFS，也是内建变量。通常为空格。&lt;/p&gt;

&lt;p&gt;输出的字段通常用空格分隔，但只有在用逗号来分隔 &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt; 的参数时才会使用：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat test
&lt;/span&gt;record1         data1
record2         data2

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{ print $1 $2}'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#      参数  $1 和 $2 之间没有逗号&lt;/span&gt;
record1data1
record2data2
&lt;span class=&quot;c&quot;&gt;#  输出就不会用空格，而是把 $1$2 做为一个参数&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  所以它们的输出是连在一起的&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{ print $1, $2}'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#                ^  有逗号分隔&lt;/span&gt;
record1 data1
record2 data2
&lt;span class=&quot;c&quot;&gt;# 所以 $1 和 $2 被当作两个参数对待&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 在它们的输出之间自动添加空格&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;6322-输出记录分隔符&quot;&gt;6.3.2.2 输出记录分隔符&lt;/h5&gt;

&lt;p&gt;Output Record Separator，ORS，内建变量。&lt;/p&gt;

&lt;p&gt;一条 &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt; 语句的整体输出称为一条输出记录。每个 &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt; 命令都会产生一个输出记录，其后跟着一个字符串，即 ORS。该变量的默认值为换行符 &lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt;，因此，每条 &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt; 语句才会产生一个单独的行。&lt;/p&gt;

&lt;p&gt;要想修改分割输出字段和输出记录的方式，可以通过为 &lt;code class=&quot;highlighter-rouge&quot;&gt;OFS&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;ORS&lt;/code&gt; 变量赋值：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BEGIN { OFS=&quot;;&quot; ; ORS=&quot;\n--&amp;gt;\n&quot; } \
	{ print $1,$2}'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test
&lt;/span&gt;record1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;data1
&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
record2&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;data2
&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;ORS&lt;/code&gt; 中没有换行符，全部输入就会变成一行。&lt;/p&gt;

&lt;h4 id=&quot;633-记录数&quot;&gt;6.3.3 记录数&lt;/h4&gt;

&lt;p&gt;Number of Records，NR，内建变量。&lt;/p&gt;

&lt;p&gt;该变量用于保存 &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 处理的记录数量。每读取一行新的输入，就会加 1。可以在脚本结尾处，用来统计记录总数。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat processed.awk
BEGIN { OFS=&quot;-&quot; ; ORS=&quot;\n--&amp;gt; done\n&quot; }
{ print &quot;Record number &quot; NR &quot;:\t&quot; $1,$2 }
END { print &quot;Number of records processed: &quot; NR }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;634-自定义变量&quot;&gt;6.3.4 自定义变量&lt;/h4&gt;

&lt;p&gt;除了内建变量，用户可以根据需要来自定义自己的变量。&lt;/p&gt;

&lt;p&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; 遇到对一个新变量的引用，如果该变量之前没有定义，则会立即创建，并为其赋空值。&lt;/p&gt;

&lt;p&gt;可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; 为变量赋值。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat revenues
20021009        20021013        consultancy     BigComp         2500
20021015        20021020        training        EduComp         2000
20021112        20021123        appdev          SmartComp       10000
20021204        20021215        training        EduComp         5000

$ cat total.awk
{ total=total + $5 }
{ print &quot;Send bill for &quot; $5 &quot; dollar to &quot; $4 }
END { print &quot;---------------------------------\nTotal revenue: &quot; total }

$ awk -f total.awk test
Send bill for 2500 dollar to BigComp
Send bill for 2000 dollar to EduComp
Send bill for 10000 dollar to SmartComp
Send bill for 5000 dollar to EduComp
---------------------------------
Total revenue: 19500
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;也支持使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;VAR+= value&lt;/code&gt; 的自增格式。&lt;/p&gt;

&lt;h4 id=&quot;635-printf-命令&quot;&gt;6.3.5 &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt; 命令&lt;/h4&gt;

&lt;p&gt;要想达到更加精确地格式化，可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt; 命令。&lt;/p&gt;

&lt;p&gt;它可以针对每一个具体的字段进行个性化的格式设定。&lt;/p&gt;

&lt;h2 id=&quot;7-条件语句&quot;&gt;7. 条件语句&lt;/h2&gt;

&lt;h3 id=&quot;71-if-简介&quot;&gt;7.1 &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; 简介&lt;/h3&gt;

&lt;h4 id=&quot;711-if-的一般用法&quot;&gt;7.1.1 &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; 的一般用法&lt;/h4&gt;

&lt;p&gt;根据某命令的运行结果来进行下一个操作。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if TEST-COMMANDS; then CONSEQUENT-COMMANDS; fi&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;TEST-COMMANDS&lt;/code&gt; 运行后返回的状态为 0，则会执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;CONSEQUENT-COMMANDS&lt;/code&gt; 中的命令。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CONSEQUENT-COMMANDS&lt;/code&gt; 经常会涉及到对数字或字符串的比较，当然也可以是任何其它命令。&lt;/p&gt;

&lt;p&gt;通常用 &lt;strong&gt;一元表达式&lt;/strong&gt; 来检查文件的状态，如果被检查的文件参数为 &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/fd/N&lt;/code&gt; 形式，则会检查文件描述符 N。&lt;/p&gt;

&lt;p&gt;标准输入、标准输出、标准错误及它们对应的描述符也可以用来测试。&lt;/p&gt;

&lt;h5 id=&quot;7111-常用的-if-表达式&quot;&gt;7.1.1.1 常用的 &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; 表达式&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TEST-COMMANDS&lt;/code&gt; 如果是条件测试，则需要用中括号 &lt;code class=&quot;highlighter-rouge&quot;&gt;[ expressions ]&lt;/code&gt; 把表达式括起来。&lt;/p&gt;

&lt;p&gt;针对文件的条件测试：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;表达式&lt;/th&gt;
      &lt;th&gt;为 &lt;code class=&quot;highlighter-rouge&quot;&gt;真&lt;/code&gt; 的测试结果&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -a FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -b FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，为块设备&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -c FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，为字符设备&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -d FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，为目录&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -e FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -f FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，普通文件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -g FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，SGID 位被设置&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -h FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，符号链接&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -k FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，SBIT 位被设置&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -p FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，FIFO 文件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -r FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，可读&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -s FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，大小大于零&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -t FD ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件描述符被打开，指代某终端&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -u FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，SUID 位被设置&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -w FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，可写&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -x FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，可执行&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -O FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，所有者为 EUID&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -G FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，所有者为 EGID&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -L FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，符号链接&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -N FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，最近读取后被修改过&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -S FILE ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;文件存在，套接字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ FILE1 -nt FILE2 ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FILE1&lt;/code&gt; 的修改时间比 &lt;code class=&quot;highlighter-rouge&quot;&gt;FILE2&lt;/code&gt; 新，或 &lt;code class=&quot;highlighter-rouge&quot;&gt;FILE1&lt;/code&gt; 存在而 &lt;code class=&quot;highlighter-rouge&quot;&gt;FILE2&lt;/code&gt; 不存在&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ FILE1 -ot FILE2 ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FILE1&lt;/code&gt; 的修改时间比 &lt;code class=&quot;highlighter-rouge&quot;&gt;FILE2&lt;/code&gt; 旧，或 &lt;code class=&quot;highlighter-rouge&quot;&gt;FILE2&lt;/code&gt; 存在而 &lt;code class=&quot;highlighter-rouge&quot;&gt;FILE1&lt;/code&gt; 不存在&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ FILE1 -ef FILE2 ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FILE1&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;FILE2&lt;/code&gt; 指向同一个设备、同一个 inode 编号&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;针对选项、字符串、参数的条件测试：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;表达式&lt;/th&gt;
      &lt;th&gt;为 &lt;code class=&quot;highlighter-rouge&quot;&gt;真&lt;/code&gt; 的测试结果&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -o OPTIONNAME ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;shell 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;OPTIONNAME&lt;/code&gt; 选项已启用&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -z STRING ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;STRING&lt;/code&gt; 字符串的长度为 0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ -n STRING ] or [ STRING ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;STRING&lt;/code&gt; 字符串的长度不是 0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ STRING1 == STRING2 ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;两个字符串相同。&lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; 可用 &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; 代替&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ STRING1 != STRING2 ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;两个字符串不同&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ STRING1 &amp;lt; STRING2 ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;在当前语系中，&lt;code class=&quot;highlighter-rouge&quot;&gt;STRING1&lt;/code&gt; 排序在 &lt;code class=&quot;highlighter-rouge&quot;&gt;STRING2&lt;/code&gt; 的前面&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ STRING1 &amp;gt; STRING2 ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;在当前语系中，&lt;code class=&quot;highlighter-rouge&quot;&gt;STRING1&lt;/code&gt; 排序在 &lt;code class=&quot;highlighter-rouge&quot;&gt;STRING2&lt;/code&gt; 的后面&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ ARG1 OP ARG2 ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;OP&lt;/code&gt; 代表操作符，可以是 &lt;code class=&quot;highlighter-rouge&quot;&gt;-eq&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;-ne&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;-lt&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;-le&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;-gt&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;-ge&lt;/code&gt; 之一。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;可以用以下操作符来组合表达式：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;表达式&lt;/th&gt;
      &lt;th&gt;为 &lt;code class=&quot;highlighter-rouge&quot;&gt;真&lt;/code&gt; 的测试结果&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ ! EXPR ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;EXPR&lt;/code&gt; 为假&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ ( EXPR ) ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;返回 &lt;code class=&quot;highlighter-rouge&quot;&gt;EXPR&lt;/code&gt; 的值，用于覆盖操作符的普通优先级&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ EXPR1 -a EXPR2 ]	&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;EXPR1&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;EXPR2&lt;/code&gt; 均为真&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ EXPR1 -o EXPR2 ]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;EXPR1&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;EXPR2&lt;/code&gt; 为真&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;这种 &lt;code class=&quot;highlighter-rouge&quot;&gt;[ ... ]&lt;/code&gt; 格式，或 &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt; 内建命令可以对条件表达式进行测试。&lt;/p&gt;

&lt;h5 id=&quot;7112-then-后面的命令&quot;&gt;7.1.1.2 &lt;code class=&quot;highlighter-rouge&quot;&gt;then&lt;/code&gt; 后面的命令&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;then&lt;/code&gt; 后面的 &lt;code class=&quot;highlighter-rouge&quot;&gt;CONSEQUENT-COMMANDS&lt;/code&gt; 可以是任何有效的 UNIX 命令、可执行程序、可执行脚本、shell 语句，当然除了 &lt;code class=&quot;highlighter-rouge&quot;&gt;fi&lt;/code&gt;。&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;一定要记住，&lt;code class=&quot;highlighter-rouge&quot;&gt;then&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;fi&lt;/code&gt; 在 shell 中被当作单独的语句，因此，如果在命令行中同一行使用时，它们之间必须用分号 &lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;/code&gt; 来分隔。&lt;/p&gt;

&lt;p&gt;在脚本中，&lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; 语句的不同部分通常可以自动分隔。&lt;/p&gt;

&lt;h5 id=&quot;7113-检测文件&quot;&gt;7.1.1.3 检测文件&lt;/h5&gt;

&lt;p&gt;检测文件是否存在：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; /var/log/messages &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/var/log/messages exists.&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;7114-检测-shell-选项&quot;&gt;7.1.1.4 检测 shell 选项&lt;/h5&gt;

&lt;p&gt;可以在启动脚本中添加：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; noclobber &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;then
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Your files are protected against accidental overwriting using redirection.&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;712-if-的常见应用&quot;&gt;7.1.2 &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; 的常见应用&lt;/h4&gt;

&lt;h5 id=&quot;7121-测试退出状态&quot;&gt;7.1.2.1 测试退出状态&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; 变量会保存上一个前台命令的退出状态。&lt;/p&gt;

&lt;p&gt;直接测试 &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; 的值：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;grep $USER /etc/passwd
if [ $? -eq 0 ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;用表达式测试：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if ! grep $USER /etc/passwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;7122-数字的比较&quot;&gt;7.1.2.2 数字的比较&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if [ &quot;$num&quot; -gt &quot;150&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;7123-字符串比较&quot;&gt;7.1.2.3 字符串比较&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if [ &quot;$(whoami)&quot; != 'root' ]; then
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[ &quot;$(whoami)&quot; != 'root' ] &amp;amp;&amp;amp; ( echo you are using a non-privileged account; exit 1 )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;比较语句中也可以使用正则表达式：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if [[ &quot;$gender&quot; == f* ]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;👉 &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt; 命令&lt;/p&gt;

&lt;p&gt;大部分程序员更喜欢用 &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt; 内建命令来进行测试，其效果与方括号是一样的：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;test &quot;$(whoami)&quot; != 'root' &amp;amp;&amp;amp; (echo you are using a non-privileged account; exit 1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;👉 不能用 &lt;code class=&quot;highlighter-rouge&quot;&gt;exit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;因为在子 shell 中调用 &lt;code class=&quot;highlighter-rouge&quot;&gt;exit&lt;/code&gt; 会导致无法传递变量。&lt;/p&gt;

&lt;p&gt;因此，如果不希望 bash 产生子 shell，可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;{ }&lt;/code&gt;，而不用 &lt;code class=&quot;highlighter-rouge&quot;&gt;( )&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&quot;72-if-高级应用&quot;&gt;7.2 &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; 高级应用&lt;/h3&gt;

&lt;h4 id=&quot;721-if--then--else-结构&quot;&gt;7.2.1 &lt;code class=&quot;highlighter-rouge&quot;&gt;if / then / else&lt;/code&gt; 结构&lt;/h4&gt;

&lt;h5 id=&quot;7211-范例&quot;&gt;7.2.1.1 范例&lt;/h5&gt;

&lt;p&gt;该结构可以根据不同的测试结果，分别进行不同的操作。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$gender&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;f*&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;then &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Pleasure to meet you, Madame.&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;How come the lady hasn't got a drink yet?&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;单层方括号与双层方括号的区别：&lt;/p&gt;

&lt;p&gt;双层 &lt;code class=&quot;highlighter-rouge&quot;&gt;[[  ]]&lt;/code&gt; 可以防止变量值被执行 &lt;strong&gt;字段分割&lt;/strong&gt;，还可以防止 &lt;strong&gt;路径扩展&lt;/strong&gt;。&lt;/p&gt;

&lt;h5 id=&quot;7212-检测命令行参数&quot;&gt;7.2.1.2 检测命令行参数&lt;/h5&gt;

&lt;p&gt;在命令行中为变量赋值，比从脚本中赋值来的更加优雅。&lt;/p&gt;

&lt;p&gt;通常使用位置参数 &lt;code class=&quot;highlighter-rouge&quot;&gt;$1&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;$2&lt;/code&gt; 等来完成，&lt;code class=&quot;highlighter-rouge&quot;&gt;$#&lt;/code&gt; 表示命令行参数的总数，&lt;code class=&quot;highlighter-rouge&quot;&gt;$0&lt;/code&gt; 表示脚本名称。&lt;/p&gt;

&lt;p&gt;例脚本内容为：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;idealweight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$[$height&lt;/span&gt; - 110]

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$weight&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-le&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$idealweight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;You should eat a bit more fat.&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;You should eat a bit more fruit.&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;调用脚本：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; weight.sh 55 169
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;7213-测试参数的数量&quot;&gt;7.2.1.3 测试参数的数量&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$#&lt;/code&gt; 表示命令行参数的总数。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$# &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; 2 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Usage: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; weight_in_kilos length_in_centimeters&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;7214-测试文件是否存在&quot;&gt;7.2.1.4 测试文件是否存在&lt;/h5&gt;

&lt;p&gt;许多脚本中经常用到这个测试。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;FILENAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Properties for &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$FILENAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$FILENAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Size is &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-lh&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$FILENAME&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{ print $5 }'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Type is &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;file &lt;span class=&quot;nv&quot;&gt;$FILENAME&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;:&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f2&lt;/span&gt; -&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Inode number is &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$FILENAME&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f1&lt;/span&gt; -&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$FILENAME&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; Mounted | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{ print &quot;On&quot;,$1&quot;, \
which is mounted as the&quot;,$6,&quot;partition.&quot;}'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;File does not exist.&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;722-if--then--elif--else-结构&quot;&gt;7.2.2 &lt;code class=&quot;highlighter-rouge&quot;&gt;if / then / elif / else&lt;/code&gt; 结构&lt;/h4&gt;

&lt;p&gt;基本结构：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;TEST-COMMANDS&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
	&lt;/span&gt;CONSEQUENT-COMMANDS&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif &lt;/span&gt;MORE-TEST-COMMANDS&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
	&lt;/span&gt;MORE-CONSEQUENT-COMMANDS&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else &lt;/span&gt;ALTERNATE-CONSEQUENT-COMMANDS&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;723-if-语句的嵌套&quot;&gt;7.2.3 &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; 语句的嵌套&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; 可以嵌套多层 &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;。&lt;/p&gt;

&lt;h4 id=&quot;724-布尔运算&quot;&gt;7.2.4 布尔运算&lt;/h4&gt;

&lt;p&gt;如果条件很复杂，可以用布尔运算符来连接多个条件：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt; ：表示 &lt;strong&gt;与&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;||&lt;/code&gt; ：表示 &lt;strong&gt;或&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; +%Y&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$year&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; % 400&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$year&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; % 4 == &quot;&lt;/span&gt;0&lt;span class=&quot;s2&quot;&gt;&quot;) &amp;amp;&amp;amp; (&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$year&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; % 100 != &quot;&lt;/span&gt;0&lt;span class=&quot;s2&quot;&gt;&quot;) )); then
	echo &quot;&lt;/span&gt;leap year&lt;span class=&quot;s2&quot;&gt;&quot;
else
	echo &quot;&lt;/span&gt;not leap year&lt;span class=&quot;s2&quot;&gt;&quot;
fi
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;725-exit-语句&quot;&gt;7.2.5 &lt;code class=&quot;highlighter-rouge&quot;&gt;exit&lt;/code&gt; 语句&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exit&lt;/code&gt; 语句会终止脚本的执行，经常用于用户发来的输入请求有误时，或某个语句没有成功运行，或发生其它错误时。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exit&lt;/code&gt; 可以接一个参数，该参数必须是整数，代表退出状态码，它会被传递给父进程，并保存到 &lt;code class=&quot;highlighter-rouge&quot;&gt;$?&lt;/code&gt; 变量中。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exit 0&lt;/code&gt; 表示脚本运行成功，任何其他值都用于针对不同的错误进行不同的操作。如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;exit&lt;/code&gt; 命令没有跟参数，父 shell 会使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;$?&lt;/code&gt; 变量的当前值。&lt;/p&gt;

&lt;h3 id=&quot;73-case-语句&quot;&gt;7.3 &lt;code class=&quot;highlighter-rouge&quot;&gt;case&lt;/code&gt; 语句&lt;/h3&gt;

&lt;h4 id=&quot;731-简化条件&quot;&gt;7.3.1 简化条件&lt;/h4&gt;

&lt;p&gt;虽然可以使用嵌套的 &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; 语句，但如果不同的可能性太多，就会越来越不方便。对于更复杂的条件，建议使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;case&lt;/code&gt; 语句：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; EXPRESSION &lt;span class=&quot;k&quot;&gt;in
&lt;/span&gt;CASE1&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	COMMAND-LIST
	&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
CASE2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	COMMAND-LIST
	&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
 ...
CASEN&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	COMMAND-LIST
	&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;esac&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;8-编写交互式脚本&quot;&gt;8. 编写交互式脚本&lt;/h2&gt;

&lt;h3 id=&quot;81-显示用户消息&quot;&gt;8.1 显示用户消息&lt;/h3&gt;

&lt;h4 id=&quot;811&quot;&gt;8.1.1&lt;/h4&gt;

&lt;p&gt;有些脚本运行时不需要与用户进行任何交互，它们的优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;每次的运行结果可预知&lt;/li&gt;
  &lt;li&gt;可在后台运行&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;然而有些脚本需要用户的输入，或需要给用户提供输出，它们的优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;可以做的更灵活&lt;/li&gt;
  &lt;li&gt;脚本运行时可以有多种可能性&lt;/li&gt;
  &lt;li&gt;脚本运行时可以汇报其运行进度&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;编写交互式脚本时，要尽可能地添加注释。如果脚本能够提示合适的消息，则对用户更友好，更容易调试。否则就等着接投诉电话吧。因此，需要等待时可以提示用户 “当前正在计算，请稍等”，如果计算时间会很久，可以考虑在脚本的输出中添加一个进度提示。&lt;/p&gt;

&lt;p&gt;当提示用户输入时，也应该尽可能详细地说明对输入数据的要求，包括参数和用法等。&lt;/p&gt;

&lt;h4 id=&quot;812-使用-echo&quot;&gt;8.1.2 使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; 为内建命令，它会将其参数输出，用空格分隔，在换行符处终止。返回状态永远是 0。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; 可以用的选项：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-e&lt;/code&gt; ：识别反斜线转义序列，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;\a&lt;/code&gt; 等&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-n&lt;/code&gt; ：行尾不加换行符，输出会紧接着下一个提示符&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下为 &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; 可用的转义序列：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;序列&lt;/th&gt;
      &lt;th&gt;作用&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\a&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;警示字符，提示音&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\b&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;回退字符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\c&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;取消输出中最后一个参数后面的换行符。 &lt;code class=&quot;highlighter-rouge&quot;&gt;\c&lt;/code&gt; 序列后面的所有字符都将被忽略。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\e&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;转义符，用于转义控制字符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\f&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;馈页&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;换行&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\r&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;回车&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\t&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;水平制表符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\v&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;垂直制表符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\\&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;反斜线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\0NNN&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;3 位 8 进制数字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\NNN&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;3 位二进制数字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\xHH&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;2 位十六进制数字&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;【 关于 &lt;code class=&quot;highlighter-rouge&quot;&gt;\e&lt;/code&gt; 转义符 】
ASCII 码的前 32 个字符被保留，做为控制字符，也叫转义序列。这些控制字符不是为了输出可见信息，而是为了控制使用 ASCII 码的设备（打印机、显示器等），或为数据流提供元信息（如磁带中的数据流）。
转义序列通常可以通过 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl&lt;/code&gt;&lt;/strong&gt; 键与其它键的组合来 &lt;strong&gt;模拟&lt;/strong&gt;。
第 &lt;strong&gt;27&lt;/strong&gt; （十进制）个转义符，即八进制的第 33 个（\033），十六进制的 &lt;code class=&quot;highlighter-rouge&quot;&gt;0x1b&lt;/code&gt;，是转义序列符。不同的 shell、不同的语言和工具处理起来会有所不同。可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl - [&lt;/code&gt; 来模拟，即 &lt;code class=&quot;highlighter-rouge&quot;&gt;^[&lt;/code&gt;。
在输出时，要想使用控制字符，必须在其前面加上 &lt;code class=&quot;highlighter-rouge&quot;&gt;\e&lt;/code&gt; 转义符，这样像 &lt;code class=&quot;highlighter-rouge&quot;&gt;echo -e&lt;/code&gt; 这样的命令才能识别。
常见的控制字符：
&lt;strong&gt;7&lt;/strong&gt;，响铃字符，会发出响铃以警示用户。bell，&lt;code class=&quot;highlighter-rouge&quot;&gt;BEL&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;\a&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;^G&lt;/code&gt;
&lt;strong&gt;8&lt;/strong&gt;，覆盖显示前一个字符。backspace，&lt;code class=&quot;highlighter-rouge&quot;&gt;BS&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;\b&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;^H&lt;/code&gt;
&lt;strong&gt;10&lt;/strong&gt;，换行符。line feed，&lt;code class=&quot;highlighter-rouge&quot;&gt;LF&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;^J&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;82-捕捉用户的输入&quot;&gt;8.2 捕捉用户的输入&lt;/h3&gt;

&lt;h4 id=&quot;821-read-命令&quot;&gt;8.2.1 &lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt; 命令&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt; 是内建命令，与 &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; 相反，它要读取用户的输入。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;read [options] NAME1 NAME2 ... NAMEN&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt; 命令会从命令行读取一行，或者从文件描述符中读取。读取到的第一个字段被分配给变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;NAME1&lt;/code&gt;，以此类推。&lt;/p&gt;

&lt;p&gt;变量值中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;IFS&lt;/code&gt; 用于分割输入行。&lt;/p&gt;

&lt;p&gt;反斜线用于转义或继续上行输入。&lt;/p&gt;

&lt;p&gt;如果在 &lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt; 命令中没有指定 &lt;code class=&quot;highlighter-rouge&quot;&gt;NAME1&lt;/code&gt; 这些变量，读取的行会赋予变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;REPLY&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt; 通常返回代码为 0。除非遇到 &lt;code class=&quot;highlighter-rouge&quot;&gt;EOF&lt;/code&gt; 字符，或超时，或参数中的文件描述符无效。&lt;/p&gt;

&lt;h5 id=&quot;read-命令的选项&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt; 命令的选项&lt;/h5&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;选项&lt;/th&gt;
      &lt;th&gt;作用&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-a ANAME&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;字段会被依次分配给数组变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;ANAME&lt;/code&gt;，索引从 0 开始。为该数组赋值之前，会先清空该数组。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-d DELIM&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;用来结束输入行的不再是换行符，而是 &lt;code class=&quot;highlighter-rouge&quot;&gt;DELIM&lt;/code&gt; 中的第一个字符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-e&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;readline&lt;/code&gt; 命令来读取输入行&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-n NCHARS&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt; 命令在读取到 &lt;code class=&quot;highlighter-rouge&quot;&gt;NCHARS&lt;/code&gt; 这个字符后立即返回，而不会读完整行输入&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-p PROMPT&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;在读取输入之前，先在终端上显示一个提示信息 &lt;code class=&quot;highlighter-rouge&quot;&gt;PROMPT&lt;/code&gt;，只对从终端读取输入有效&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;反斜线不再有转义和继续上一行的作用&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-s&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;安静模式，如果从终端读取输入，键入的文字不会被回显&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-t TIMEOUT&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;设置超时，指定时间内如果没有能够读取到一行输入就超时。仅适用于从终端和管道读取输入。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-u FD&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;从文件描述符 FD 中读取输入&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;822-用户输入的提示信息&quot;&gt;8.2.2 用户输入的提示信息&lt;/h4&gt;

&lt;p&gt;在使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt; 命令来读取用户输入时，要确保用户明白你需要的数据是什么。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Enter your name and press [ENTER]: &quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;name
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Enter your gender and press [ENTER]: &quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 1 gender
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;823-重定向与文件描述符&quot;&gt;8.2.3 重定向与文件描述符&lt;/h4&gt;

&lt;h5 id=&quot;8231-一般用法&quot;&gt;8.2.3.1 一般用法&lt;/h5&gt;

&lt;p&gt;脚本中也可以发生重定向，如从文件中读取输入，或把输出发送给文件。&lt;/p&gt;

&lt;p&gt;文件的输入和输出是由文件描述符完成的，最常用的是标准输入、标准输出、标准错误，分别为 0，1，2。&lt;/p&gt;

&lt;p&gt;bash 也可以把网络主机上的 TCP 或 UDP &lt;strong&gt;端口做为文件描述符&lt;/strong&gt; 来使用。&lt;/p&gt;

&lt;p&gt;执行某个命令时，以下步骤会依次发生：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果上一个命令的标准输出正通过管道被定向到当前命令的标准输入，&lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/&amp;lt;current_process_ID&amp;gt;/fd/0&lt;/code&gt; 会更新，指向与 &lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/&amp;lt;previous_process_ID/fd/1&lt;/code&gt; 相同的匿名管道。&lt;/li&gt;
  &lt;li&gt;如果当前命令的标准输出通过管道被重定向到下一个命令的标准输入，&lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/&amp;lt;current_process_ID/fd/1&lt;/code&gt; 会更新，指向另一个匿名管道。&lt;/li&gt;
  &lt;li&gt;针对当前命令的重定向是从左向右处理的&lt;/li&gt;
  &lt;li&gt;一条命令后面的重定向 &lt;code class=&quot;highlighter-rouge&quot;&gt;N&amp;gt;&amp;amp;M&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;N&amp;lt;&amp;amp;M&lt;/code&gt;，其效果等同于用与 &lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/self/fd/M&lt;/code&gt; 相同的目标，来创建或更新符号链接 &lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/self/fd/N&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;重定向 &lt;code class=&quot;highlighter-rouge&quot;&gt;N&amp;gt; file&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;N&amp;lt; file&lt;/code&gt; ，其效果等同于用目标文件创建或更新符号链接 &lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/self/fd/N&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;N&amp;gt;&amp;amp;-&lt;/code&gt; 其效果等同于删除符号链接 &lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/self/fd/N&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;只有到现在，当前的命令才执行&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;从命令行中执行脚本时，不会发生太多的改变，因为子 shell 进程使用的文件描述符与父 shell 相同。如果父进程不存在，如通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;cron&lt;/code&gt; 来运行脚本时，标准的文件描述符是管道或其它临时文件，除非使用重定向。&lt;/p&gt;

&lt;h5 id=&quot;8232-对错误进行重定向&quot;&gt;8.2.3.2 对错误进行重定向&lt;/h5&gt;

&lt;p&gt;重定向标准错误时，一定要记住，&lt;strong&gt;顺序至关重要&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; 2&amp;gt; /var/tmp/unaccessible-in-spool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;把错误重定向到文件。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /var/tmp/spoollist 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;把标准输出和标准错误都重定向到文件：&lt;/p&gt;

&lt;p&gt;先把标准输出重定向到文件，再把标准错误重定向到标准输出。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; 2 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp; 1 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /var/tmp/spoollist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;先把标准错误重定向到当前的标准输出，再把当前的标准输出重定向到文件。因此最终只有标准输出被重定向到文件。&lt;/p&gt;

&lt;p&gt;为了方便，经常把错误重定向到 &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/null&lt;/code&gt;。&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;gt; FILE&lt;/code&gt;&lt;/strong&gt;  等效于 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt; FILE 2&amp;gt;&amp;amp;1&lt;/code&gt;，使用起来更简单。&lt;/p&gt;

&lt;h4 id=&quot;824-文件输入与输出&quot;&gt;8.2.4 文件输入与输出&lt;/h4&gt;

&lt;h5 id=&quot;8241-使用文件描述符&quot;&gt;8.2.4.1 使用文件描述符&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/fd&lt;/code&gt; 目录包含了所有的描述符，如 0，1，2 等。打开文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/fd/N&lt;/code&gt; 相当于复制文件描述符 N。如果当前系统提供 &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/stdin&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/stdout&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/stderr&lt;/code&gt;，你会看到它们只是指向 &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/fd/0&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/fd/1&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/fd/2&lt;/code&gt; 的符号链接。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/fd&lt;/code&gt; 中的文件主要是在 shell 中使用，通过该机制，以路径为参数的那些程序可以像对待其它路径一样来操作这些描述符。 如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/fd&lt;/code&gt; 在当前系统不可用，可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; 来代替标准输入或标准输出。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;filter body.txt.gz | &lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;header.txt - footer.txt | lp
filter body.txt | &lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;header.txt /dev/fd/0 footer.txt | lp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;以上两条命令是等效的，将三个文档打印出来。&lt;/p&gt;

&lt;h5 id=&quot;8242-read-和-exec&quot;&gt;8.2.4.2 &lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;exec&lt;/code&gt;&lt;/h5&gt;

&lt;h6 id=&quot;为文件分配描述符&quot;&gt;为文件分配描述符&lt;/h6&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exec&lt;/code&gt; 命令可用来替换当前的 shell，或更改当前 shell 的描述符。&lt;/p&gt;

&lt;p&gt;例如，可以用来给文件分配一个描述符：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exec fdN&amp;gt; file&lt;/code&gt;  给文件分配描述符，用于输出&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exec fdN&amp;lt; file&lt;/code&gt;  给文件分配描述符，用于输入&lt;/p&gt;

&lt;p&gt;然后就可以在 shell 中直接使用描述符了：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;4&amp;gt; result.txt

filter body.txt | &lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;header.txt /dev/fd/0 footer.txt &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp; 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;给文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;result.txt&lt;/code&gt; 分配描述符 4，用于输出，然后把三个文件的输出及错误全部保存到该文件。&lt;/p&gt;

&lt;p class=&quot;notice--warning&quot;&gt;描述符 5 可能会造成问题，因为 bash 用 &lt;code class=&quot;highlighter-rouge&quot;&gt;exec&lt;/code&gt; 创建子 shell 时，其子进程会继承描述符 5，最好保留这个描述符不要使用。&lt;/p&gt;

&lt;h6 id=&quot;读取脚本&quot;&gt;读取脚本&lt;/h6&gt;

&lt;p&gt;该脚本会把重要的配置文件制作索引，将它们放到一个备份文件中。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/tmp/sysconfig.out
&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$CONFIG&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; 2&amp;gt;/dev/null

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Output will be saved in &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$CONFIG&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;7&amp;lt;&amp;amp;0
&lt;span class=&quot;c&quot;&gt;# 创建描述符 7，用于输入，与描述符 0 的目标相同&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 相当于把描述符 0 的值先保存到 7 里&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &amp;lt; /etc/passwd
&lt;span class=&quot;c&quot;&gt;# 更新描述符 0 为 /etc/passwd 文件，此时标准输入为一个文件&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;rootpasswd
&lt;span class=&quot;c&quot;&gt;# 从标准输入读取数据，相当于读取 passwd 文件的第一行内容&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Your root account info:&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$CONFIG&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 把一行说明信息追加到配置文件中&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$rootpasswd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$CONFIG&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 把从 passwd 读取到的第一行数据追加到配置文件&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;0&amp;lt;&amp;amp;7 7&amp;lt;&amp;amp;-
&lt;span class=&quot;c&quot;&gt;# 把原来保存在描述符 7 里的值还给 0，恢复之前的描述符 0&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 删除描述符 7&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Enter comment or [ENTER] for no comment: &quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;comment&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$comment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$CONFIG&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 此时 read 就会从命令行读取了&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;8243-关闭文件描述符&quot;&gt;8.2.4.3 关闭文件描述符&lt;/h5&gt;

&lt;p&gt;因为子进程会继承打开文件的描述符，所以不再需要时要及时将其关闭：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;7&amp;lt;&amp;amp;-
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;8244-here-文档&quot;&gt;8.2.4.4 Here 文档&lt;/h5&gt;

&lt;p&gt;编写脚本时，调用的程序或脚本经常需要输入。shell 可以通过 here 文档来读取输入，直到某行只包含关键字符串，且其后面没有空白字符。到此行读取的所有内容将一起做为标准输入。&lt;/p&gt;

&lt;p&gt;使用 here 文档就可以免于调用单独的文件了，而且比用一堆 &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; 也简单一些。&lt;/p&gt;

&lt;p&gt;虽然名字叫 here 文档，实际上它是脚本中的一种 &lt;strong&gt;结构&lt;/strong&gt; 而已。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Start here document&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BROWSERS&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;
mozilla
links
lynx
konqueror
opera
netscape
&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BROWSERS
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# End here document&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;……….&lt;/p&gt;</content><author><name>Hawk Zhang</name><email>imhawkz@gmail.com</email></author><category term="shell" /><category term="bash" /><category term="sed" /><category term="awk" /><summary type="html">正则表达式，SED，AWK，条件结构，交互式脚本</summary></entry><entry><title type="html">Bash 入门 01</title><link href="https://linotes.netlify.com/programming/bash01/" rel="alternate" type="text/html" title="Bash 入门 01" /><published>2017-05-03T00:00:00+08:00</published><updated>2017-05-03T00:00:00+08:00</updated><id>https://linotes.netlify.com/programming/bash01</id><content type="html" xml:base="https://linotes.netlify.com/programming/bash01/">&lt;p&gt;Bash Guide for Beginners is a good book.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.tldp.org/LDP/Bash-Beginners-Guide/html/index.html&quot;&gt;《 Bash Guide for Beginners 》&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-bash-与-bash-脚本&quot;&gt;1. Bash 与 Bash 脚本&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;空白字符：空格或制表符&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;11-常用的-shell-程序&quot;&gt;1.1 常用的 shell 程序&lt;/h3&gt;

&lt;p&gt;UNIX 的 shell 程序可以解释用户的命令，无论是用户直接输入的，还是从 shell 脚本读取的。&lt;/p&gt;

&lt;p&gt;Shell 脚本是 &lt;strong&gt;解释&lt;/strong&gt; 型的，而不是编译型的。Shell 从脚本的每一行读取命令，并在系统中搜索这些命令。&lt;/p&gt;

&lt;p&gt;脚本中可以使用可执行文件。&lt;/p&gt;

&lt;p&gt;除了向内核传送命令之外，shell 的主要任务是提供一个用户环境，该环境可用 shell 配置文件来单独配置。&lt;/p&gt;

&lt;h4 id=&quot;shell-类型&quot;&gt;shell 类型&lt;/h4&gt;

&lt;h5 id=&quot;sh&quot;&gt;sh&lt;/h5&gt;

&lt;p&gt;即 Bourne Shell。它是最早的 shell，现在仍在使用。&lt;/p&gt;

&lt;p&gt;它是基本的 shell，特性不多。虽不是标准的 shell，但为了 UNIX 程序的兼容性，仍存在于每个 Linux 系统中。&lt;/p&gt;

&lt;h5 id=&quot;bash&quot;&gt;bash&lt;/h5&gt;

&lt;p&gt;Bourne Again shell。标准的 GNU shell，直观而又灵活。&lt;/p&gt;

&lt;p&gt;初学者最明智的选择，同时对高级和专业用户来说也是一个强有力的工具。在 Linux 上，bash 是普通用户的标准 shell。这个 shell 因此称为 Bourne shell 的超集，一套附件和插件。&lt;/p&gt;

&lt;p&gt;bash 与 sh 是兼容的：在 sh 中可以工作的命令，在 bash 中也能工作，反之则不然。&lt;/p&gt;

&lt;h5 id=&quot;csh&quot;&gt;csh&lt;/h5&gt;

&lt;p&gt;C shell。语法类似于 C 语言，某些时候程序员会使用。&lt;/p&gt;

&lt;h5 id=&quot;tcsh&quot;&gt;tcsh&lt;/h5&gt;

&lt;p&gt;Turbo C shell。普通 C shell 的超集，加强了的用户友好度和速度。&lt;/p&gt;

&lt;h5 id=&quot;ksh&quot;&gt;ksh&lt;/h5&gt;

&lt;p&gt;Korn shell。有时被有 UNIX 背景的人所赏识。&lt;/p&gt;

&lt;p&gt;Bourne shell 的一个超集，有着对初学者来说就是一场恶梦的标准配置。&lt;/p&gt;

&lt;h4 id=&quot;相关文件&quot;&gt;相关文件&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/shells&lt;/code&gt;  文件中保存了当前系统存在的 shell。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/passwd&lt;/code&gt;  文件中，每个用户都有自己默认 shell 的设置。&lt;/p&gt;

&lt;h4 id=&quot;shell-的切换&quot;&gt;shell 的切换&lt;/h4&gt;

&lt;p&gt;要从一个 shell 转换到另外一个，只需在当前终端输入新 shell 的文件名。&lt;/p&gt;

&lt;p&gt;系统在 &lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt; 变量设置的目录中查找。&lt;/p&gt;

&lt;p&gt;新的 shell 会启用新的提示符，因为每个 shell 都有自己的外观。&lt;/p&gt;

&lt;h3 id=&quot;12-bash-的优势&quot;&gt;1.2 Bash 的优势&lt;/h3&gt;

&lt;h4 id=&quot;gnu-shell&quot;&gt;GNU shell&lt;/h4&gt;

&lt;p&gt;GNU 计划为类 UNIX 系统管理提供遵守 UNIX 标准的免费软件。&lt;/p&gt;

&lt;p&gt;Bash 是兼容 sh 的 shell，而且从 Korn shell (ksh) 和 C shell (csh) 整合了一些有用的特性。它遵循 IEEE POSIX P1003.2/ISO 9945.2 Shell 和工具标准。提供了基于 sh 的编程和交互的功能改进；其中包括命令行编辑，无限制的历史命令，作业控制，shell 函数和别名，无大小限制的索引数组，和以 2 到 64 为基础的整数算法。Bash 可以不经修改地运行多数 sh 脚本。&lt;/p&gt;

&lt;p&gt;和其他的 GNU 项目一样，Bash 主动开始保留、保护和促进使用、学习、拷贝、修改和再发布软件的自由。普遍认为这样的情况激发了创造力。这也是 Bash 程序可以而许多其他 shell 无法提供的额外特性的缘由。&lt;/p&gt;

&lt;h4 id=&quot;bash-独有的特性&quot;&gt;Bash 独有的特性&lt;/h4&gt;

&lt;h5 id=&quot;bash-启动脚本&quot;&gt;Bash 启动脚本&lt;/h5&gt;

&lt;p&gt;启动脚本是指当 Bash 启动时会读取并执行的脚本。&lt;/p&gt;

&lt;h6 id=&quot;以交互登陆-shell-调用或者使用-login&quot;&gt;以交互登陆 shell 调用，或者使用 ‘–login’&lt;/h6&gt;

&lt;p&gt;读取的文件：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/profile&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_profile&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt; ~/.bash_login&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.profile&lt;/code&gt;： 读取第一个存在的可读取的文件&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_logout&lt;/code&gt; 退出的时候&lt;/p&gt;

&lt;p&gt;如果配置文件存在但无法读取，将会显示错误消息。一个文件不存在，Bash 会查找下一个。&lt;/p&gt;

&lt;h6 id=&quot;以交互非登陆-shell-调用&quot;&gt;以交互非登陆 shell 调用&lt;/h6&gt;

&lt;p&gt;读取的文件：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bashrc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;此文件通常指向 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_profile&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ~/.bashrc &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; ~/.bashrc&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;非交互调用&quot;&gt;非交互调用&lt;/h6&gt;

&lt;p&gt;所有脚本使用非交互 shell。这些脚本通常仅仅是为了完成特定任务。&lt;/p&gt;

&lt;p&gt;读取的文件：&lt;/p&gt;

&lt;p&gt;由变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;BASH_ENV&lt;/code&gt; 定义&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt; 无法查找脚本文件，所以运行脚本时，最好文件名。&lt;/p&gt;

&lt;h6 id=&quot;以-sh-命令调用&quot;&gt;以 sh 命令调用&lt;/h6&gt;

&lt;p&gt;Bash 尝试 sh 的相似行为，同时也遵循 POSIX 标准。&lt;/p&gt;

&lt;p&gt;读取的文件：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/profile&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.profile&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;当以交互方式调用时，环境变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;ENV&lt;/code&gt; 能指向额外的启动信息。&lt;/p&gt;

&lt;h6 id=&quot;posix-模式&quot;&gt;POSIX 模式&lt;/h6&gt;

&lt;p&gt;本选项在使用内建的命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt; 时会启用：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; posix
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;或用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--posix&lt;/code&gt; 选项来调用 bash 时也会启用 POSIX 模式。&lt;/p&gt;

&lt;p&gt;Bash 会尽可能遵循 POSIX 的 shell 标准。 设置 &lt;code class=&quot;highlighter-rouge&quot;&gt;POSIXLY_CORRECT&lt;/code&gt; 变量可以达到目的。&lt;/p&gt;

&lt;p&gt;读取的文件：&lt;/p&gt;

&lt;p&gt;由变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;ENV&lt;/code&gt; 定义。&lt;/p&gt;

&lt;h6 id=&quot;远程调用&quot;&gt;远程调用&lt;/h6&gt;

&lt;p&gt;以 rshd 调用时读取的文件：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bashrc&lt;/code&gt;&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;【 不要使用 r 系列工具 】使用 rlogin, telnet, rsh 和 rcp 这类工具存在一定的危险。由于他们在网络上传输数据是 &lt;strong&gt;未经加密&lt;/strong&gt; 的，所以他们本质上是不安全的。如果你需要远程执行和文件传输之类的工具，推荐使用 SSH。&lt;/p&gt;

&lt;h6 id=&quot;uid-不等于-euid-时调用&quot;&gt;UID 不等于 EUID 时调用&lt;/h6&gt;

&lt;p&gt;这种情况不会读取任何启动脚本。&lt;/p&gt;

&lt;h5 id=&quot;交互式-shell&quot;&gt;交互式 shell&lt;/h5&gt;

&lt;p&gt;交互式 shell 通常可从终端读取用户的输入，也可以把输出写到终端：输入和输出都与终端相连。&lt;/p&gt;

&lt;p&gt;如果 bash 命令不带任何选项地启动，就会启动 Bash 的交互行为。&lt;/p&gt;

&lt;h6 id=&quot;判断方法&quot;&gt;判断方法&lt;/h6&gt;

&lt;p&gt;如何判断当前 shell 是不是交互式的：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$-&lt;/span&gt;
himBH
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;只要返回的结果中包含 &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; 即代表是交互式的 shell。&lt;/p&gt;

&lt;p&gt;另外，非交互式 shell 不需要命令提示符，所以变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;PS1&lt;/code&gt; 未设置。&lt;/p&gt;

&lt;h6 id=&quot;交互式-shell-的行为特征&quot;&gt;交互式 shell 的行为特征&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;bash 会读取启动脚本&lt;/li&gt;
  &lt;li&gt;默认启用作业控制&lt;/li&gt;
  &lt;li&gt;默认设置命令提示符。同时会启用 &lt;code class=&quot;highlighter-rouge&quot;&gt;PS1&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;PS2&lt;/code&gt; 变量，&lt;code class=&quot;highlighter-rouge&quot;&gt;PS2&lt;/code&gt; 为多行命令的提示符，当用户命令不完整时，回车后也会出现。&lt;/li&gt;
  &lt;li&gt;默认使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;readline&lt;/code&gt; 命令从命令行读取命令&lt;/li&gt;
  &lt;li&gt;读取命令时，bash 如果收到 EOF，它会先检查 &lt;code class=&quot;highlighter-rouge&quot;&gt;ignoreeof&lt;/code&gt; 选项的值，如果它没有设置才会退出&lt;/li&gt;
  &lt;li&gt;默认会启用命令历史和历史扩展，shell 退出时会把命令历史保存到 &lt;code class=&quot;highlighter-rouge&quot;&gt;HISTFILE&lt;/code&gt; 变量所代表的文件中，默认为 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_history&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;默认启用别名扩展&lt;/li&gt;
  &lt;li&gt;如果没有设置 trap，&lt;code class=&quot;highlighter-rouge&quot;&gt;SIGTERM&lt;/code&gt; 信号会被忽略&lt;/li&gt;
  &lt;li&gt;如果没有设置 trap，&lt;code class=&quot;highlighter-rouge&quot;&gt;SIGINT&lt;/code&gt;  信号会被捕捉并处理。&lt;code class=&quot;highlighter-rouge&quot;&gt;^C&lt;/code&gt; 会中断某些内建的命令，但不会导致交互 shell 的退出&lt;/li&gt;
  &lt;li&gt;如果启用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;huponexit&lt;/code&gt; 选项，则退出 shell 时会向所有作业发送 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGHUP&lt;/code&gt; 信号&lt;/li&gt;
  &lt;li&gt;bash 读取到命令会立即执行&lt;/li&gt;
  &lt;li&gt;bash 会定期检查邮件&lt;/li&gt;
  &lt;li&gt;bash 可以配置成遇到未引用的变量就退出，该行为在交互模式下是禁用的&lt;/li&gt;
  &lt;li&gt;shell 内建命令遇到重定向错误时，不会导致 shell 的退出&lt;/li&gt;
  &lt;li&gt;特殊的内建命令在 POSIX 模式返回错误时，不会导致 shell 的退出&lt;/li&gt;
  &lt;li&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;exec&lt;/code&gt; 执行失败，不会导致 shell 的退出&lt;/li&gt;
  &lt;li&gt;解析到语法错误，不会导致 shell 的退出&lt;/li&gt;
  &lt;li&gt;默认对内建命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; 的参数开启简单的拼写检查&lt;/li&gt;
  &lt;li&gt;默认情况下，超过 &lt;code class=&quot;highlighter-rouge&quot;&gt;TMOUT&lt;/code&gt; 变量指定的时间，bash 会自动退出，即超时&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;条件表达式&quot;&gt;条件表达式&lt;/h5&gt;

&lt;p&gt;可以在 &lt;code class=&quot;highlighter-rouge&quot;&gt;[[ ]]&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;[ ]&lt;/code&gt; 中使用条件表达式。&lt;/p&gt;

&lt;p&gt;表达式可以是 &lt;strong&gt;一元&lt;/strong&gt; 或 &lt;strong&gt;二元&lt;/strong&gt; 的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;一元条件表达式&lt;/strong&gt; 经常用来检验文件的状态：&lt;/p&gt;

&lt;p&gt;只需要一个对象，如一个文件，就能执行操作。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;二元条件表达式&lt;/strong&gt; 需要两个对象来执行操作：&lt;/p&gt;

&lt;h5 id=&quot;shell-运算&quot;&gt;shell 运算&lt;/h5&gt;

&lt;p&gt;shell 可以对算术表达式求值，使用 shell 扩展或内建命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt; 来完成。&lt;/p&gt;

&lt;p&gt;赋值时需用等宽整数，不会进行溢出检查，除以 0 会被捕获，并标记为错误。&lt;/p&gt;

&lt;h5 id=&quot;别名&quot;&gt;别名&lt;/h5&gt;

&lt;p&gt;可以用一个简单的字符串来代替另一堆相对复杂的字符串，通过一张别名列表来管理，相关命令为 &lt;code class=&quot;highlighter-rouge&quot;&gt;alias&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;unalias&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;bash 需要把 &lt;strong&gt;一行命令读取完毕&lt;/strong&gt;，才会开始执行其中的命令。而别名的扩展是发生在 &lt;strong&gt;读取命令时&lt;/strong&gt;，而非执行命令时。因此，要想让别名生效，至少要从下一行起。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ls -l'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; l
bash: l: &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;not found...
&lt;span class=&quot;c&quot;&gt;# 别名未生效&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ls -l'&lt;/span&gt;
l
total 2
drwxrwxr-x. 5 neo neo  36 May 17 16:41 aa
drwxrwxr-x. 5 neo neo  36 May 17 16:41 bb
&lt;span class=&quot;c&quot;&gt;# 读取完一整行之后，别名生效&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;对于函数来说，因为函数相当于 &lt;strong&gt;一个&lt;/strong&gt; 复合的命令，因此同样地，需要等到整个函数的定义全部读取完毕，别名才被扩展。&lt;/p&gt;

&lt;h5 id=&quot;数组&quot;&gt;数组&lt;/h5&gt;

&lt;p&gt;bash 支持一维数组变量。&lt;/p&gt;

&lt;p&gt;任何变量都可以用在数组中。&lt;/p&gt;

&lt;p&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;delcare&lt;/code&gt; 内建命令来显示声明数组。&lt;/p&gt;

&lt;p&gt;数组没有大小的限制，成员无需索引，无需连续赋值。&lt;/p&gt;

&lt;h5 id=&quot;目录栈&quot;&gt;目录栈&lt;/h5&gt;

&lt;p&gt;目录栈用于保存最近访问的目录的列表。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pushd dir1&lt;/code&gt;  内建命令用于把指定目录加入列表&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;popd dir2&lt;/code&gt;  内建命令用于把指定目录移出列表&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dirs&lt;/code&gt;  命令可查看列表内容&lt;/p&gt;

&lt;h5 id=&quot;命令提示符&quot;&gt;命令提示符&lt;/h5&gt;

&lt;p&gt;交互式 bash 使用提示符，可以自定义。&lt;/p&gt;

&lt;h5 id=&quot;bash-受限模式&quot;&gt;bash 受限模式&lt;/h5&gt;

&lt;p&gt;如果调用 &lt;code class=&quot;highlighter-rouge&quot;&gt;rbash&lt;/code&gt;，或调用 bash 时使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--restricted&lt;/code&gt; 选项，会发生以下事情：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;内建命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; 被禁用&lt;/li&gt;
  &lt;li&gt;无法修改 &lt;code class=&quot;highlighter-rouge&quot;&gt;SHELL&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;ENV&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;BASH_ENV&lt;/code&gt; 这些变量的值&lt;/li&gt;
  &lt;li&gt;命令中禁止包含斜线&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt; 命令（&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;）后面的文件名禁止包含斜线&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hash -p&lt;/code&gt;  内建命令不接受斜线&lt;/li&gt;
  &lt;li&gt;禁止在启动时导入函数&lt;/li&gt;
  &lt;li&gt;启动时会忽略 &lt;code class=&quot;highlighter-rouge&quot;&gt;SHELLOPTS&lt;/code&gt; 变量&lt;/li&gt;
  &lt;li&gt;禁止使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;|&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;lt;&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;amp;&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;gt;&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;&lt;/code&gt; 进行输出重定向&lt;/li&gt;
  &lt;li&gt;禁用内建命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;exec&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;内建命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;enalbe&lt;/code&gt; 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;-d&lt;/code&gt; 选项被禁用&lt;/li&gt;
  &lt;li&gt;受限模式无法关闭&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;13-命令的执行&quot;&gt;1.3 命令的执行&lt;/h3&gt;

&lt;p&gt;Bash 会判断要执行的程序的类型。&lt;/p&gt;

&lt;p&gt;普通程序为编译好的系统命令，运行时会产生新的进程，因为 bash 生成了一个自己的副本。该子进程拥有相同的环境，只不过 PID 不同。该过程称为 forking。&lt;/p&gt;

&lt;p&gt;forking 之后，子进程的地址空间被新的数据覆盖，是通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;exec&lt;/code&gt; 系统调用实现的。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fork-and-exec&lt;/code&gt; 机制把旧命令转化成新命令，而新程序的环境仍然与原来的相同，包括输入输出设备的配置、环境变量和优先级。这种机制用来创建所有的进程。&lt;/p&gt;

&lt;h4 id=&quot;shell-内建命令&quot;&gt;shell 内建命令&lt;/h4&gt;

&lt;p&gt;内建命令包含于 shell 自身。如果内建程序的名称在一个简单命令中处于最前面，shell 会直接执行该命令，无需生成新的进程。&lt;/p&gt;

&lt;p&gt;bash 支持三种内建命令：&lt;/p&gt;

&lt;h5 id=&quot;sh-内建命令&quot;&gt;sh 内建命令&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;break&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;continue&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;eval&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exec&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;export&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getopts&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hash&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pwd&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;readonly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;times&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;trap&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;umask&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;unset&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;bash-内建命令&quot;&gt;bash 内建命令&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;alias&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;builtin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;command&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;declare&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;enable&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;help&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;local&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;logout&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shopt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;typeset&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ulimit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;unalias&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;特殊内建命令&quot;&gt;特殊内建命令&lt;/h5&gt;

&lt;p&gt;bash 以 POSIX 模式运行时，特殊内建命令主要表现为以下三方面的不同：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;命令查找期间，特殊内建命令会先于 shell 函数被找到&lt;/li&gt;
  &lt;li&gt;如果特殊内建命令返回一个错误状态码，非交互式 shell 会退出&lt;/li&gt;
  &lt;li&gt;命令完成后，在命令之前执行的赋值语句在 shell 环境中仍然有效&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;特殊内建命令：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;break&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;continue&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;eval&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exec&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;export&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;readonly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shift&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;trap&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;unset&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;从脚本中执行程序&quot;&gt;从脚本中执行程序&lt;/h4&gt;

&lt;p&gt;如果被执行的程序是一个脚本，bash 会用 fork 创建一个新的 bash 进程，该子 shell 会逐行读取脚本，加以解释、执行，和直接从键盘上输入命令的效果是一样的。&lt;/p&gt;

&lt;p&gt;在子 shell 逐行处理脚本时，父进程会等着它，处理完脚本所有行，子 shell 就终止了，父 shell 苏醒，并显示提示符。&lt;/p&gt;

&lt;h3 id=&quot;14-shell-的标准组件&quot;&gt;1.4 Shell 的标准组件&lt;/h3&gt;

&lt;p&gt;Bash 是 GNU shell，兼容 sh，并从其他 shell 中吸取了许多有用的功能。&lt;/p&gt;

&lt;p&gt;shell 启动时会读取其配置文件。最重要的几个：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/profile&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_profile&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bashrc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Bash 在交互模式下的行为有所不同, 具有 POSIX 兼容模式和受限模式。&lt;/p&gt;

&lt;p&gt;shell 命令分为：shell 的函数、shell 内建命令以及系统中某目录中的命令。&lt;/p&gt;

&lt;p&gt;Shell 脚本由这些命令组成，并按 shell 的句法规定排列。&lt;/p&gt;

&lt;p&gt;脚本是按行读取和执行的，应该有一个逻辑结构。&lt;/p&gt;

&lt;h4 id=&quot;shell-句法&quot;&gt;Shell 句法&lt;/h4&gt;

&lt;p&gt;如果输入没有被注释掉，shell 会把读取的输入 &lt;strong&gt;分割&lt;/strong&gt; 成文字和操作符，用 &lt;strong&gt;引用规则&lt;/strong&gt; 来定义每个字符的含义。这些文字和操作符于是被 &lt;strong&gt;转化为命令&lt;/strong&gt; 和其它成分，命令会返回一个退出状态。&lt;/p&gt;

&lt;p&gt;只有在 shell 解析完输入之后，该 &lt;code class=&quot;highlighter-rouge&quot;&gt;fork-and-exec&lt;/code&gt; 机制才会起作用。解析过程如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;shell 从文件、字符串或终端 &lt;strong&gt;读取输入&lt;/strong&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;输入按引用规则被 &lt;strong&gt;拆分成&lt;/strong&gt; 文字和操作符，这些 &lt;strong&gt;记号&lt;/strong&gt;（token）用元字符（metacharacter）来分隔，同时进行了别名扩展。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;shell 把这些记号 &lt;strong&gt;解析成&lt;/strong&gt; 简单或复合的 &lt;strong&gt;命令&lt;/strong&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Bash 进行多种 shell &lt;strong&gt;扩展&lt;/strong&gt;，把扩展后的记号转换成文件名列表、命令和参数。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;需要时进行 &lt;strong&gt;重定向&lt;/strong&gt;，把重定向操作符和被重定向的对象从参数列表中移除。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;执行命令。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;需要时，shell 会等待命令的完成，并收集其退出状态。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;shell-命令&quot;&gt;shell 命令&lt;/h4&gt;

&lt;p&gt;简单的 shell 命令由 &lt;strong&gt;命令&lt;/strong&gt; 和 &lt;strong&gt;参数&lt;/strong&gt; 组成，由 &lt;strong&gt;空格&lt;/strong&gt; 分隔。&lt;/p&gt;

&lt;p&gt;再复杂的命令也是由多个简单的命令以某种方式组合在一起的，如管道、循环、条件结构等。&lt;/p&gt;

&lt;h4 id=&quot;shell-函数&quot;&gt;shell 函数&lt;/h4&gt;

&lt;p&gt;使用 shell 函数，可以把多个命令组合在一起，便于稍后用一个名字来执行。函数执行起来就像一个普通的命令，如果把函数名作为命令来运行，与该函数名关联的命令列表就会被执行。&lt;/p&gt;

&lt;p&gt;shell 函数是在当前 shell 执行的，&lt;strong&gt;不会产生新进程&lt;/strong&gt;。&lt;/p&gt;

&lt;h4 id=&quot;shell-参数&quot;&gt;shell 参数&lt;/h4&gt;

&lt;p&gt;参数是可以保存值的实体。它可以是名字、数字或特殊值。&lt;/p&gt;

&lt;p&gt;对于 shell 来说，变量是个参数，用于保存名字。一个变量可以有值，以及零或多个属性。变量可通过内建命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;declare&lt;/code&gt; 创建。&lt;/p&gt;

&lt;p&gt;如果没有给变量赋值，会给变量分配一个 &lt;strong&gt;空字符串&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;变量只能通过内建命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;unset&lt;/code&gt; 来删除。&lt;/p&gt;

&lt;h4 id=&quot;shell-扩展&quot;&gt;shell 扩展&lt;/h4&gt;

&lt;p&gt;每个命令行被分割成记号以后，会进行 shell 扩展：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;括号扩展&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt; 扩展&lt;/li&gt;
  &lt;li&gt;参数和变量扩展&lt;/li&gt;
  &lt;li&gt;命令替换&lt;/li&gt;
  &lt;li&gt;算术扩展&lt;/li&gt;
  &lt;li&gt;单词分割&lt;/li&gt;
  &lt;li&gt;文件名扩展&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;重定向&quot;&gt;重定向&lt;/h4&gt;

&lt;p&gt;在执行命令之前，借助一个特殊符号，其输入和输出可以被重定向。&lt;/p&gt;

&lt;p&gt;重定向也可用于在当前执行环境中打开或关闭文件。&lt;/p&gt;

&lt;h4 id=&quot;命令的执行&quot;&gt;命令的执行&lt;/h4&gt;

&lt;p&gt;执行命令时，解析器标记为 &lt;strong&gt;变量赋值&lt;/strong&gt;（命令名前面）的单词和 &lt;strong&gt;重定向&lt;/strong&gt; 将被 &lt;strong&gt;保存&lt;/strong&gt; 以供后面引用，不属于变量赋值或重定向功能的词将被 &lt;strong&gt;扩展&lt;/strong&gt;；扩展后的第一个剩余单词被视为 &lt;strong&gt;命令&lt;/strong&gt; 的名称，其余的是该命令的 &lt;strong&gt;参数&lt;/strong&gt;。然后执行 &lt;strong&gt;重定向&lt;/strong&gt; 功能, 将分配给变量的字符串扩展开。如果没有找到命令名，变量会在当前 shell 环境继续生效。&lt;/p&gt;

&lt;p&gt;shell 众多任务中最重要的，就是查找命令。以下为查找的流程：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;检查命令中是否包含斜线。如果没有，先从函数列表里面找。&lt;/li&gt;
  &lt;li&gt;如果命令不是函数，再从内建命令中找。&lt;/li&gt;
  &lt;li&gt;如果都不是，从 &lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt; 变量值中定义的各个路径中找。bash 使用哈希表（内存中的数据存储区块）来保存可执行文件的完整路径，可以避免粗放的 &lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt; 查找。&lt;/li&gt;
  &lt;li&gt;如是还没找到，bash 打印错误消息，返回退出状态码 127。&lt;/li&gt;
  &lt;li&gt;如果找到了，或如果命令包含斜线，shell 会在单独的执行环境中执行该命令。&lt;/li&gt;
  &lt;li&gt;如果由于文件非可执行而执行失败，且文件不是目录，则假定其是 shell 脚本。&lt;/li&gt;
  &lt;li&gt;如果命令没有异步地启动，shell 会等待命令执行完毕，然后收集其退出状态。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;shell-脚本&quot;&gt;shell 脚本&lt;/h4&gt;

&lt;p&gt;调用 bash 时，如果脚本被用作第一个非选项参数（不带 &lt;code class=&quot;highlighter-rouge&quot;&gt;-c&lt;/code&gt; 或者 &lt;code class=&quot;highlighter-rouge&quot;&gt;-s&lt;/code&gt;，这两个参数会创建非交互 shell），该 shell 首先会查找脚本文件当前目录，如果没找到，则对环境变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt; 进行查找。&lt;/p&gt;

&lt;h3 id=&quot;15-开发好脚本&quot;&gt;1.5 开发好脚本&lt;/h3&gt;

&lt;h4 id=&quot;好脚本的特质&quot;&gt;好脚本的特质&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;运行无错误&lt;/li&gt;
  &lt;li&gt;能完成预期的任务&lt;/li&gt;
  &lt;li&gt;程序的逻辑清晰、明确&lt;/li&gt;
  &lt;li&gt;不做不必要的工作&lt;/li&gt;
  &lt;li&gt;可被重用&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;脚本的结构&quot;&gt;脚本的结构&lt;/h4&gt;

&lt;p&gt;脚本的结构非常灵活。即使在 bash 中有很大的自由度可以发挥，仍然要确保正确的逻辑、流控制和高效，以便用户可以轻松正确地执行脚本。&lt;/p&gt;

&lt;p&gt;开始着手编写脚本时，问自己几个问题：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;我需要从用户或用户环境中获取任何信息吗？&lt;/li&gt;
  &lt;li&gt;怎么保存这些信息？&lt;/li&gt;
  &lt;li&gt;要创建文件吗？保存在哪？权限？所有人？&lt;/li&gt;
  &lt;li&gt;要用什么命令？如果脚本在其它系统运行，上面有这些命令的所需版本吗？&lt;/li&gt;
  &lt;li&gt;用户要接收通知消息吗？什么时候发送？为什么发送？&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;术语&quot;&gt;术语&lt;/h4&gt;

&lt;p&gt;常用编程术语：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;术语&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;命令控制&lt;/td&gt;
      &lt;td&gt;测试命令的退出状态，以判断这部分代码是否应该执行&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;条件分支&lt;/td&gt;
      &lt;td&gt;代码中的逻辑点，由条件决定下一步该发生什么&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;逻辑流程&lt;/td&gt;
      &lt;td&gt;程序的总体设计。确定任务的逻辑顺序，以确保得到成功且可控的结果&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;循环&lt;/td&gt;
      &lt;td&gt;这部分代码会被执行 0 或多次&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;用户输入&lt;/td&gt;
      &lt;td&gt;程序运行时，由外部源提供的信息，需要时可保存或回调&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;关于顺序与逻辑&quot;&gt;关于顺序与逻辑&lt;/h4&gt;

&lt;p&gt;为了加速开发的进程，程序的 &lt;strong&gt;逻辑顺序&lt;/strong&gt; 应提前考虑充分。这是开发脚本的第一步。&lt;/p&gt;

&lt;p&gt;有多种方法可供使用，最常用的就是使用列表。逐项列出程序中涉及的 &lt;strong&gt;任务列表&lt;/strong&gt; 可帮助描述每段流程，可以用项目编号来引用单个的任务。&lt;/p&gt;

&lt;p&gt;用口语化的语言来 &lt;strong&gt;标记&lt;/strong&gt; 程序中的各项任务，有助于建立便于理解的 &lt;strong&gt;程序框架&lt;/strong&gt;。之后，就可以用 shell 的语言和结构来替换。&lt;/p&gt;

&lt;p&gt;下面的例子示范了这种逻辑流程的设计。描述了日志文件的轮替。&lt;/p&gt;

&lt;p&gt;设计一个重复的循环，用轮替的日志文件数量来控制：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;你想轮替日志吗？
 a. 如果是：
     i. 输入要轮替日志所在的目录
     ii. 输入日志文件基准文件名
     iii. 输入日志需要保存的天数
     iv. 修改用户的 &lt;code class=&quot;highlighter-rouge&quot;&gt;crontab&lt;/code&gt; 文件
 b. 如果不是，跳到第 3 步&lt;/li&gt;
  &lt;li&gt;你要轮替另一组日志吗？
 a. 如果是：重复第 1 步
 b. 如果不是：跳到第 3 步&lt;/li&gt;
  &lt;li&gt;退出&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;用户要提供信息，才能让程序做点什么。必须要获取用户的输入并且保存下来。有必要提醒用户他的 &lt;code class=&quot;highlighter-rouge&quot;&gt;crontab&lt;/code&gt; 文件将会被修改。&lt;/p&gt;

&lt;h2 id=&quot;2-脚本的编写与调试&quot;&gt;2. 脚本的编写与调试&lt;/h2&gt;

&lt;h3 id=&quot;21-创建脚本并运行&quot;&gt;2.1 创建脚本并运行&lt;/h3&gt;

&lt;h4 id=&quot;编写与命名&quot;&gt;编写与命名&lt;/h4&gt;

&lt;p&gt;shell 脚本是一个重复使用的命令序列，通常在命令行中输入脚本的名称来执行。或者，也可以借助 cron 让脚本实现自动化的任务。脚本的另一个用途是在系统启动和关机过程中，在初始化脚本中可以定义守护进程和服务的操作。&lt;/p&gt;

&lt;p&gt;要创建 shell 脚本，请在编辑器中打开一个新的空文件，放里面放几个命令，然后再起个一看就明白的名字，但不要与现有命令名冲突。为了方便，脚本文件通常加后缀 &lt;code class=&quot;highlighter-rouge&quot;&gt;.sh&lt;/code&gt;。即使这样，也有可能同一系统中不同位置存在同名的脚本，可用以下命令帮助确认：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;which &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; script_name
whereis script_name
locate script_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;执行脚本&quot;&gt;执行脚本&lt;/h4&gt;

&lt;p&gt;脚本的所有人要想运行，必须给脚本赋予可执行权限。&lt;/p&gt;

&lt;p&gt;一般情况下，用 &lt;code class=&quot;highlighter-rouge&quot;&gt;./script_name&lt;/code&gt; 的方式来运行脚本。如果当前路径被加入了 &lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt; 变量，则可以直接用脚本名 &lt;code class=&quot;highlighter-rouge&quot;&gt;script_name&lt;/code&gt; 来运行。&lt;/p&gt;

&lt;p&gt;可以把脚本做为参数来运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;bash&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; script_name.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;但通常我们只在需要获取特殊行为时才会执行此操作，例如检查脚本是否可以与另一个 shell 一起工作，或打印用于调试的追踪。指定的 shell 将启动一个当前 shell 的子 shell 来执行脚本。若想让脚本以特定选项启动，或想在特定条件下来启动时，可以用这种方法。&lt;/p&gt;

&lt;p&gt;如果不希望启动一个子 shell 执行脚本，可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt; 来运行：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;script_name.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt; 是内建命令，与 &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; 的作用相同。&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; 最早是 sh 命令。此时脚本不需要可执行权限，命令是在当前 shell 执行的，因此，由此对环境变量造成的任何改变，随后都可以看到。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;script1.sh
&lt;span class=&quot;nt&quot;&gt;--output&lt;/span&gt; ommited--

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$VALUE&lt;/span&gt;
9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;22-脚本基础&quot;&gt;2.2 脚本基础&lt;/h3&gt;

&lt;h4 id=&quot;221-用哪个-shell-来运行脚本&quot;&gt;2.2.1 用哪个 shell 来运行脚本&lt;/h4&gt;

&lt;p&gt;在子 shell 运行脚本时，需要指明用哪个 shell 来运行。你用来编写脚本的 shell 类型有可能不是当前系统的默认 shell，因此如果用错误的 shell 执行时，你输入的命令可能会造成错误。&lt;/p&gt;

&lt;p&gt;脚本的第一行确定要启动的 shell。第一行的前两个字符应该是 &lt;code class=&quot;highlighter-rouge&quot;&gt;#!&lt;/code&gt;，然后就是用来解释后面命令的 shell 的路径。空白行也被视为行，所以不要用空行启动脚本。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;/code&gt;  将会使用在 &lt;code class=&quot;highlighter-rouge&quot;&gt;/bin&lt;/code&gt; 目录中找到的 bash 可执行文件来执行脚本。&lt;/p&gt;

&lt;h4 id=&quot;222-添加注释&quot;&gt;2.2.2 添加注释&lt;/h4&gt;

&lt;p&gt;应该清楚一点，你不会是唯一一个会阅读你写的代码的人，许多用户和系统管理员都会运行别人写的代码。清楚明白的注释会帮助别人了解你是如何编写脚本的。&lt;/p&gt;

&lt;p&gt;注释也会让自己更轻松一些。比如说，为了实现一个特定的结果，你要在脚本中使用某些命令，因此不得不阅读大量的帮助文档。过了几周或几个月，你可能就不记得这些命令是如何工作的了，除非加了充足的注释。&lt;/p&gt;

&lt;p&gt;在一个正式的脚本中，第一行通常注释的内容是该脚本的简介，会发生什么。之后，根据需要，为每一大块命令添加必要的注释。&lt;/p&gt;

&lt;h3 id=&quot;23-调试-bash-脚本&quot;&gt;2.3 调试 bash 脚本&lt;/h3&gt;

&lt;h4 id=&quot;231-调试整个脚本&quot;&gt;2.3.1 调试整个脚本&lt;/h4&gt;

&lt;p&gt;如果脚本没有按预期的工作，就要判断是什么导致了脚本的失败。&lt;/p&gt;

&lt;p&gt;bash 提供了调试功能，最常用的是用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-x&lt;/code&gt; 选项来启动子 shell，会以调试模式来运行整个脚本。在每条命令被扩展后、被执行之前，对该命令和参数的追踪都会打印到标准输出。&lt;/p&gt;

&lt;h4 id=&quot;232-调试部分脚本&quot;&gt;2.3.2 调试部分脚本&lt;/h4&gt;

&lt;p&gt;要想对脚本的局部代码进行调试，可以使用内建命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt;，以普通模式运行，来查看局部代码的调试信息。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;简写&lt;/th&gt;
      &lt;th&gt;长形&lt;/th&gt;
      &lt;th&gt;作用&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;set -f&lt;/td&gt;
      &lt;td&gt;set -o noglob&lt;/td&gt;
      &lt;td&gt;禁止使用元字符（通配）来扩展文件名&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;set -v&lt;/td&gt;
      &lt;td&gt;set -o verbose&lt;/td&gt;
      &lt;td&gt;在 shell 读取输入时，同时显示出来&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;set -x&lt;/td&gt;
      &lt;td&gt;set -o xtrace&lt;/td&gt;
      &lt;td&gt;执行命令之前，显示命令的追踪&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p class=&quot;notice--primary&quot;&gt;用减号 &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; 来激活调试，用加号 &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; 停止调试。&lt;/p&gt;

&lt;h5 id=&quot;用-set-包围局部代码&quot;&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt; 包围局部代码&lt;/h5&gt;

&lt;p&gt;例如，我们不确定某个脚本文件中 &lt;code class=&quot;highlighter-rouge&quot;&gt;w&lt;/code&gt; 命令是如何运行的，则可以在代码中把 &lt;code class=&quot;highlighter-rouge&quot;&gt;w&lt;/code&gt; 命令用 &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt; 包围起来：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt;		&lt;span class=&quot;c&quot;&gt;# 从此处激活调试&lt;/span&gt;
w
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; +x		&lt;span class=&quot;c&quot;&gt;# 从此处停止调试&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;输出将是这样的：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;script1.sh
The script starts now.
Hi, willy!

I will now fetch you a list of connected &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;:

+ w
  5:00pm  up 18 days,  7:00,  4 &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;,  load average: 0.79, 0.39, 0.33
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU  WHAT
root     tty2     -                Sat 2pm  5:47m  0.24s  0.05s  &lt;span class=&quot;nt&quot;&gt;-bash&lt;/span&gt;
willy    :0       -                Sat 2pm   ?     0.00s   ?     -
+ &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; +x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;你可以在脚本中随意地启用、停止调用。&lt;/p&gt;

&lt;h5 id=&quot;在命令行中运行-set&quot;&gt;在命令行中运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt;&lt;/h5&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls
ls
&lt;/span&gt;aaaaaaaaa.sh   bbb.sh

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; +v
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; +v

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
aaaaaaaaa.sh   bbb.sh

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;: &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;: No such file or directory

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;touch&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;   commented-scripts.sh    script1.sh

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls
&lt;/span&gt;commented-scripts.sh    script1.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;在脚本开头添加选项&quot;&gt;在脚本开头添加选项&lt;/h5&gt;

&lt;p&gt;可以把要使用的选项直接添加在 &lt;code class=&quot;highlighter-rouge&quot;&gt;#!&lt;/code&gt; 行后面：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash -xv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;找到问题代码之后&quot;&gt;找到问题代码之后&lt;/h5&gt;

&lt;p&gt;一旦找到了脚本中出问题的部分代码，可以在每条不太确定的命令之前用 &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; 加上调试声明，这样会看的更清楚，哪儿不正常，为什么了。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;debug message: now attempting to start w command&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; w
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在更高级的脚本中，可以插入 &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; 来显示不同阶段同一变量的内容，以便检测出错误：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Variable VARNAME is now set to &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$VARNAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3-bash-环境&quot;&gt;3. bash 环境&lt;/h2&gt;

&lt;h3 id=&quot;31-shell-初始化文件&quot;&gt;3.1 shell 初始化文件&lt;/h3&gt;

&lt;h4 id=&quot;311-系统范围的配置文件&quot;&gt;3.1.1 系统范围的配置文件&lt;/h4&gt;

&lt;h5 id=&quot;etcprofile&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/profile&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;如果 bash 是使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--login&lt;/code&gt; 选项被调用的，或是做为 &lt;code class=&quot;highlighter-rouge&quot;&gt;sh&lt;/code&gt; 被调用的，它会读取  &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/profile&lt;/code&gt; 脚本，其中通常会设置变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;USER&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;MAIL&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;HOSTNAME&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;HISTSIZE&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;在某些系统中，&lt;code class=&quot;highlighter-rouge&quot;&gt;umask&lt;/code&gt; 的值是在 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/profile&lt;/code&gt; 中设定的，其它系统中是在该文件中保有指向其它配置文件的指针，如：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/inputrc&lt;/code&gt;，系统范围的 &lt;code class=&quot;highlighter-rouge&quot;&gt;Readline&lt;/code&gt; 初始化文件，用于设定命令行提示音&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/profile.d&lt;/code&gt;  目录，其中的文件用于配置特定程序系统的范围的行为&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果希望设定的用户环境能 &lt;strong&gt;影响到所有用户&lt;/strong&gt;，就应该在 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/profile&lt;/code&gt; 中设定。&lt;/p&gt;

&lt;p&gt;该文件会设定一些基础的 shell &lt;strong&gt;环境变量&lt;/strong&gt;，以及用户在网页浏览器中运行 Java 或 Java 程序时所需要的一些变量。&lt;/p&gt;

&lt;h5 id=&quot;etcbashrc&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/bashrc&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;如果系统支持多种 shell，建议使用该文件来进行针对 bash 的配置，因为 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/profile&lt;/code&gt; 文件也会被其他 shell 所读取，比如 Bourne shell。如果其他 shell 不理解 bash 的语法就会产生错误，所以建议把针对不同类型 shell 的配置文件分割开。这种情况下，用户的 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bashrc&lt;/code&gt; 有可能指向 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/bashrc&lt;/code&gt;，目的是为了在登陆 shell 初始化期间将 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/bashrc&lt;/code&gt; 脚本包含进来。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/profile&lt;/code&gt; 仅仅维护 shell 的环境变量和程序的自动启动设置，而 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/bashrc&lt;/code&gt; 包含了系统范围的对 &lt;strong&gt;shell 函数&lt;/strong&gt; 和 &lt;strong&gt;别名&lt;/strong&gt; 的定义。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/bashrc&lt;/code&gt;  可能会在 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/profile&lt;/code&gt; 或单用户初始文件中 &lt;strong&gt;被引用&lt;/strong&gt;。&lt;/p&gt;

&lt;h4 id=&quot;312-单用户配置文件&quot;&gt;3.1.2 单用户配置文件&lt;/h4&gt;

&lt;p&gt;这些单用户配置文件有可能默认不存在，需要时可以创建。&lt;/p&gt;

&lt;h5 id=&quot;bash_profile&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_profile&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;要想单独为特定用户配置 shell 环境，最好就用 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_profile&lt;/code&gt; 文件 。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bashrc
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bash_login
......
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;bash_login&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_login&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;通常只有在需要登陆系统的时候才会执行该文件。如果 shell 找不到 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_profile&lt;/code&gt;，就会读取该文件。&lt;/p&gt;

&lt;h5 id=&quot;profile&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.profile&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;如果找不到 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_profile&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_login&lt;/code&gt;，就会读取 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.profile&lt;/code&gt;。该文件可以保存相同的配置，也可以被其它 shell 访问。&lt;/p&gt;

&lt;h5 id=&quot;bashrc&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bashrc&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;现在经常会用到非登陆 shell，比如在图形界面里，用 X 终端登陆时。打开这个窗口时，用户无需输入用户名和密码，也不会进行认证。&lt;/p&gt;

&lt;h5 id=&quot;bash_logout&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_logout&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;退出时会执行该文件。&lt;/p&gt;

&lt;h4 id=&quot;313-修改-shell-配置文件&quot;&gt;3.1.3 修改 shell 配置文件&lt;/h4&gt;

&lt;p&gt;如果以上文件发生了修改，用户要么需要重新连接到系统，要么通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;source script_name&lt;/code&gt; 来使其生效。对文件的修改会应用到当前 shell 会话。&lt;/p&gt;

&lt;p&gt;许多 shell 脚本会在私有环境下执行：变量只有从父进程导出，才会被子进程所继承。因此，&lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt; 一个脚本不仅会应用其对环境的修改，也会应用其对变量的设置。&lt;/p&gt;

&lt;p&gt;如果需要的话，为了便于了解哪些设置来自于哪个文件，可以在配置文件中用 &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; 添加一些声明文字，如：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Now executing .bash_profile..&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;或：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Now setting PS1 in .bashrc:&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PS1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[some value]&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;PS1 is now set to &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PS1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样，当某个配置文件被应用时，你随时都会了解到它做了些什么。&lt;/p&gt;

&lt;h3 id=&quot;32-变量&quot;&gt;3.2 变量&lt;/h3&gt;

&lt;h4 id=&quot;321-变量的种类&quot;&gt;3.2.1 变量的种类&lt;/h4&gt;

&lt;p&gt;按照习惯，shell 变量通常使用大写字母来表示。bash 会保留变量的列表，其中有两类变量：&lt;/p&gt;

&lt;h5 id=&quot;全局变量&quot;&gt;全局变量&lt;/h5&gt;

&lt;p&gt;全局变量或环境变量在所有 shell 中可见。可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;env&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;printenv&lt;/code&gt; 命令来查看环境变量。&lt;/p&gt;

&lt;h5 id=&quot;局部变量&quot;&gt;局部变量&lt;/h5&gt;

&lt;p&gt;局部变量只在当前 shell 可见。使用内建命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt; 不带选项运行，可以查看所有变量和函数的列表。输出会根据当前语系进行排序，以可重用的格式来显示。&lt;/p&gt;

&lt;h5 id=&quot;按变量内容区分&quot;&gt;按变量内容区分&lt;/h5&gt;

&lt;p&gt;如果按变量内容来区分变量：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;字符变量&lt;/li&gt;
  &lt;li&gt;整数变量&lt;/li&gt;
  &lt;li&gt;常量&lt;/li&gt;
  &lt;li&gt;数组变量&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;322-创建变量&quot;&gt;3.2.2 创建变量&lt;/h4&gt;

&lt;p&gt;变量是区分大小写的，默认都用大写。有时候习惯性用小写字母来命名局部变量。然而，你可以随意使用大小写来命名变量。变量名可以包含数字，但不能在首位。如 &lt;code class=&quot;highlighter-rouge&quot;&gt;number1&lt;/code&gt; 是合法的名字，但 &lt;code class=&quot;highlighter-rouge&quot;&gt;1number&lt;/code&gt; 就不是。&lt;/p&gt;

&lt;p&gt;要在 shell 中设置一个变量，使用如下格式：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;VARNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;等号两边与变量和值之间都不能有空格，否则会出错。为变量赋值时，建议养成 &lt;strong&gt;引用&lt;/strong&gt; 内容字符串的好习惯。这会减小出错的机率。&lt;/p&gt;

&lt;p&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;unset&lt;/code&gt; 删除变量之后，该变量就不再可用。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;unset &lt;/span&gt;MYVAR1
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$MYVAR1&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;323-导出变量&quot;&gt;3.2.3 导出变量&lt;/h4&gt;

&lt;p&gt;创建变量之后只是在当前 shell 可见，是局部变量，当前 shell 的子进程看不到。要想把变量传递给子 shell，需要使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;export&lt;/code&gt; 命令来将其导出，被导出之后，变量就会当作环境变量来看待了。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VARNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;子 shell 可以修改其继承的变量，但所作的修改不会影响父进程。&lt;/p&gt;

&lt;h4 id=&quot;324-保留变量&quot;&gt;3.2.4 保留变量&lt;/h4&gt;

&lt;h5 id=&quot;bourne-shell-的保留变量&quot;&gt;Bourne shell 的保留变量&lt;/h5&gt;

&lt;p&gt;bash 有一些变量是与 Bourne shell 相同的，某些情况下，bash 会给这些变量赋予默认值。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;变量&lt;/th&gt;
      &lt;th&gt;用途&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;CDPATH&lt;/td&gt;
      &lt;td&gt;用冒号分隔的目录列表，用于为 &lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; 查找路径&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HOME&lt;/td&gt;
      &lt;td&gt;当前用户的家目录，&lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; 的默认参数，该变量的值也用于 &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt; 扩展&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IFS&lt;/td&gt;
      &lt;td&gt;一个字符列表，这些字符用于分隔字段，在扩展中用于分割单词&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAIL&lt;/td&gt;
      &lt;td&gt;如果该变量用作一个文件名的参数，而且 &lt;code class=&quot;highlighter-rouge&quot;&gt;MAILPATH&lt;/code&gt; 变量没有设置，bash 会检查该文件，如果其中有新的邮件就提醒用户&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAILPATH&lt;/td&gt;
      &lt;td&gt;用冒号分隔的文件列表，shell 会定期检查新邮件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;OPTARG&lt;/td&gt;
      &lt;td&gt;由 &lt;code class=&quot;highlighter-rouge&quot;&gt;getopts&lt;/code&gt; 命令处理的、最近的选项参数的值&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;OPTIND&lt;/td&gt;
      &lt;td&gt;由 &lt;code class=&quot;highlighter-rouge&quot;&gt;getopts&lt;/code&gt; 命令处理的、最近的选项参数的索引号&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PATH&lt;/td&gt;
      &lt;td&gt;用冒号分隔的目录列表，shell 用于查找命令&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PS1&lt;/td&gt;
      &lt;td&gt;主要的命令提示符，默认值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;\s-\v\$ &lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PS2&lt;/td&gt;
      &lt;td&gt;次要的命令提示符，默认值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;，用于多行&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;bash-的保留变量&quot;&gt;Bash 的保留变量&lt;/h5&gt;

&lt;p&gt;以下变量为 bash 专有的变量，但对于其它 shell 就是普通的变量名，不会特殊对待它们。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;变量&lt;/th&gt;
      &lt;th&gt;用途&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;auto_resume&lt;/td&gt;
      &lt;td&gt;控制 shell 如何与用户交互，作业控制&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BASH&lt;/td&gt;
      &lt;td&gt;用于执行当前 Bash 实例的全路径&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BASH_ENV&lt;/td&gt;
      &lt;td&gt;调用 bash 执行脚本时，如果该变量已设置，执行脚本前，会将变量值扩展，作为启动文件来读取&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BASH_VERSION&lt;/td&gt;
      &lt;td&gt;当前 bash 实例的版本号&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BASH_VERSINFO&lt;/td&gt;
      &lt;td&gt;只读数组变量，其成员保存该 bash 实例的版本信息&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COLUMNS&lt;/td&gt;
      &lt;td&gt;打印列表时，内建命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;select&lt;/code&gt; 使用该变量来判断终端的宽度，接到 &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGWINCH&lt;/code&gt; 信号时会自动设置&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COMP_CWORD&lt;/td&gt;
      &lt;td&gt;当前光标下输入的单词位于 &lt;code class=&quot;highlighter-rouge&quot;&gt;COMP_WORDS&lt;/code&gt; 数组中的索引&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COMP_LINE&lt;/td&gt;
      &lt;td&gt;当前命令行中输入的完整命令&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COMP_POINT&lt;/td&gt;
      &lt;td&gt;相对于当前命令起始处的当前光标位置&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COMP_WORDS&lt;/td&gt;
      &lt;td&gt;数组变量，保存当前命令行输入所有的单词&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COMPREPLY&lt;/td&gt;
      &lt;td&gt;用于生成补全列表的数组&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DIRSTACK&lt;/td&gt;
      &lt;td&gt;数组变量，保存目录栈的内容&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;EUID&lt;/td&gt;
      &lt;td&gt;当前用户的有效 UID&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;FCEDIT&lt;/td&gt;
      &lt;td&gt;当内建命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;fc&lt;/code&gt; 使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-e&lt;/code&gt; 选项时，其使用的默认编辑器&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;FIGNORE&lt;/td&gt;
      &lt;td&gt;指定多个文件扩展名，用冒号分隔，自动补全时会忽略这些扩展名&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;FUNCNAME&lt;/td&gt;
      &lt;td&gt;数组变量，包含了整个调用链上所有函数的名字。&lt;code class=&quot;highlighter-rouge&quot;&gt;${FUNCNAME[0]}&lt;/code&gt; 代表 shell 脚本当前正在执行的函数的名字，而变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;${FUNCNAME[1]}&lt;/code&gt; 则代表调用函数 ${FUNCNAME[0]} 的函数的名字，依此类推&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;GLOBIGNORE&lt;/td&gt;
      &lt;td&gt;设置要忽略的模式匹配文件，多个模式用冒号分隔，文件名扩展时会忽略匹配这些模式的文件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;GROUPS&lt;/td&gt;
      &lt;td&gt;数组变量，包含当前用户的所有的组&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;histchars&lt;/td&gt;
      &lt;td&gt;用于控制历史记录展开、快速替换和标记化的字符，最多有 3 个字符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HISTCMD&lt;/td&gt;
      &lt;td&gt;当前命令执行完后，它在历史命令中的排列编号&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HISTCONTROL&lt;/td&gt;
      &lt;td&gt;用于指定是否要把某个命令加入历史列表中&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HISTFILE&lt;/td&gt;
      &lt;td&gt;保存历史命令的文件名，默认为 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_history&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HISTFILESIZE&lt;/td&gt;
      &lt;td&gt;历史命令文件可以保存的最大行数，默认为 500 行&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HISTIGNORE&lt;/td&gt;
      &lt;td&gt;指定哪些命令保存到历史文件中，哪些忽略&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HISTSIZE&lt;/td&gt;
      &lt;td&gt;历史列表中可保存的命令的数量，默认为 500 个&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HOSTFILE&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HOSTNAME&lt;/td&gt;
      &lt;td&gt;指定主机名要保存在哪个文件中，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt;。shell 需要时会读取。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HOSTTYPE&lt;/td&gt;
      &lt;td&gt;用于描述运行 bash 的当前主机硬件平台&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IGNOREEOF&lt;/td&gt;
      &lt;td&gt;如果整个输入是一个 EOF 字符，shell 应该如何对待&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;INPUTRC&lt;/td&gt;
      &lt;td&gt;Readlin 初始化文件的名称，用来覆盖默认值 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/inputrc&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LANG&lt;/td&gt;
      &lt;td&gt;排除那些以 &lt;code class=&quot;highlighter-rouge&quot;&gt;LC_&lt;/code&gt; 开头的变量所设置的语系，该变量用于设置其余类别的语系&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LC_ALL&lt;/td&gt;
      &lt;td&gt;设置语系，用于覆盖 &lt;code class=&quot;highlighter-rouge&quot;&gt;LANG&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;LC_&lt;/code&gt; 开头的所有变量&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LC_COLLATE&lt;/td&gt;
      &lt;td&gt;文件名扩展之后，用该变量指定的语系来排序，并确定了字符整理和字符串整理的规则，这些规则控制着范围、同等类以及多字符整理元素的行为。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LC_CTYPE&lt;/td&gt;
      &lt;td&gt;指定用于 LC_CTYPE 类别信息的语言环境。LC_CTYPE 类别确定了字符处理的规则，这些规则控制着文本数据字符（即单字节和多字节字符）的字节序列的解释、字符的分类（如，字母、数字等）以及字符类的行为。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LC_MESSAGES&lt;/td&gt;
      &lt;td&gt;指定用于 LC_MESSAGES 类别信息的语言环境。LC_MESSAGES 类别确定了控制肯定和否定响应的规则，以及控制用于消息和菜单的语言环境（语言）的规则。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LC_NUMERIC&lt;/td&gt;
      &lt;td&gt;指定用于 LC_NUMERIC 类别信息的语言环境。LC_NUMERIC 类别确定了控制非货币数字格式的规则。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LINENO&lt;/td&gt;
      &lt;td&gt;脚本中当前执行的行号&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LINES&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;select&lt;/code&gt; 命令用该变量来决定打印时的宽度&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MACHTYPE&lt;/td&gt;
      &lt;td&gt;记录系统的硬件结构，格式为标准的 GNU 格式：CPU-COMPANY-SYSTEM&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAILCHECK&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MAILPATH&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;MAIL&lt;/code&gt; 变量所指定的邮件文件，该变量指定多少秒检查一次邮件文件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;OLDPWD&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; 命令设置的上一个工作目录&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;OPTERR&lt;/td&gt;
      &lt;td&gt;如果设为 1，bash 会显示 &lt;code class=&quot;highlighter-rouge&quot;&gt;getopt()&lt;/code&gt; 函数产生的错误&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;OSTYPE&lt;/td&gt;
      &lt;td&gt;当前操作系统类型&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PIPESTATUS&lt;/td&gt;
      &lt;td&gt;数组变量，保存最近在前台执行的管道进程的退出状态码的列表&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;POSIXLY_CORRECT&lt;/td&gt;
      &lt;td&gt;bash 启动时，如果该变量在环境变量中，shell 会进入 POSIX 模式&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PPID&lt;/td&gt;
      &lt;td&gt;shell 的父进程的 ID&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PROMPT_COMMAND&lt;/td&gt;
      &lt;td&gt;如果设置该变量，变量值会被解释为一个命令，在每次打印主要提示符 &lt;code class=&quot;highlighter-rouge&quot;&gt;PS1&lt;/code&gt; 之前执行&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PS3&lt;/td&gt;
      &lt;td&gt;变量值用于作为 &lt;code class=&quot;highlighter-rouge&quot;&gt;select&lt;/code&gt; 命令的提示符，默认为 &lt;code class=&quot;highlighter-rouge&quot;&gt;#?&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PS4&lt;/td&gt;
      &lt;td&gt;在 bash 的调试模式中，每行命令都会被回显，该变量的值可以在每条回显的最前面显示&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PWD&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; 命令设置的当前工作目录&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RANDOM&lt;/td&gt;
      &lt;td&gt;该变量每次做为参数被引用时，都会随机产生一个 0 ~ 32767 的整数。为变量赋值可以为随机生成器设定种子&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;REPLY&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt; 命令的默认值&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SECONDS&lt;/td&gt;
      &lt;td&gt;该变量会扩展为 shell 到现在运行的秒数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SHELLOPTS&lt;/td&gt;
      &lt;td&gt;所有已启用的 shell 选项，用冒号分隔&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SHLVL&lt;/td&gt;
      &lt;td&gt;启动一个新的 bash 实例，该变量就会加 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TIMEFORMAT&lt;/td&gt;
      &lt;td&gt;此参数的值用作格式字符串, 用于指定应如何显示带有 &lt;code class=&quot;highlighter-rouge&quot;&gt;time&lt;/code&gt; 的管道的计时信息&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TMOUT&lt;/td&gt;
      &lt;td&gt;如果设置的值大于 0，&lt;code class=&quot;highlighter-rouge&quot;&gt;TMOUT&lt;/code&gt; 会做为 &lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt; 命令超时的默认值。在交互式 shell 中，出现提示符以后，变量值代表等待输入的秒数，如果超过这个时间还没有输入，bash 就会终止&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;UID&lt;/td&gt;
      &lt;td&gt;当前用户的真实 UID&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;325-特殊参数&quot;&gt;3.2.5 特殊参数&lt;/h4&gt;

&lt;p&gt;有几个参数 shell 会特殊对待，这些参数只可以被引用，不可以赋值。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;参数&lt;/th&gt;
      &lt;th&gt;用途&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$*&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;扩展为位置参数，从 1 开始。如果扩展发生在双引号中，该变量会被扩展成一个词，该词由若干个参数组成，参数之间用 IFS 的第一个字符分隔。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$@&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;扩展为位置参数，从 1 开始。如果扩展发生在双引号中，其中的每一个参数都会被单独扩展成为一个词。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$#&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;扩展成十进制的位置参数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$?&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;扩展成为最近在前台执行的管道的退出状态&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$-&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;用于保存当前 shell 所使用的所有选项，这些选项都是由 &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt; 命令设置的&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$$&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;扩展为 shell 的进程 ID&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$!&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;扩展为最近后台执行的进程的 ID&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$0&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;扩展为 shell 的名称或 shell 脚本的名称&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$_&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;保存前一个命令最后一个参数的变量值&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;-vs-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$*&lt;/code&gt; vs &lt;code class=&quot;highlighter-rouge&quot;&gt;$@&lt;/code&gt;&lt;/h5&gt;

&lt;p class=&quot;notice--success&quot;&gt;现实使用中 &lt;code class=&quot;highlighter-rouge&quot;&gt;$*&lt;/code&gt; 经常会带来问题，因此经常使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;$@&lt;/code&gt;。&lt;/p&gt;

&lt;h5 id=&quot;位置参数&quot;&gt;位置参数&lt;/h5&gt;

&lt;p&gt;位置参数是指脚本名后面跟的词，它们会放到 &lt;code class=&quot;highlighter-rouge&quot;&gt;$1&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;$2&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;$3&lt;/code&gt; 等变量中。需要时，可以把变量加入一个内部数组。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$#&lt;/code&gt;  保存了参数的总个数。&lt;/p&gt;

&lt;h4 id=&quot;326-变量让脚本更易于重用&quot;&gt;3.2.6 变量让脚本更易于重用&lt;/h4&gt;

&lt;p&gt;为了让得到脚本的他人能更快速地修改、使用，建议尽可能地用变量代替常量。&lt;/p&gt;

&lt;h3 id=&quot;33-对字符的引用&quot;&gt;3.3 对字符的引用&lt;/h3&gt;

&lt;h4 id=&quot;331-为什么要引用字符&quot;&gt;3.3.1 为什么要引用字符&lt;/h4&gt;

&lt;p&gt;引用是为了清除字符或词的特殊含义。&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;引用可以 &lt;strong&gt;禁用&lt;/strong&gt; shell 对某些特殊字符的 &lt;strong&gt;特殊对待&lt;/strong&gt;，可以让 shell &lt;strong&gt;忽略其保留的词&lt;/strong&gt;，从而对它们 &lt;strong&gt;禁用参数的扩展&lt;/strong&gt;。&lt;/p&gt;

&lt;h4 id=&quot;332-转义符&quot;&gt;3.3.2 转义符&lt;/h4&gt;

&lt;p&gt;转义符用于移除 &lt;strong&gt;单个字符&lt;/strong&gt; 的特殊含义。没被引用的 &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; 在 bash 中是一个转义符。它会保持其后面这个字符的原始值，&lt;strong&gt;换行符除外&lt;/strong&gt;。如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; 后面紧跟着换行符，代表下一行的内容与本行是连续的，输入流中的这个 &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; 会被移除并忽略，从而 &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; 在此起了连接两行的作用。&lt;/p&gt;

&lt;h4 id=&quot;333-单引号&quot;&gt;3.3.3 单引号&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;' '&lt;/code&gt; 单引号用于保持被引用内容中 &lt;strong&gt;所有字符&lt;/strong&gt; 的原始值。&lt;/p&gt;

&lt;p&gt;单引号不能嵌套使用，哪怕加了转义符也不可以。&lt;/p&gt;

&lt;h4 id=&quot;334-双引号&quot;&gt;3.3.4 双引号&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot; &quot;&lt;/code&gt; 双引号用于保持被引用内容中 &lt;strong&gt;大部分&lt;/strong&gt; 字符的原始值，除了 &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;` `&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;` `&lt;/code&gt; 在双引号中保持其原义，即变量替换和命令替换。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; 只有在 &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;` `&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot; &quot;&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;换行符&lt;/code&gt; 前面时才会保持原义。在双引号中，如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; 后面跟的是这些符号之一，&lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; 会从输入流中被删除。&lt;/p&gt;

&lt;p&gt;双引号可以嵌套使用，但被引用的双引号需被转义。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo &quot;I'd say: \&quot;Go for it!\&quot;&quot;
I'd say: &quot;Go for it!&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;ansi-c-引用&quot;&gt;ANSI-C 引用&lt;/h4&gt;

&lt;p&gt;bash 还有一种引用的机制：在字符中使用类 ANSI-C 的转义序列，语法为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$'string'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt; 中如果含有以下转义序列，会被转义：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;转义码&lt;/th&gt;
      &lt;th&gt;含义&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;双引号&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\'&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;单引号&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\\&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;反斜线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\a&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;终端警告字符（提示音）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\b&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;回退&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\e&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;转义&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\f&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;馈页&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;换行&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\r&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;光标到行首&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\t&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;水平制表符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\v&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;垂直制表符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\cx&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;ctrl-x&lt;/code&gt; 字符，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;$'\cZ'&lt;/code&gt; 会输出 &lt;code class=&quot;highlighter-rouge&quot;&gt;ctrl-z&lt;/code&gt;  的控制序列&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;336-语系&quot;&gt;3.3.6 语系&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$&quot;string&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这种引用称为 I18N。&lt;/p&gt;

&lt;p&gt;如果对该字符串存在可用的翻译，会用其译文来代替原有的文字。如果没有，或如果语系设置为 &lt;code class=&quot;highlighter-rouge&quot;&gt;C&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;POSIX&lt;/code&gt;，该 &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt; 符号会被忽略，结果就变成普通的双引号引用字符串。&lt;/p&gt;

&lt;p&gt;如果字符串被译文所替换，则结果是双引号引用。&lt;/p&gt;

&lt;h3 id=&quot;34-shell-扩展&quot;&gt;3.4 shell 扩展&lt;/h3&gt;

&lt;h4 id=&quot;简介&quot;&gt;简介&lt;/h4&gt;

&lt;p&gt;命令被拆分成记号以后，这些记号或词汇会被扩展或解析。共可进行 8 类扩展，在所有扩展完成之后，会进行引用的移除。&lt;/p&gt;

&lt;h4 id=&quot;342-大括号扩展&quot;&gt;3.4.2 大括号扩展&lt;/h4&gt;

&lt;p&gt;大括号扩展是一种能够生成任意字符串的机制。&lt;/p&gt;

&lt;p&gt;大括号扩展的模式是这样的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;有一个可选的 &lt;strong&gt;前缀&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;然后是一组 &lt;strong&gt;字符串&lt;/strong&gt; 或表达式，它们包含在大括号中，用 &lt;strong&gt;逗号&lt;/strong&gt; 分隔&lt;/li&gt;
  &lt;li&gt;最后是一个可选的 &lt;strong&gt;后缀&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;前缀{字,符,串}后缀
前缀{表,达,式}后缀
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;大括号扩展允许嵌套。每个扩展字符串的结果是不会排序的，依然按照从左到右的顺序依次扩展。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ echo sp{el,il,al}l
spell spill spall
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;大括号扩展是先于其他扩展进行的，其他扩展眼中的特殊字符都会被保留下来，这个过程是严格的文本性质的。对于扩展的内容和括号内的文本，bash 绝对不会应用任何的语法解释。为了避免与参数扩展造成冲突，大括号扩展不会识别字符串中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;${&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;正确的形式：大括号扩展必须包含未引用的成对的大括号，以及至少一个未引用的逗号。&lt;/p&gt;

&lt;p&gt;如果大括号扩展的形式错误，扩展之后不会产生任何变化。&lt;/p&gt;

&lt;h4 id=&quot;343--扩展&quot;&gt;3.4.3 &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt; 扩展&lt;/h4&gt;

&lt;p&gt;如果词汇的开头是个未引用的波浪线 &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt;，所有的字符一直到第一个未引用斜线，或所有的字符（如果没有未引用斜线）被看作波浪线 &lt;strong&gt;前缀&lt;/strong&gt;。&lt;/p&gt;

&lt;h5 id=&quot;neo&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~neo&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;前缀中如果没有字符被引用，则其中紧随 &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt; 后面的字符串被看作有可能是登陆名。&lt;/p&gt;

&lt;p&gt;如果该登陆名是空字符串，&lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt; 会被替换成 &lt;code class=&quot;highlighter-rouge&quot;&gt;HOME&lt;/code&gt; 变量的值。&lt;/p&gt;

&lt;p&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;HOME&lt;/code&gt; 未设置，则用执行 shell 的用户的家目录替换，否则用指定登陆名的家目录替换。&lt;/p&gt;

&lt;p&gt;如果登陆名无效或扩展失败，则命令不会受影响，不会变。&lt;/p&gt;

&lt;h5&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~+&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;如果前缀是 &lt;code class=&quot;highlighter-rouge&quot;&gt;~+&lt;/code&gt;，用变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;PWD&lt;/code&gt; 的值替换前缀。&lt;/p&gt;

&lt;h5 id=&quot;-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~-&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;如果前缀是 &lt;code class=&quot;highlighter-rouge&quot;&gt;~-&lt;/code&gt;，用变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;OLDPWD&lt;/code&gt; 的值，如果预先设置的话，就进行替换。&lt;/p&gt;

&lt;h5 id=&quot;6&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~6&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;如果前缀是个数字 n，则把 &lt;code class=&quot;highlighter-rouge&quot;&gt;~n&lt;/code&gt; 替换成目录堆栈的第 n 个目录。&lt;/p&gt;

&lt;h5 id=&quot;pathtest&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$PATH:~/test&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;给变量赋值时，如果值是以 &lt;code class=&quot;highlighter-rouge&quot;&gt;：&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; 开头，也会进行扩展，因此可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt; 和文件名的组合来为 &lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;MAILPATH&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;CDPATH&lt;/code&gt; 赋值，shell 会把扩展后的值赋给变量。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:~/test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/test&lt;/code&gt; 会先扩展为 &lt;code class=&quot;highlighter-rouge&quot;&gt;$HOME/test&lt;/code&gt;，如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;$HOME&lt;/code&gt; 为 &lt;code class=&quot;highlighter-rouge&quot;&gt;/home/franky&lt;/code&gt;，则 &lt;code class=&quot;highlighter-rouge&quot;&gt;/home/franky/test&lt;/code&gt; 会加入 &lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt; 变量的内容中。&lt;/p&gt;

&lt;h4 id=&quot;344-shell-参数与变量扩展&quot;&gt;3.4.4 shell 参数与变量扩展&lt;/h4&gt;

&lt;p&gt;🍎 本节要特别感谢 &lt;a href=&quot;https://blog.csdn.net/astrotycoon/article/details/78109827&quot;&gt;astrotycoon&lt;/a&gt; 的文章！&lt;/p&gt;

&lt;h5 id=&quot;参数的概念&quot;&gt;参数的概念&lt;/h5&gt;

&lt;p&gt;在 shell 编程中，参数是个 &lt;strong&gt;大概念&lt;/strong&gt;，也是个笼统的概念，它是个实体，其中存储着各式各样的值。&lt;/p&gt;

&lt;p&gt;可以通过三类方式来引用参数，从而得到参数中存储的值：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;通过 &lt;strong&gt;名称&lt;/strong&gt; 来引用参数，这样的参数称之为 &lt;strong&gt;变量&lt;/strong&gt;。&lt;/p&gt;

    &lt;p&gt;一个变量拥有自己的值和诸多属性，属性可以通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;declare&lt;/code&gt; 来设定，可以通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;unset&lt;/code&gt; 来取消一个变量。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;通过 &lt;strong&gt;数字&lt;/strong&gt; 来引用参数，这样的参数称之为 &lt;strong&gt;位置参数&lt;/strong&gt;。&lt;/p&gt;

    &lt;p&gt;位置参数在脚本被调用时自动初始化为传递给脚本的参数。脚本中调用函数时，位置参数会临时替换成传递给函数的参数。可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt; 命令来改变位置参数的值，但无法通过赋值语句来改变。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;还有一类参数，被称之为 &lt;strong&gt;特殊参数&lt;/strong&gt;。&lt;/p&gt;

    &lt;p&gt;只能通过 shell 内部预定义的特殊符号来引用它们，并且只能引用，不能用赋值语句来重新赋值。预定义的特殊符号包括：&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;参数扩展&quot;&gt;参数扩展&lt;/h5&gt;

&lt;p&gt;参数扩展就是通过符号 &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt; 获得参数中存储的值。在获得最终结果之前，要对参数及数值进行一系列的操作，如删除、截取、替换等。&lt;/p&gt;

&lt;p&gt;参数扩展最简单的形式为：&lt;code class=&quot;highlighter-rouge&quot;&gt;$参数&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;${参数}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;被扩展的参数名可以用大括号括起来，大括号是可选的，但 &lt;strong&gt;建议总是加上&lt;/strong&gt;。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使用大括号时，关闭的大括号不能被转义、被引用，也不能处于算术表达式、命令替换、参数替换中。&lt;/li&gt;
  &lt;li&gt;大括号中参数的值将被替换。&lt;/li&gt;
  &lt;li&gt;如果参数是大于一位的位置参数，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;$15&lt;/code&gt;，则必须要使用大括号，即 &lt;code class=&quot;highlighter-rouge&quot;&gt;${$15}&lt;/code&gt;，否则 &lt;code class=&quot;highlighter-rouge&quot;&gt;$$15&lt;/code&gt; 会被认为是 &lt;code class=&quot;highlighter-rouge&quot;&gt;$1&lt;/code&gt; 后面跟着一个 5。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;WORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;car
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;WORD&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;s and &lt;span class=&quot;nv&quot;&gt;$WORDs&lt;/span&gt;
cars and
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p class=&quot;notice--success&quot;&gt;所以如果需要把变量名与紧随的字符区分开，就一定要使用大括号。&lt;/p&gt;

&lt;h6 id=&quot;常用的参数扩展方法&quot;&gt;常用的参数扩展方法&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;表达式&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${var}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; 的值，同 &lt;code class=&quot;highlighter-rouge&quot;&gt;$var&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${var-$DEFAULT}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; 未设置，表达式求值结果为 &lt;code class=&quot;highlighter-rouge&quot;&gt;$DEFAULT&lt;/code&gt; &lt;sup&gt;*&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${var:-$DEFAULT}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; 未设置或为空，表达式求值结果为 &lt;code class=&quot;highlighter-rouge&quot;&gt;$DEFAULT&lt;/code&gt; &lt;sup&gt;*&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${var=$DEFAULT}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; 未设置，表达式求值结果为 &lt;code class=&quot;highlighter-rouge&quot;&gt;$DEFAULT&lt;/code&gt; &lt;sup&gt;*&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${var:=$DEFAULT}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; 未设置或为空，表达式求值结果为 &lt;code class=&quot;highlighter-rouge&quot;&gt;$DEFAULT&lt;/code&gt; &lt;sup&gt;*&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${var+$OTHER}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; 已设置，表达式求值结果为 &lt;code class=&quot;highlighter-rouge&quot;&gt;$OTHER&lt;/code&gt;，否则为空&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${var:+$OTHER}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; 已设置，表达式求值结果为 &lt;code class=&quot;highlighter-rouge&quot;&gt;$OTHER&lt;/code&gt;，否则为空&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${var?$ERR_MSG}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; 未设置，打印 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ERR_MSG&lt;/code&gt;，退出脚本，退出状态为 1。&lt;sup&gt;*&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${var:?$ERR_MSG}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; 未设置，打印 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ERR_MSG&lt;/code&gt;，退出脚本，退出状态为 1。&lt;sup&gt;*&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${!varprefix*}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;匹配之前所有以 &lt;code class=&quot;highlighter-rouge&quot;&gt;varprefix&lt;/code&gt; 开头声明的变量&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${!varprefix@}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;匹配之前所有以 &lt;code class=&quot;highlighter-rouge&quot;&gt;varprefix&lt;/code&gt; 开头声明的变量&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; 已设置，表达式求值结果为 &lt;code class=&quot;highlighter-rouge&quot;&gt;$var&lt;/code&gt;。&lt;/p&gt;

&lt;h5 id=&quot;间接扩展&quot;&gt;间接扩展&lt;/h5&gt;

&lt;p&gt;间接扩展也称间接引用，是指用一个变量的值来传递另一个变量的名字。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;VAR1&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;VAR1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;42
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;!NAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
42
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果参数的第一个字符是个感叹号 &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt;，则参数其余的字符做为变量名，但该变量扩展成变量值以后，该变量值代表另一个变量的名字。&lt;/p&gt;

&lt;h5 id=&quot;子串扩展&quot;&gt;子串扩展&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${parameter:offset}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${parameter:offset:length}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;从 offset 位置开始，截取长度为 length 的子字符串，如果没有提供 length，则是从 offset 开始到结尾。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果 offset 是负值，开始位置是从字符串末尾开始算起，取长度为 length 的子串。&lt;/li&gt;
  &lt;li&gt;如果 length 是负值，则 length 不再代表字符串长度，而代表另一个 offset，位置从字符串末尾开始，扩展的结果是 offset ~ length 之间的子串。&lt;/li&gt;
  &lt;li&gt;如果 parameter 是 &lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt;，即所有的位置参数时，offset 必须从 1 开始。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当 offset 是负值时，负号 &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; 与前面的冒号 &lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;/code&gt; 必须用空格分开，或者把负数用括号括起来：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo ${MYSTRING: -34:13}
echo ${MYSTRING:(-34):13}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;查找并替换&quot;&gt;查找并替换&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${parameter/pattern/string}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${parameter//pattern/string}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${parameter/pattern}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${parameter//pattern}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;匹配后的子串会用 string 替换掉。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;parameter 之后如果是 &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;，则只替换匹配到的 &lt;strong&gt;第一个&lt;/strong&gt; 子串；parameter 之后如果是 &lt;code class=&quot;highlighter-rouge&quot;&gt;//&lt;/code&gt;，则替换 &lt;strong&gt;所有&lt;/strong&gt; 匹配到的子串。&lt;/li&gt;
  &lt;li&gt;当 string 为空时，则相当于将匹配的子串 &lt;strong&gt;删除&lt;/strong&gt;。&lt;/li&gt;
  &lt;li&gt;特殊符号 &lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt; 在这种情况下分别锚定字符串的 &lt;strong&gt;开始&lt;/strong&gt; 和 &lt;strong&gt;结尾&lt;/strong&gt;。&lt;/li&gt;
  &lt;li&gt;如果 bash 的 nocasematch 选项是打开的，则匹配的过程大小写是不敏感的。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ MYSTRING&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Be liberal in what you accept, and conservative in what you send&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MYSTRING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/in/by&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
Be liberal by what you accept, and conservative &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;what you send
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MYSTRING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;//in/by&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
Be liberal by what you accept, and conservative by what you send
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MYSTRING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/conservative/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
Be liberal &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;what you accept, and &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;what you send

&lt;span class=&quot;nv&quot;&gt;$ MYSTRING&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;xxxxxxxxxxxxxxx
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MYSTRING&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
xxxxxxxxxxxxxxx
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MYSTRING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/#x/y&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
yxxxxxxxxxxxxxx
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MYSTRING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/%x/y&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
xxxxxxxxxxxxxxy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;bash 的这个查找替换功能跟 &lt;code class=&quot;highlighter-rouge&quot;&gt;sed&lt;/code&gt; 的很像，不同的是这里的 pattern 不是正则表达式。&lt;/p&gt;

&lt;h5 id=&quot;查找并删除&quot;&gt;查找并删除&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${parameter#pattern}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${parameter##pattern}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${parameter%pattern}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${parameter%%pattern}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;删除匹配到的子串。其中操作符 &lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt; 与 &lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt; 的作用为：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;  行首起，匹配第一个&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;##&lt;/code&gt; 行首起，匹配所有&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt;  行尾起，匹配第一个&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%%&lt;/code&gt; 行尾起，匹配所有&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;例如：&lt;code class=&quot;highlighter-rouge&quot;&gt;file=/dir1/dir2/dir3/my.file.txt&lt;/code&gt;  定义变量&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${file#*/}&lt;/code&gt; ：&lt;code class=&quot;highlighter-rouge&quot;&gt;dir1/dir2/dir3/my.file.txt &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${file##*/}&lt;/code&gt; ：&lt;code class=&quot;highlighter-rouge&quot;&gt;my.file.txt&lt;/code&gt; ，相当于 &lt;code class=&quot;highlighter-rouge&quot;&gt;basename ${file}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${file#*.}&lt;/code&gt; ：&lt;code class=&quot;highlighter-rouge&quot;&gt;file.txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${file##*.}&lt;/code&gt; ：&lt;code class=&quot;highlighter-rouge&quot;&gt;txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${file%/*}&lt;/code&gt; ：&lt;code class=&quot;highlighter-rouge&quot;&gt;/dir1/dir2/dir3&lt;/code&gt;，相当于 &lt;code class=&quot;highlighter-rouge&quot;&gt;dirname ${file}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${file%%/*}&lt;/code&gt; ：空值&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${file%.*}&lt;/code&gt; ：&lt;code class=&quot;highlighter-rouge&quot;&gt;/dir1/dir2/dir3/my.file&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${file%%.*}&lt;/code&gt; ：&lt;code class=&quot;highlighter-rouge&quot;&gt;/dir1/dir2/dir3/my&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;获取参数长度&quot;&gt;获取参数长度&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${#parameter}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;返回 parameter 值的长度。&lt;/p&gt;

&lt;h5 id=&quot;大小写转换&quot;&gt;大小写转换&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${parameter^}&lt;/code&gt;  ：将第一个字符转成大写&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${parameter^^}&lt;/code&gt;  ：将所有字符转成大写&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${parameter,}&lt;/code&gt;  ： 将第一个字符转成小写&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;${parameter,,}&lt;/code&gt;  ： 将所有字符转成小写&lt;/p&gt;

&lt;h4 id=&quot;345-命令替换&quot;&gt;3.4.5 命令替换&lt;/h4&gt;

&lt;p&gt;可以用一个命令的输出来替换命令本身。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$(command)&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;`command`&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;扩展时，bash 先执行该命令，然后用其输出来替换命令本身，末尾的换行符会被删除，中间的换行符不会删。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;`command`&lt;/code&gt; 形式：如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; 后面是 &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;`&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt;，会将其转义，否则就是 &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; 本身。&lt;/li&gt;
  &lt;li&gt;如果使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;$(command)&lt;/code&gt; 形式：括号里的所有字符都正常处理。&lt;/li&gt;
  &lt;li&gt;命令替换可嵌套，如果用反引号形式，里面的那层反引号需要用 &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; 转义。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果命令替换出现在双引号里面，不会对结果进行词汇分割和文件名扩展。&lt;/p&gt;

&lt;h4 id=&quot;346-算术表达式&quot;&gt;3.4.6 算术表达式&lt;/h4&gt;

&lt;p&gt;算术表达式会对表达式进行计算，并用计算结果进行替换。&lt;/p&gt;

&lt;p&gt;基本形式：  &lt;code class=&quot;highlighter-rouge&quot;&gt;$(( EXPRESSION ))&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;表达式中的所有记号都会经历参数扩展、命令替换、去除引用。&lt;/p&gt;

&lt;p&gt;算术表达式可以嵌套。&lt;/p&gt;

&lt;p&gt;计算表达式时会用等宽整数，不会进行溢出检查，除以 0 会被捕获，并标记为错误。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;运算符&lt;/th&gt;
      &lt;th&gt;含义&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;VAR++&lt;/code&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;VAR--&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;后缀自增、自减&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;++VAR&lt;/code&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;--VAR&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;前缀自增、自减&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;加、减&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;乘、除、余数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;**&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;求幂&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;逻辑否&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;逻辑与&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;||&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;逻辑或&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;!=&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;等于、不等于&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;=&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;比较运算符&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;按位取反&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;按位左移、按位右移&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;按位与&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;按位或&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;按位异或&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;expr1 ? expr2 : expr3&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;条件计算&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;*=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;%=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;+=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;-=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;^=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;|=&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;赋值&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;shell 变量也可作为运算对象。计算前会先进行参数扩展。在表达式中，shell 变量也可以由名称引用，而不使用参数扩展语法。变量的值在引用时作为算术表达式求值。一个 shell 变量不需要开启它的整数属性就可以用于表达式。&lt;/p&gt;

&lt;h5 id=&quot;进制表示&quot;&gt;进制表示&lt;/h5&gt;

&lt;p&gt;由 0 开头的常数被看作八进制数字。&lt;/p&gt;

&lt;p&gt;由 0x 或 0X 开头的为十六进制。&lt;/p&gt;

&lt;p&gt;否则就使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;[BASE'#']N&lt;/code&gt; 的形式：BASE 是一个 2~64 的二进制数字，代表是什么进制，N 是该进制的数字。如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;BASE'#'&lt;/code&gt; 被省略，则认为是十进制的数字。大于 9 的数字依次用小写字母、大写字母、&lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; 来表示。如果 BASE 小于等于 36，大小写可以相互混用，来代表 10~35 的数字。&lt;/p&gt;

&lt;p&gt;运算符按优先顺序进行计算，括号中的子表达式最先计算，可以覆盖上面的规则。&lt;/p&gt;

&lt;p&gt;只要可能，就建议尽量使用这种形式的表达式：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$[ EXPRESSION ]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;但这种形式只能计算，不能进行条件的测试。&lt;/p&gt;

&lt;h4 id=&quot;347-进程替换&quot;&gt;3.4.7 进程替换&lt;/h4&gt;

&lt;p&gt;用管道将一个命令的标准输出传递给另一个命令的标准输入，这是个强大的技术。但是，如果要用管道来传递 &lt;strong&gt;多个命令&lt;/strong&gt; 的标准输出该怎么做？这时候进程替换就派上用场了。进程替换可以把一个（或多个）进程的输出送到另一个进程的标准输入。&lt;/p&gt;

&lt;h5 id=&quot;原理&quot;&gt;原理&lt;/h5&gt;

&lt;p class=&quot;notice--info&quot;&gt;进程替换是 &lt;strong&gt;进程间通讯&lt;/strong&gt; 的一种形式，允许一个命令的输入或输出看上去 &lt;strong&gt;像个文件&lt;/strong&gt; 一样。bash 会将 &lt;strong&gt;命令&lt;/strong&gt; 在线 &lt;strong&gt;替换&lt;/strong&gt; 成一个 &lt;strong&gt;文件名&lt;/strong&gt;，借助这种方法，原来只能接受文件做为参数的命令，现在可以直接从另一个程序读取输入，或把输出直接写到另一个程序。&lt;/p&gt;

&lt;p&gt;进程替换是 &lt;strong&gt;重定向&lt;/strong&gt; 的一种形式，一个进程的输入或输出显示为一个 &lt;strong&gt;临时文件&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;进程替换与参数扩展、命令替换和算术扩展是 &lt;strong&gt;同时&lt;/strong&gt; 进行的。&lt;/p&gt;

&lt;h5 id=&quot;语法&quot;&gt;语法&lt;/h5&gt;

&lt;p&gt;格式： &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;(command_list)&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;(command_list)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; 与括号之间没有空格，加上空格或报错。&lt;/p&gt;

&lt;p&gt;括号中的命令执行以后，其：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;形式为 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;( )&lt;/code&gt; 的标准输出文件描述符  或&lt;/li&gt;
  &lt;li&gt;形式为 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;( )&lt;/code&gt; 的标准输入文件描述符&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;被连接到一个 FIFO 文件上，或 &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/fd/&lt;/code&gt; 目录中的某个文件上。然后，文件描述符所连接的文件名被用来替换 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;( )&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;( )&lt;/code&gt; 结构。&lt;/p&gt;

&lt;p&gt;有些程序只支持从文件获取输入，不支持从标准输入获取，因此无法从管道获取输入。借助进程替换，这些程序就可以接收来自于其它程序的数据了。&lt;/p&gt;

&lt;h5 id=&quot;范例&quot;&gt;范例&lt;/h5&gt;

&lt;p&gt;这个例子最便于理解进程替换格式的含义：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &amp;lt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
aa
bbb
cccc

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &amp;lt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/dev/fd/63
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;(ls)&lt;/code&gt; 改变了 ls 的输出定向。原本 &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; 的输出是到标准输出的，但 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;(ls)&lt;/code&gt; 把输出指向了一个临时文件，用描述符 &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/fd/63&lt;/code&gt; 来表示。&lt;/p&gt;

&lt;p&gt;文件名作为 &lt;code class=&quot;highlighter-rouge&quot;&gt;cat&lt;/code&gt; 的参数时，会将文件内容打印出来，即 &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; 的文件列表。&lt;/p&gt;

&lt;p&gt;文件名作为 &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; 的参数时，只会把*文件名本身打印出来。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /usr/share/dict/linux.words | &lt;span class=&quot;nb&quot;&gt;wc
 &lt;/span&gt;479828  479828 4953680
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;wc&lt;/span&gt; &amp;lt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /usr/share/dict/linux.words&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 479828  479828 4953680 /dev/fd/63
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;diff &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &amp;lt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ps&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &amp;lt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ps &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;diff &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; .bashrc &amp;lt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ssh remote &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; .bashrc&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rsync &lt;span class=&quot;nt&quot;&gt;-arv&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--log-file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-vF&lt;/span&gt; .tmp &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;log.txt&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; src/ host::dst/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ps &lt;span class=&quot;nt&quot;&gt;-ef&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tee&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$1==&quot;tom&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;toms-procs.txt&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
               &lt;span class=&quot;o&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$1==&quot;root&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;roots-procs.txt&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;348-字段分割&quot;&gt;3.4.8 字段分割&lt;/h4&gt;

&lt;p&gt;Word Splitting&lt;/p&gt;

&lt;p&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;IFS&lt;/code&gt; 的值为空（null），就不会进行字段分割。&lt;/p&gt;

&lt;p&gt;如果没有发生扩展，也不会进行字段分割。&lt;/p&gt;

&lt;p&gt;在参数扩展、命令替换及算术扩展之后，shell 扫描得到的结果，找到双引号，对里面的内容进行字段分割。&lt;/p&gt;

&lt;p&gt;shell 把 &lt;code class=&quot;highlighter-rouge&quot;&gt;$IFS&lt;/code&gt; 的每一个字符都做为分隔符，在这些分隔符上进行分割，把其它扩展的结果分割成单独的字段。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;IFS&lt;/code&gt; 没有设置，或其值是 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;space&amp;gt;&amp;lt;tab&amp;gt;&amp;lt;newline&amp;gt;&lt;/code&gt; 这个默认值，则 &lt;code class=&quot;highlighter-rouge&quot;&gt;IFS&lt;/code&gt; 字符的任何排列都可以用来切割字段。&lt;/li&gt;
  &lt;li&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;IFS&lt;/code&gt; 中含有非默认值，而且 &lt;code class=&quot;highlighter-rouge&quot;&gt;IFS&lt;/code&gt; 中包含空白字符（空格或制表符），则词汇开头和结尾的空白字符序列会被忽略。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IFS&lt;/code&gt; 中的非空白字符与空白字符的组合也可以用来分割。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IFS&lt;/code&gt; 空白字符的序列可以用来分割。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;范例-1&quot;&gt;范例&lt;/h5&gt;

&lt;p&gt;这东西必须得有实例才能直观地理解。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'   one , tow,      three    '&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;%s&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$x&lt;/span&gt;
&amp;lt;one&amp;gt;
&amp;lt;two&amp;gt;
&amp;lt;three&amp;gt;
&lt;span class=&quot;c&quot;&gt;#  IFS 没有设置，使用默认值&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#+ 无论这些空白是纯空格，纯制表符，&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#+ 还是空格与制表符的组合，都看作单一分隔符&lt;/span&gt;


&lt;span class=&quot;nv&quot;&gt;IFS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'  one , tow,three  '&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;%s&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$x&lt;/span&gt;
&amp;lt;  one &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&amp;lt; two&amp;gt;
&amp;lt;three  &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# IFS 只有逗号时，空格也被看作普通字符&lt;/span&gt;


&lt;span class=&quot;nv&quot;&gt;IFS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' ,'&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'  one , tow,three  '&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;%s&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$x&lt;/span&gt;
&amp;lt;one&amp;gt;
&amp;lt;two&amp;gt;
&amp;lt;three&amp;gt;
&lt;span class=&quot;c&quot;&gt;# IFS 为空格和逗号时，空格与逗号的任何组合都被看作单一的分隔符&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;349-文件名扩展&quot;&gt;3.4.9 文件名扩展&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;set -f&lt;/code&gt; 会禁止 bash 使用通配符做文件名。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;如果 bash 没有开启 &lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt; 选项，词汇分割之后，它就会在字段中查找 &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;[&lt;/code&gt; 这些字符。如果找到，该字段即被当作文件名 &lt;strong&gt;匹配模板&lt;/strong&gt;。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果有匹配的文件名：文件列表会按字母排序，然后替换掉模板本身。&lt;/li&gt;
  &lt;li&gt;如果没有匹配的文件名：&lt;code class=&quot;highlighter-rouge&quot;&gt;nullglob&lt;/code&gt; 选项没有开启，该字段就不做任何改动；若 &lt;code class=&quot;highlighter-rouge&quot;&gt;nullglob&lt;/code&gt; 选项开启，该字段会被删除。&lt;/li&gt;
  &lt;li&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;nocaseglob&lt;/code&gt; 选项开启，匹配时会忽略大小写。&lt;/li&gt;
  &lt;li&gt;如果选项 &lt;code class=&quot;highlighter-rouge&quot;&gt;dotglob&lt;/code&gt; 没有开启，文件名开头的 &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; 或  &lt;code class=&quot;highlighter-rouge&quot;&gt;./&lt;/code&gt; 必须显式匹配：&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 不可匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;.file&lt;/code&gt;，只有 &lt;code class=&quot;highlighter-rouge&quot;&gt;.*&lt;/code&gt; 才能匹配；同理，只有 &lt;code class=&quot;highlighter-rouge&quot;&gt;./*&lt;/code&gt; 才能匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;./file&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;在匹配文件名的过程中，&lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; 始终要显式匹配：&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 不能匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;/dir&lt;/code&gt;，只有 &lt;code class=&quot;highlighter-rouge&quot;&gt;/*&lt;/code&gt; 才能匹配。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;GLOBIGNORE&lt;/code&gt; 变量可以用来限制文件名如何匹配模板：如果设置了该变量，匹配的文件名中，如果同时也匹配该变量，该文件名会被移除。文件名 &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;..&lt;/code&gt; 不受该变量的限制，会被忽略。&lt;/li&gt;
  &lt;li&gt;设置 &lt;code class=&quot;highlighter-rouge&quot;&gt;GLOBIGNORE&lt;/code&gt; 变量相当于开启了 &lt;code class=&quot;highlighter-rouge&quot;&gt;dotglob&lt;/code&gt; 选项，于是以 &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; 开头的文件名也会被通配符匹配：&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 可以匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;.file&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;35-别名&quot;&gt;3.5 别名&lt;/h3&gt;

&lt;h4 id=&quot;351-别名简介&quot;&gt;3.5.1 别名简介&lt;/h4&gt;

&lt;p&gt;别名就是用简短的字段来代替一个通常是更复杂的字符串。&lt;/p&gt;

&lt;p&gt;shell 平时维护了一个 &lt;strong&gt;别名列表&lt;/strong&gt;。用 &lt;code class=&quot;highlighter-rouge&quot;&gt;alias&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;unalias&lt;/code&gt; 命令来添加和删除其中的条目。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;alias&lt;/code&gt; 不加参数运行，可以查看该列表内容。&lt;/p&gt;

&lt;h5 id=&quot;别名的用途&quot;&gt;别名的用途&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;同一个命令在系统中有多个版本，用别名可以简化不同版本的调用&lt;/li&gt;
  &lt;li&gt;设置命令的默认选项&lt;/li&gt;
  &lt;li&gt;纠正易发的错误拼写&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;别名的扩展&quot;&gt;别名的扩展&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;在非交互式 shell 中不会发生别名扩展，除非使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;shopt&lt;/code&gt; 命令来启用 &lt;code class=&quot;highlighter-rouge&quot;&gt;expand_aliases&lt;/code&gt; 选项。&lt;/li&gt;
  &lt;li&gt;简单命令中的 &lt;strong&gt;第一个字段&lt;/strong&gt; 如果 &lt;strong&gt;没被引用&lt;/strong&gt;，会被检查是否是别名。如果是，则用其原始内容替换。&lt;code class=&quot;highlighter-rouge&quot;&gt;'ll' /tmp&lt;/code&gt; 不会被扩展。&lt;/li&gt;
  &lt;li&gt;除了别名中不能包含 &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; 以外，别名与原始内容可以包含任何有效的 shell 输入，包括 shell 元字符。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;原始内容&lt;/strong&gt; 中的第一个字段会被 &lt;strong&gt;再次&lt;/strong&gt; 检查，看是不是其它别名。但同一个别名只会扩展一次：如把 &lt;code class=&quot;highlighter-rouge&quot;&gt;ls -F&lt;/code&gt; 做名别名 &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt;，bash 会正常执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;ls -F&lt;/code&gt;，而不会没完没了地递归扩展下去。&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;默认情况下，bash 只会检查一行命令中的 &lt;strong&gt;第一个字段&lt;/strong&gt; 是不是别名。但是，如果第一个别名的原始内容其 &lt;strong&gt;最后一个字符是空白字符&lt;/strong&gt;，则会检查紧挨着的 &lt;strong&gt;第二个字段&lt;/strong&gt; 是否别名：
  如：&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo ll&lt;/code&gt;，bash 默认只会检查 &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt; 是否别名，而不会检查 &lt;code class=&quot;highlighter-rouge&quot;&gt;ll&lt;/code&gt;。要想让 &lt;code class=&quot;highlighter-rouge&quot;&gt;ll&lt;/code&gt; 别名被检查，可以重新给 &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt; 加个别名：&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nb&quot;&gt;alias sudo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'sudo '&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;别名 &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt; 的原始内容为 &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo &lt;/code&gt;，其最后一个为空白字符，因此跟随它后面的命令也会被检查。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;352-创建与删除别名&quot;&gt;3.5.2 创建与删除别名&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ls -l'&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;unalias &lt;/span&gt;ll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;bash 总是要把一行命令完整地读取完毕，然后才会执行其中的命令。因此，别名的扩展发生于 &lt;strong&gt;读取命令时&lt;/strong&gt;，而非执行命令时。&lt;/p&gt;

&lt;p&gt;因此，创建别名时，不要指望在同一行马上就使用：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ls -l'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; ll
bash: ll: &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;not found...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;刚创建的别名，至少要在创建别名的这一行命令的下一行才能开始生效。&lt;/p&gt;

&lt;p&gt;因此，要把创建别名的命令单独放在一行，不建议放到复合命令中去。&lt;/p&gt;

&lt;p&gt;别名不会被子进程所继承。&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;别名扩展是在执行函数之后进行的，因此相对来说解析的稍慢一些。虽然别名更容易理解，但还是建议 &lt;strong&gt;尽量使用函数&lt;/strong&gt; 而不使用别名。&lt;/p&gt;

&lt;h3 id=&quot;36-bash-其它选项&quot;&gt;3.6 bash 其它选项&lt;/h3&gt;

&lt;h4 id=&quot;361-查看选项&quot;&gt;3.6.1 查看选项&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;set -o&lt;/code&gt; 可以查看所有 shell 选项。&lt;/p&gt;

&lt;h4 id=&quot;362-修改选项&quot;&gt;3.6.2 修改选项&lt;/h4&gt;

&lt;p&gt;shell 的这些选项，可以在调用 shell 的时候设定，也可以在 shell 运行期间修改，还可以把选项直接写到启动脚本里。&lt;/p&gt;

&lt;h5 id=&quot;调用-shell-时设定&quot;&gt;调用 shell 时设定&lt;/h5&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bash &lt;span class=&quot;nt&quot;&gt;--posix&lt;/span&gt; script.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;运行期间修改&quot;&gt;运行期间修改&lt;/h5&gt;

&lt;p&gt;要想临时修改当前环境，或想在脚本中修改选项，最好就是用 &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt; 命令，&lt;code class=&quot;highlighter-rouge&quot;&gt;- 选项&lt;/code&gt; 为启用，&lt;code class=&quot;highlighter-rouge&quot;&gt;+ 选项&lt;/code&gt; 为禁用。&lt;/p&gt;</content><author><name>Hawk Zhang</name><email>imhawkz@gmail.com</email></author><category term="bash" /><category term="环境" /><summary type="html">Bash 与 Bash 脚本，脚本的编写与调试，Bash 环境</summary></entry><entry><title type="html">Python 编程导论</title><link href="https://linotes.netlify.com/programming/programming_intro/" rel="alternate" type="text/html" title="Python 编程导论" /><published>2017-05-01T00:00:00+08:00</published><updated>2017-05-01T00:00:00+08:00</updated><id>https://linotes.netlify.com/programming/programming_intro</id><content type="html" xml:base="https://linotes.netlify.com/programming/programming_intro/">&lt;p&gt;本笔记的教材为 MIT Open Course ：&lt;a href=&quot;https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-00-introduction-to-computer-science-and-programming-fall-2008/&quot;&gt;Introduction to Computer Science and Programming&lt;/a&gt;，by Prof. Eric Grimson, John Guttag.&lt;/p&gt;

&lt;p&gt;像计算机科学家一样思考。&lt;/p&gt;

&lt;p&gt;用语言来 &lt;strong&gt;描述&lt;/strong&gt; 我们想让计算机做什么，描述整个的过程。&lt;/p&gt;

&lt;h2 id=&quot;第一课--第三课&quot;&gt;第一课 ~ 第三课&lt;/h2&gt;

&lt;h3 id=&quot;高级语言--低级语言&quot;&gt;高级语言 / 低级语言&lt;/h3&gt;

&lt;p&gt;低级语言：汇编语言，通过简单的操作，把数据从内存的某个位置移动到另一个位置。类似这样的操作。&lt;/p&gt;

&lt;p&gt;高级语言：功能更复杂。&lt;/p&gt;

&lt;h3 id=&quot;通用语言--专用语言&quot;&gt;通用语言 / 专用语言&lt;/h3&gt;

&lt;h3 id=&quot;解释型语言--编译型语言&quot;&gt;解释型语言 / 编译型语言&lt;/h3&gt;

&lt;h4 id=&quot;解释型语言&quot;&gt;解释型语言：&lt;/h4&gt;

&lt;p&gt;源码被检查之后，交给解释器，然后给出输出。基本上是在运行时直接进行操作。&lt;/p&gt;

&lt;p&gt;解释型语言比较容易调试，因为还能看到源代码。&lt;/p&gt;

&lt;h4 id=&quot;编译型语言&quot;&gt;编译型语言：&lt;/h4&gt;

&lt;p&gt;有一个中间步骤，源码需要先送给一个检查器或编译器，或两者合一，产生出来的是对象代码，object code。&lt;/p&gt;

&lt;p&gt;这个步骤会进行两个重要的操作：一是帮助检查代码错误，二是在实际运行之前，经常会转换为更高效的指令序列。&lt;/p&gt;

&lt;p&gt;编译型语言执行起来更快。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Python 是通用的，高级语言，解释型语言。&lt;/strong&gt;
—&lt;/p&gt;

&lt;h2 id=&quot;python-语法&quot;&gt;Python 语法&lt;/h2&gt;

&lt;h3 id=&quot;语法&quot;&gt;语法&lt;/h3&gt;

&lt;p&gt;语法是指在该语言中，什么才是 &lt;strong&gt;合法&lt;/strong&gt; 的表达。&lt;/p&gt;

&lt;p&gt;“cat dog boy” 就不是合法的表达。&lt;/p&gt;

&lt;h3 id=&quot;语义&quot;&gt;语义&lt;/h3&gt;

&lt;h4 id=&quot;static-semantics&quot;&gt;static semantics&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;什么&lt;/strong&gt; 样的程序是 &lt;strong&gt;有意义&lt;/strong&gt; 的，什么样的表达是有意义的。&lt;/p&gt;

&lt;p&gt;有时候语法正确，却没有任何语义：”My desk is Suson”&lt;/p&gt;

&lt;p&gt;虽然从语法上讲是合法的，但不具有任何语义，通常没人给桌子起名字。&lt;/p&gt;

&lt;p&gt;静态语义帮助我们判断哪些表达式、代码具有的意义。&lt;/p&gt;

&lt;h4 id=&quot;full-semantics&quot;&gt;full semantics&lt;/h4&gt;

&lt;p&gt;这个程序是 &lt;strong&gt;做什么&lt;/strong&gt; 的？如果运行某程序，它会实现什么？&lt;/p&gt;

&lt;h3 id=&quot;数据类型&quot;&gt;数据类型&lt;/h3&gt;

&lt;p&gt;Python 会自动进行数据类型的检查，如果不符合要求会给出提示。&lt;/p&gt;

&lt;h4 id=&quot;数字&quot;&gt;数字&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;整形：5&lt;/li&gt;
  &lt;li&gt;浮点：3.14&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;字符串&quot;&gt;字符串&lt;/h4&gt;

&lt;h4 id=&quot;布尔&quot;&gt;布尔&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;True&lt;/code&gt; / &lt;code class=&quot;highlighter-rouge&quot;&gt;False&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;类型转换&quot;&gt;类型转换&lt;/h4&gt;

&lt;p&gt;把一种类型的数据转换为其它类型。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;str()&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;int()&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;数据类型是动态的&quot;&gt;数据类型是动态的&lt;/h4&gt;

&lt;p&gt;在 Python 中，数据类型是 &lt;strong&gt;动态&lt;/strong&gt; 的。可能该变量一开始是数字，接下来就可以变成字符串。但仍然建议不要随意修改数据类型，以避免更多的错误产生。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'string'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;操作符&quot;&gt;操作符&lt;/h3&gt;

&lt;p&gt;操作符用来连接操作对象。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;用来连接数字时，会进行数学运算；连接字符串时，Python 把两个字符串整合到一起。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;str(5) + 'abc'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;先把数字转换为字符串，再与其它字符串连接。&lt;/p&gt;

&lt;p&gt;为了把不同类型的数据连接到一起，通常需要进行类型转换。&lt;/p&gt;

&lt;h4 id=&quot;-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;只能连接数字，进行减法数学运算。&lt;/p&gt;

&lt;h4 id=&quot;-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;连接数字时，进行乘法运算。&lt;/p&gt;

&lt;p&gt;连接字符串和数字：如果是 &lt;code class=&quot;highlighter-rouge&quot;&gt;字符串 * 整形数字N&lt;/code&gt;，则字符串被重复 N 次。其它连接均会返回 “类型错误”。&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;操作符连接不同类型对象的行为，称为 &lt;strong&gt;过载&lt;/strong&gt;，即 overloaded，因为有点超出操作符本身的能力范围了。&lt;/p&gt;

&lt;h4 id=&quot;-2&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;只能连接数字，进行除法运算。&lt;/p&gt;

&lt;h4 id=&quot;操作符的优先级&quot;&gt;操作符的优先级&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;( )&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;**&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;*,/&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;+-&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;变量&quot;&gt;变量&lt;/h3&gt;

&lt;p&gt;用变量来保存数据。&lt;/p&gt;

&lt;p&gt;var = ‘what the hell?’&lt;/p&gt;

&lt;p&gt;通过赋值语句，把变量与值 &lt;strong&gt;绑定&lt;/strong&gt; 到一起。&lt;/p&gt;

&lt;p&gt;关于变量使用的 &lt;strong&gt;场合&lt;/strong&gt;：只要变量值在当前位置是合法的，如数据类型可以在当前环境使用，该变量就可以放在这儿。&lt;/p&gt;

&lt;h4 id=&quot;变量名&quot;&gt;变量名&lt;/h4&gt;

&lt;p&gt;尽量起有意义的变量名，便于代码的理解。如 &lt;code class=&quot;highlighter-rouge&quot;&gt;firstname&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;lastname&lt;/code&gt;，比 &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;B&lt;/code&gt; 好很多。&lt;/p&gt;

&lt;h3 id=&quot;表达式&quot;&gt;表达式&lt;/h3&gt;

&lt;p&gt;把操作对象用操作符组合在一起就形成了表达式。&lt;/p&gt;

&lt;p&gt;在 shell 中直接键入表达式，Python 会自动进行对应的操作，如运算、连接字符串等，然后直接输出结果。而在脚本中的表达式则不会自动输出，必须显式使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;print()&lt;/code&gt; 语句来实现输出。&lt;/p&gt;

&lt;h4 id=&quot;比较表达式&quot;&gt;比较表达式&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;4 &amp;gt; 2&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;abc&quot; == &quot;abc&quot;&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;z&quot; &amp;gt; &quot;a&quot;&lt;/code&gt; 返回的值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;True&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;3 &amp;lt;= 2&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;z&quot; &amp;gt; &quot;za&quot;&lt;/code&gt; 返回 &lt;code class=&quot;highlighter-rouge&quot;&gt;False&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;赋值表达式&quot;&gt;赋值表达式&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;B is &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;, C is &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;变量名 C 会指向具体的值 20，而不是指向变量 B。因此，虽然 B 变成了 3，但 C 仍然是 20。&lt;/p&gt;

&lt;p&gt;赋值，可以理解为把变量名与某处的值链接起来，或把变量名指向值。&lt;/p&gt;

&lt;h3 id=&quot;语句&quot;&gt;语句&lt;/h3&gt;

&lt;p&gt;Python 可以解释的合法的命令。&lt;/p&gt;

&lt;p&gt;常见的有赋值语句、&lt;code class=&quot;highlighter-rouge&quot;&gt;print()&lt;/code&gt; 等。&lt;/p&gt;

&lt;h2 id=&quot;代码的组织方式&quot;&gt;代码的组织方式&lt;/h2&gt;

&lt;h3 id=&quot;基本要素&quot;&gt;基本要素&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;数据&lt;/th&gt;
      &lt;th&gt;操作符&lt;/th&gt;
      &lt;th&gt;命令&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;数字&lt;br /&gt;字符串&lt;br /&gt;布尔&lt;/td&gt;
      &lt;td&gt;+ - * /&lt;br /&gt; and, or&lt;/td&gt;
      &lt;td&gt;赋值&lt;br /&gt;输入/输出&lt;br /&gt;条件结构&lt;br /&gt;循环结构&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;代码的运行顺序&quot;&gt;代码的运行顺序&lt;/h3&gt;

&lt;h4 id=&quot;线性程序&quot;&gt;线性程序&lt;/h4&gt;

&lt;p&gt;Straight Line Program&lt;/p&gt;

&lt;p&gt;程序代码按顺序 &lt;strong&gt;逐行&lt;/strong&gt; 执行。&lt;/p&gt;

&lt;h4 id=&quot;分支程序&quot;&gt;分支程序&lt;/h4&gt;

&lt;p&gt;基于某些测试的结果，指令的运行顺序是可以 &lt;strong&gt;变化&lt;/strong&gt; 的。&lt;/p&gt;

&lt;p&gt;测试通常是针对变量的值进行的。&lt;/p&gt;

&lt;h3 id=&quot;条件结构&quot;&gt;条件结构&lt;/h3&gt;

&lt;p&gt;在测试条件结构时，一定要把 &lt;strong&gt;所有可能&lt;/strong&gt; 都测试到。&lt;/p&gt;

&lt;h4 id=&quot;条件的构成&quot;&gt;条件的构成&lt;/h4&gt;

&lt;p class=&quot;notice--info&quot;&gt;&lt;strong&gt;测试条件&lt;/strong&gt; 最终会归结为 &lt;strong&gt;一个布尔值&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;条件可以是 &lt;strong&gt;一个简单的表达式&lt;/strong&gt;，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;a&amp;lt;z&lt;/code&gt;，其结果要么 &lt;code class=&quot;highlighter-rouge&quot;&gt;True&lt;/code&gt;，要么 &lt;code class=&quot;highlighter-rouge&quot;&gt;False&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;也可以是 &lt;strong&gt;多个表达式&lt;/strong&gt; 用 &lt;code class=&quot;highlighter-rouge&quot;&gt;and&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;or&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;not&lt;/code&gt; 连接而成的 &lt;strong&gt;布尔组合&lt;/strong&gt;。&lt;/p&gt;

&lt;h4 id=&quot;条件结构常见的语法&quot;&gt;条件结构常见的语法&lt;/h4&gt;

&lt;h5 id=&quot;if-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if ...&lt;/code&gt;&lt;/h5&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instructions&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;..........&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;........&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;无需像其它语言一样用 endif 之类的来关闭。&lt;/p&gt;

&lt;h5 id=&quot;if--else-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if ... else ...&lt;/code&gt;&lt;/h5&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instructions&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;..........&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;........&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instructions&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;..........&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;........&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;elif&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;elif&lt;/code&gt;&lt;/h5&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;或：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instructions&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;..........&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;........&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instructions&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;..........&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;........&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instructions&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;..........&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;........&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;嵌套&quot;&gt;嵌套&lt;/h5&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instructions&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;..........&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;........&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instructions&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;..........&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;........&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instructions&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;..........&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;........&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;循环结构&quot;&gt;循环结构&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;循环&lt;/strong&gt;，loop，也叫 &lt;strong&gt;迭代&lt;/strong&gt;，iteration。&lt;/p&gt;

&lt;h4 id=&quot;循环结构分析&quot;&gt;循环结构分析&lt;/h4&gt;

&lt;h5 id=&quot;组成循环的要素&quot;&gt;组成循环的要素&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;选择用于 &lt;strong&gt;计数&lt;/strong&gt; 的变量：循环中，必须有个变量的值随着每次循环会发生 &lt;strong&gt;变化&lt;/strong&gt;，次数必须是 &lt;strong&gt;有限&lt;/strong&gt; 的，否则会成为死循环；&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;初始化&lt;/strong&gt; 变量：变量须提前在 &lt;strong&gt;循环外&lt;/strong&gt; 初始化；&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;结束循环&lt;/strong&gt; 的测试：需要有一个用于结束循环的测试，通常测试变量值；&lt;/li&gt;
  &lt;li&gt;组建循环内代码块：修改变量；&lt;/li&gt;
  &lt;li&gt;循环结束后做什么&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;notice--success&quot;&gt;在设计一个循环时，必须确认循环会 &lt;strong&gt;中止&lt;/strong&gt;，而且一定会返回一个 &lt;strong&gt;合理的&lt;/strong&gt; 答案。&lt;/p&gt;

&lt;h5 id=&quot;流程图&quot;&gt;流程图&lt;/h5&gt;

&lt;p&gt;流程图是构建完善的循环结构的合适工具。&lt;/p&gt;

&lt;h5 id=&quot;防御性编程&quot;&gt;防御性编程&lt;/h5&gt;

&lt;p&gt;Defensive programming，是防御式设计的一种具体体现，它是为了保证，对程序的不可预见的使用，不会造成程序功能上的损坏。它可以被看作是为了减少或消除墨菲定律效力的想法。防御式编程主要用于可能被滥用，恶作剧或无意地造成灾难性影响的程序上。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;确保分析了所有可能的执行路径&lt;/li&gt;
  &lt;li&gt;确保每条路径都有合理的输出&lt;/li&gt;
  &lt;li&gt;所有可能的输入都有对应的路径，不会造成错误或死循环&lt;/li&gt;
  &lt;li&gt;不要指望用户能给你期望的输入，要把用户当傻子，会犯错&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上的编程原则可以称为 &lt;strong&gt;穷举法&lt;/strong&gt;，exhaustive enumeration，即考虑所有的可能性。&lt;/p&gt;

&lt;h4 id=&quot;while-循环&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt; 循环&lt;/h4&gt;

&lt;p&gt;满足条件就 &lt;strong&gt;一直&lt;/strong&gt; 循环&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;.....&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;......&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;......&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;## 计算两个不同大小的数之间所有因数&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'divisor '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;for-循环&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; 循环&lt;/h4&gt;

&lt;p&gt;就给定的条件 &lt;strong&gt;有限&lt;/strong&gt; 地循环&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;......&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;......&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如 ：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;## 另一种列出两数之间因数的方法&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'divisor '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;元组&quot;&gt;元组&lt;/h4&gt;

&lt;p&gt;tuple，元组，泛指 &lt;strong&gt;有限&lt;/strong&gt; 个元素所组成的 &lt;strong&gt;序列&lt;/strong&gt;，是复合数据结构的一种。它是 &lt;strong&gt;不可修改&lt;/strong&gt; 的。&lt;/p&gt;

&lt;h5 id=&quot;元组的创建&quot;&gt;元组的创建&lt;/h5&gt;

&lt;p&gt;元组由三部分组成：边界符、分隔符和元素。通常采用的边界符是小括号 &lt;code class=&quot;highlighter-rouge&quot;&gt;( )&lt;/code&gt;，分隔符是逗号 &lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;索引&quot;&gt;索引&lt;/h5&gt;

&lt;p&gt;用索引来访问元组中每个位置的元素，索引从 0 开始。因此索引只能访问 &lt;strong&gt;单个&lt;/strong&gt; 的元素。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 第 2 个元素&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 最后一个元素&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;#####　切片&lt;/p&gt;

&lt;p&gt;用切片来访问指定 &lt;strong&gt;索引范围&lt;/strong&gt; 的元素。&lt;/p&gt;

&lt;p&gt;在切片操作中，不包含区间范围的最后一个元素，这是 Python 的风格。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 读取前 3 个元素&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;foo[1:3]&lt;/code&gt; 是从第 1 个元素开始提取，到第 3 个前面的截止。即提取第 1、2 个元素。&lt;/p&gt;

&lt;p&gt;如果尝试读取索引之外的元素，会返回索引错误消息。&lt;/p&gt;

&lt;h4 id=&quot;字符串的索引和切片&quot;&gt;字符串的索引和切片&lt;/h4&gt;

&lt;p&gt;字符串中的每个字符可以类似于元组中的元素一样被索引或切片。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'what the fuck'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'what t'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sumDigits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1952&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sumDigits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sumDigits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;第-4-课-通过函数分解和抽象递归介绍&quot;&gt;第 4 课 ：通过函数分解和抽象，递归介绍&lt;/h2&gt;

&lt;h3 id=&quot;函数&quot;&gt;函数&lt;/h3&gt;

&lt;p&gt;把所有代码都放在一起来运行不利于运行、调试、升级，需要把这些代码进行分解、抽象成为函数。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;把代码拆分成多个模块&lt;/li&gt;
  &lt;li&gt;忽略细节：对于某一段代码，只需要知道给它什么输入，它会有什么输出&lt;/li&gt;
  &lt;li&gt;创建新的要素&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;关键字&quot;&gt;关键字&lt;/h4&gt;

&lt;h5 id=&quot;def&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;def&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;def&lt;/code&gt; 在 Python 中用于标识一个函数的开始，后面接着函数名称。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;return&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt; 意味着到此处停止程序的运行，同时返回随后跟随的变量。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;return None&lt;/code&gt; 中的 None 是个特殊的值，意味着没有任何值可以返回。但 None 仍然可以用来与其它变量进行比较。&lt;/p&gt;

&lt;h4 id=&quot;函数的调用&quot;&gt;函数的调用&lt;/h4&gt;

&lt;p&gt;要调用一个函数，需要知道函数的名称和参数，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;abs(55)&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;调用函数时，传入的参数与函数参数进行本地绑定，local binding，即只在函数内部生效。&lt;/p&gt;

&lt;p&gt;本地绑定不影响全局绑定。本地和全局是针对函数和 Python 解释器来讲的。本地指函数内部，全局指整个解释器环境。&lt;/p&gt;

&lt;h3 id=&quot;穷举算法&quot;&gt;穷举算法&lt;/h3&gt;

&lt;p&gt;brute-force algorithm&lt;/p&gt;

&lt;p&gt;农夫养猪和鸡，头加起来有 20 个，脚加起来有 56 个，计算猪和鸡各有多少。&lt;/p&gt;

&lt;p&gt;可通过枚举所有的可能性来计算：&lt;/p&gt;

&lt;p&gt;0 只鸡，20 只猪，算一下是否对的上？&lt;/p&gt;

&lt;p&gt;1 只鸡，19 只猪，是否正确？&lt;/p&gt;

&lt;p&gt;2 只鸡，18 只猪？&lt;/p&gt;

&lt;p&gt;……&lt;/p&gt;

&lt;p&gt;写个程序来实现上面的循环：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numLegs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numHeads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numChicks&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numHeads&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;numPigs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numHeads&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numChicks&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;totLegs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numPigs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numChicks&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;totLegs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numLegs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numPigs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numChicks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;



&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;barnYard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;heads&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Enter number of heads: '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;legs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Enter number of legs: '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pigs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chickens&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;heads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pigs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'There is no solution'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Number of pigs:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pigs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Number of chickens:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chickens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;递归&quot;&gt;递归&lt;/h3&gt;

&lt;p&gt;recursion&lt;/p&gt;

&lt;p&gt;在尝试用程序解决一个问题时，除了循环，有时候还需要用另一种思路来考虑问题，递归。简单地说，递归就是函数 &lt;strong&gt;自己调用自己&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;递归函数的优点是定义简单，逻辑清晰。理论上，所有的递归函数都可以写成循环的方式，但循环的逻辑不如递归清晰。&lt;/p&gt;

&lt;p&gt;递归算法与迭代算法的设计思路区别在于：函数或算法是否具备收敛性，当且仅当一个算法存在预期的收敛效果时，采用递归算法才是可行的，否则，就不能使用递归算法。&lt;/p&gt;

&lt;p&gt;递归其实是方便了程序员难为了机器。它只要得到数学公式就能很方便的写出程序。优点就是易理解，容易编程。但递归是用栈机制实现的（c++），每深入一层，都要占去一块栈数据区域，对嵌套层数深的一些算法，递归会力不从心，空间上会以内存崩溃而告终，而且递归也带来了大量的函数调用，这也有许多额外的时间开销。所以在深度大时，它的时空性就不好了。&lt;/p&gt;

&lt;p&gt;循环其缺点就是不容易理解，编写复杂问题时困难。优点是效率高。运行时间只因循环次数增加而增加，没什么额外开销。空间上没有什么增加。&lt;/p&gt;

&lt;h2 id=&quot;第-5-课浮点数字连续细化查找根&quot;&gt;第 5 课：浮点数字，连续细化，查找根&lt;/h2&gt;

&lt;h3 id=&quot;浮点数字&quot;&gt;浮点数字&lt;/h3&gt;

&lt;p&gt;在 Python 中，浮点数字遵循 IEEE 754 标准。&lt;/p&gt;

&lt;p&gt;按标准规定，浮点数由三部分组成：&lt;strong&gt;符号、尾数、阶&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;mantissa，尾数，也称有效位。exponent，阶，即指数。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这三部分合在一起来表示计算机中的浮点数。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;尾数 ：1 ≤ 尾数 ＜ 2&lt;/li&gt;
  &lt;li&gt;阶 ：-1022 ~ 1023&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在 CPython 中，浮点数总是 64 位的。&lt;/p&gt;

&lt;p&gt;浮点数的结构：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;符号&lt;/th&gt;
      &lt;th&gt;阶&lt;/th&gt;
      &lt;th&gt;尾数&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;单精度&lt;/td&gt;
      &lt;td&gt;1 位&lt;/td&gt;
      &lt;td&gt;8 位&lt;/td&gt;
      &lt;td&gt;23 位&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;双精度&lt;/td&gt;
      &lt;td&gt;1 位&lt;/td&gt;
      &lt;td&gt;11 位&lt;/td&gt;
      &lt;td&gt;52 位&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Python 默认的是十进制 17 位小数的精度，前 16 位是准确的，第 17 位开始不准确。&lt;/p&gt;

&lt;h3 id=&quot;范例&quot;&gt;范例&lt;/h3&gt;

&lt;p&gt;1/8 = 0.125&lt;/p&gt;

&lt;p&gt;用十进制表示：1.25 * 10&lt;sup&gt;-1&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;用二进制表示：1.0 * 10&lt;sup&gt;-3&lt;/sup&gt; ，即  0.001&lt;/p&gt;</content><author><name>Hawk Zhang</name><email>imhawkz@gmail.com</email></author><category term="python" /><category term="编程" /><summary type="html">以 Python 为例，学习编程基础。</summary></entry><entry><title type="html">rsync 的用法</title><link href="https://linotes.netlify.com/app/rsync/" rel="alternate" type="text/html" title="rsync 的用法" /><published>2017-04-01T00:00:00+08:00</published><updated>2017-04-01T00:00:00+08:00</updated><id>https://linotes.netlify.com/app/rsync</id><content type="html" xml:base="https://linotes.netlify.com/app/rsync/">&lt;p&gt;Remote Sync，1996 年 由 Andrew Tridgell 和 Paul Mackerras 编写。几乎所有发行版都内置了该工具。&lt;/p&gt;

&lt;h2 id=&quot;rsync-简介&quot;&gt;rsync 简介&lt;/h2&gt;

&lt;p&gt;rsync 是可以实现增量备份的工具。配合任务计划，rsync 能实现定时或间隔同步，配合 inotify 或 sersync，可以实现 &lt;strong&gt;触发式的实时同步&lt;/strong&gt;。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;可用于 &lt;strong&gt;本地&lt;/strong&gt; 复制及远程复制，不支持两个远程主机间的同步。&lt;/li&gt;
  &lt;li&gt;提供了大量的参数来控制其行为的每个要素，可以对要复制的文件进行非常灵活的设定。&lt;/li&gt;
  &lt;li&gt;其 &lt;strong&gt;delta-transfer 机制&lt;/strong&gt; 比较著名，该机制通过 &lt;strong&gt;仅传输两端文件的差异部分&lt;/strong&gt;，而减少了网络传输的数据量。&lt;/li&gt;
  &lt;li&gt;广泛应用于备份及镜像，同时还是一个功能强大的复制工具。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;默认&lt;/strong&gt; 使用一种 &lt;strong&gt;快速检查&lt;/strong&gt; 机制来确定需传输的文件。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;rsync-特点&quot;&gt;rsync 特点&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;支持复制链接、设备、所有者、组、权限&lt;/li&gt;
  &lt;li&gt;支持排除特定文件，用法与 GNU tar 相似&lt;/li&gt;
  &lt;li&gt;支持 CVS 模式的排除&lt;/li&gt;
  &lt;li&gt;支持使用任何透明的远程 shell ，包括 ssh 或 rsh&lt;/li&gt;
  &lt;li&gt;无需超级用户身份就可使用&lt;/li&gt;
  &lt;li&gt;通过管道传输文件，减小延迟&lt;/li&gt;
  &lt;li&gt;支持匿名或授权同步&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;delta-transfer-机制&quot;&gt;delta-transfer 机制&lt;/h4&gt;

&lt;p&gt;rsync 使用一种 &lt;code class=&quot;highlighter-rouge&quot;&gt;delta-transfer&lt;/code&gt; 机制。首先会假设两端主机使用一个低带宽、高延迟、双向通信的连接，该机制会把源文件中与目标文件相同的部分标记出来，然后 &lt;strong&gt;只传输不同的部分&lt;/strong&gt;。该机制能有效地计算出双方文件的不同之处，尤其适合于两端文件很相似的场合。&lt;/p&gt;

&lt;p&gt;该机制有效地减少了同步时需要传输的数据量。&lt;/p&gt;

&lt;h3 id=&quot;rsync-的增量传输&quot;&gt;rsync 的增量传输&lt;/h3&gt;

&lt;p&gt;发起连接的一端称为 &lt;strong&gt;客户端&lt;/strong&gt;，即执行 rsync 命令的一端，另一端称为 &lt;strong&gt;服务端&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;假设待传输文件为 A，如果目标路径中没有该文件，则 rsync 会直接传输，如果已存在，则视情况决定是否要传输。&lt;/p&gt;

&lt;p&gt;rsync 默认使用快速检查算法（quick check），它比较源文件和目标文件的 &lt;strong&gt;文件大小&lt;/strong&gt; 和 &lt;strong&gt;mtime&lt;/strong&gt;，如果不同，则传输该文件，否则忽略。&lt;/p&gt;

&lt;p&gt;当发现两端文件内容没变，只是 &lt;strong&gt;属性&lt;/strong&gt; 发生变化时，只在服务端对文件属性进行更新。&lt;/p&gt;

&lt;p&gt;如果决定要传输文件 A，不会传输整个文件，而是 &lt;strong&gt;只传&lt;/strong&gt; 源文件和目标文件之间 &lt;strong&gt;不同的部分&lt;/strong&gt;，即 &lt;strong&gt;增量传输&lt;/strong&gt;。&lt;/p&gt;

&lt;h3 id=&quot;rsync-同步基本说明&quot;&gt;rsync 同步基本说明&lt;/h3&gt;

&lt;p&gt;rsync 的 &lt;strong&gt;目的&lt;/strong&gt; 是实现 &lt;strong&gt;文件同步&lt;/strong&gt;，因此涉及 &lt;strong&gt;源文件&lt;/strong&gt;、&lt;strong&gt;目标文件&lt;/strong&gt;、以及 &lt;strong&gt;同步基准&lt;/strong&gt; 的概念。&lt;/p&gt;

&lt;p&gt;同步过程中还会涉及到源与目标之间的 &lt;strong&gt;版本控制&lt;/strong&gt; 问题。&lt;/p&gt;

&lt;p&gt;例如，是否要删除源主机上没有但目标上多出来的文件，目标文件比源文件更新 (newer than source) 时是否仍要保持同步，遇到软链接时是拷贝软链接本身还是拷贝软链接所指向的文件，目标文件已存在时是否要先对其做个备份等等。&lt;/p&gt;

&lt;h3 id=&quot;rsync-工作方式&quot;&gt;rsync 工作方式&lt;/h3&gt;

&lt;p&gt;在使用 rsync 命令时，需指定 &lt;strong&gt;源路径&lt;/strong&gt; 及 &lt;strong&gt;目标路径&lt;/strong&gt; 参数。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;第一个&lt;/strong&gt; 路径参数一定是 &lt;strong&gt;源文件路径&lt;/strong&gt;，即 &lt;strong&gt;同步基准&lt;/strong&gt;。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;最后一个&lt;/strong&gt; 路径参数一定是 &lt;strong&gt;目标文件路径&lt;/strong&gt;，即 &lt;strong&gt;待同步方&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;本地文件系统同步&quot;&gt;本地文件系统同步&lt;/h4&gt;

&lt;p&gt;本质是 &lt;strong&gt;通过管道通信&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync [OPTION...] SRC... [DEST]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;路径格式为本地路径。&lt;/p&gt;

&lt;h4 id=&quot;使用远程-shell-连接&quot;&gt;使用远程 shell 连接&lt;/h4&gt;

&lt;p&gt;本质是 &lt;strong&gt;通过管道通信&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Pull: rsync [OPTION...] [USER@]HOST:SRC... [DEST]
Push: rsync [OPTION...] SRC... [USER@]HOST:DEST
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;主机与路径之间用一个冒号 &lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;/code&gt; 分隔，路径格式为 &lt;code class=&quot;highlighter-rouge&quot;&gt;user@host:path&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;通过网络套接字连接-rsync-daemon&quot;&gt;通过网络套接字连接 rsync daemon&lt;/h4&gt;

&lt;p&gt;远程主机运行 &lt;strong&gt;rsync 服务&lt;/strong&gt;，持续 &lt;strong&gt;监听&lt;/strong&gt; 特定端口，等待客户端的连接。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Pull: rsync [OPTION...] [USER@]HOST::SRC... [DEST]
	  rsync [OPTION...] rsync://[USER@]HOST[:PORT]/SRC... [DEST]
Push: rsync [OPTION...] SRC... [USER@]HOST::DEST
	  rsync [OPTION...] SRC... rsync://[USER@]HOST[:PORT]/DEST
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;主机与路径之间用两个冒号 &lt;code class=&quot;highlighter-rouge&quot;&gt;::&lt;/code&gt; 分隔，路径参数格式为 &lt;code class=&quot;highlighter-rouge&quot;&gt;user@host::path&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;rsync://user@host/path&lt;/code&gt;。&lt;/p&gt;

&lt;h4 id=&quot;通过远程-shell-连接服务端启动临时-rsync-daemon&quot;&gt;通过远程 shell 连接，服务端启动临时 rsync daemon&lt;/h4&gt;

&lt;p&gt;远程主机无需启动 rsync 服务，而是 &lt;strong&gt;临时派生&lt;/strong&gt; 出 &lt;strong&gt;rsync daemon&lt;/strong&gt;，它是单用途的 &lt;strong&gt;一次性 daemon&lt;/strong&gt;，仅用于 &lt;strong&gt;临时读取 daemon 的配置文件&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;当此次 rsync 同步完成，远程 shell 启动的 rsync daemon 进程也会 &lt;strong&gt;自动结束&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;语法同上，区别在于选项部分须 &lt;strong&gt;指定 &lt;code class=&quot;highlighter-rouge&quot;&gt;--rsh&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;-e&lt;/code&gt;&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Pull: rsync [OPTION...] [USER@]HOST::SRC... [DEST]
	  rsync [OPTION...] rsync://[USER@]HOST[:PORT]/SRC... [DEST]
Push: rsync [OPTION...] SRC... [USER@]HOST::DEST
	  rsync [OPTION...] SRC... rsync://[USER@]HOST[:PORT]/DEST
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;rsync-命令语法&quot;&gt;rsync 命令语法&lt;/h2&gt;

&lt;h3 id=&quot;基本语法&quot;&gt;基本语法&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Local:  rsync [OPTION...] SRC... [DEST]

Access via remote shell:
  Pull: rsync [OPTION...] [USER@]HOST:SRC... [DEST]
  Push: rsync [OPTION...] SRC... [USER@]HOST:DEST

Access via rsync daemon:
  Pull: rsync [OPTION...] [USER@]HOST::SRC... [DEST]
        rsync [OPTION...] rsync://[USER@]HOST[:PORT]/SRC... [DEST]
  Push: rsync [OPTION...] SRC... [USER@]HOST::DEST
        rsync [OPTION...] SRC... rsync://[USER@]HOST[:PORT]/DEST
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;常用选项&quot;&gt;常用选项&lt;/h3&gt;

&lt;p&gt;rsync 的选项实在太过丰富，此处按类别将常用的选项加以简要说明。&lt;/p&gt;

&lt;h4 id=&quot;操作辅助&quot;&gt;操作辅助&lt;/h4&gt;

&lt;h5 id=&quot;-v&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;显示同步过程中的 &lt;strong&gt;详细信息&lt;/strong&gt;。使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-vvvv&lt;/code&gt; 会获取 &lt;strong&gt;更多&lt;/strong&gt; 的详细信息。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rsync -av --delete /media/hdd1/data1/ /media/hdd2/data2/&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;--dry-run&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--dry-run&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-n&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;--dry-run&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;模拟运行&lt;/strong&gt; 将要进行的同步，以便了解将会发生的操作，确认是否符合用户初衷。常与 &lt;code class=&quot;highlighter-rouge&quot;&gt;-vvvv&lt;/code&gt; 配合使用。&lt;/p&gt;

&lt;h5 id=&quot;--progress&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--progress&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;显示文件传输的 &lt;strong&gt;进度&lt;/strong&gt; 信息。&lt;/p&gt;

&lt;h4 id=&quot;连接选项&quot;&gt;连接选项&lt;/h4&gt;

&lt;h5 id=&quot;-e&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-e&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;指定要使用的 &lt;strong&gt;远程 shell&lt;/strong&gt;，默认为 ssh。&lt;/p&gt;

&lt;h5 id=&quot;--port&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--port&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;连接 rsync daemon 时使用的 &lt;strong&gt;端口号&lt;/strong&gt;，默认为 873。&lt;/p&gt;

&lt;h5 id=&quot;--password-file&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--password-file&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;连接到 rsync daemon 时使用，指定本地的某个 &lt;strong&gt;密码文件&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;rsync 会读取密码文件的内容，做为连接到服务端 rsync daemon 的密码。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;文件内容：&lt;strong&gt;只有一行&lt;/strong&gt;，内容 &lt;strong&gt;仅仅为密码本身&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;该文件权限： &lt;strong&gt;他人无任何权限&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;该选项仅供 rsync daemon 使用，对 ssh 无效&lt;/li&gt;
  &lt;li&gt;通过远程 shell 连接到 rsync daemon 时，该选项仅在通过 ssh 认证之后开始生效&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;同步选项&quot;&gt;同步选项&lt;/h4&gt;

&lt;h5 id=&quot;-a&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-a&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-a&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;--archive&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;-rtopgDl&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;归档模式&lt;/strong&gt;：递归传输并保留属性，包括符号链接、权限、mtime、组、所有者等&lt;/p&gt;

&lt;h5 id=&quot;--delete&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--delete&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;使用该选项，服务端才会 &lt;strong&gt;同步删除&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;不用该选项，rsync 只会传输新建和修改过的文件，不理会发送端的删除。那些在发送端已删除的文件，在服务端仍会保留。&lt;/p&gt;

&lt;h5 id=&quot;-r&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;--recursive&lt;/code&gt;  &lt;strong&gt;递归&lt;/strong&gt; 目录。&lt;/p&gt;

&lt;h5 id=&quot;-t&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-t&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-t&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;--times&lt;/code&gt;  保留 &lt;strong&gt;mtime&lt;/strong&gt; 属性。&lt;/p&gt;

&lt;p&gt;强烈建议任何时候都加上该参数，否则目标文件的 mtime 会设定为系统时间，导致下次会被更新。&lt;/p&gt;

&lt;h5 id=&quot;-o&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-o&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-o&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;--owner&lt;/code&gt;  保留 &lt;strong&gt;所有者&lt;/strong&gt; 属性。&lt;/p&gt;

&lt;h5 id=&quot;-g&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-g&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-g&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;--group&lt;/code&gt;  保留 &lt;strong&gt;属组&lt;/strong&gt; 属性。&lt;/p&gt;

&lt;h5 id=&quot;-p&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;--perms&lt;/code&gt;  保留 &lt;strong&gt;权限&lt;/strong&gt; 属性，不包括特殊权限。&lt;/p&gt;

&lt;h5 id=&quot;-h&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-H&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;保留 &lt;strong&gt;硬链接&lt;/strong&gt;&lt;/p&gt;

&lt;h5 id=&quot;-a-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-A&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;保留 &lt;strong&gt;ACL&lt;/strong&gt;&lt;/p&gt;

&lt;h5 id=&quot;-x&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-X&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;保留 &lt;strong&gt;扩展属性&lt;/strong&gt;&lt;/p&gt;

&lt;h5 id=&quot;-d&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-D&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-D&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;--device --specials&lt;/code&gt; 的组合&lt;/p&gt;

&lt;p&gt;复制 &lt;strong&gt;设备文件和特殊文件&lt;/strong&gt;。&lt;/p&gt;

&lt;h5 id=&quot;-l&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-l&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-l&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;--links&lt;/code&gt;  如果是 &lt;strong&gt;软链接&lt;/strong&gt;，则复制软链接本身，而非所指对象。&lt;/p&gt;

&lt;h5 id=&quot;-z&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-z&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;传输时进行 &lt;strong&gt;压缩&lt;/strong&gt;，以提高效率。&lt;/p&gt;

&lt;h5 id=&quot;-r-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-R&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-R&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;--relative&lt;/code&gt;  使用 &lt;strong&gt;相对路径&lt;/strong&gt;，而不仅使用最后一段。&lt;/p&gt;

&lt;p&gt;意味着将命令行中指定的 &lt;strong&gt;全部路径参数&lt;/strong&gt; 而非路径最尾部的文件名发送给服务端，包括它们的属性。&lt;/p&gt;

&lt;p&gt;如 &lt;code class=&quot;highlighter-rouge&quot;&gt;rsync -av dir1/host/tmp/rd.tmp remote:dest/&lt;/code&gt; 中，源路径参数为 &lt;code class=&quot;highlighter-rouge&quot;&gt;dir1/host/tmp/rd.tmp&lt;/code&gt;，rsync 默认仅会把 &lt;code class=&quot;highlighter-rouge&quot;&gt;rd.tmp&lt;/code&gt; 发送给服务端。&lt;/p&gt;

&lt;p&gt;但 &lt;code class=&quot;highlighter-rouge&quot;&gt;rsync -av -R dir1/host/tmp/rd.tmp remote:dest/&lt;/code&gt; 会把 &lt;code class=&quot;highlighter-rouge&quot;&gt;dir1/host/tmp/rd.tmp&lt;/code&gt; 发送给服务端。&lt;/p&gt;

&lt;h5 id=&quot;-d-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-d&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-d&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;--dirs&lt;/code&gt;  以 &lt;strong&gt;不递归&lt;/strong&gt; 的方式复制目录本身。&lt;/p&gt;

&lt;p&gt;默认递归时，如果源为 &lt;code class=&quot;highlighter-rouge&quot;&gt;dir1/file1&lt;/code&gt;，不会复制 &lt;code class=&quot;highlighter-rouge&quot;&gt;dir1&lt;/code&gt; 目录，使用该选项将复制 &lt;code class=&quot;highlighter-rouge&quot;&gt;dir1&lt;/code&gt; 但不复制 &lt;code class=&quot;highlighter-rouge&quot;&gt;file1&lt;/code&gt;。&lt;/p&gt;

&lt;h5 id=&quot;-w&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-W&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-W&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;--whole-file&lt;/code&gt;  不再使用增量传输，而 &lt;strong&gt;使用全量传输&lt;/strong&gt;。在网络带宽高于磁盘带宽时，该选项更高效。&lt;/p&gt;

&lt;h5 id=&quot;--remove-source-files&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--remove-source-files&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;删除&lt;/strong&gt; 源端已经成功传输的文件。&lt;/p&gt;

&lt;h4 id=&quot;限定传输文件&quot;&gt;限定传输文件&lt;/h4&gt;

&lt;h5 id=&quot;--max-size&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--max-size&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;设定 rsync 传输的 &lt;strong&gt;文件大小上限&lt;/strong&gt;，更大的文件不会被传输。可以使用文件大小的单位后缀，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt;。允许使用小数。&lt;/p&gt;

&lt;h5 id=&quot;--min-size&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--min-size&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;设定 rsync 传输的 &lt;strong&gt;文件大小下限&lt;/strong&gt;，更小的文件不会被传输。&lt;/p&gt;

&lt;h5 id=&quot;--exclude&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--exclude&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;指定 &lt;strong&gt;排除规则&lt;/strong&gt;，来排除无需传输的文件。&lt;/p&gt;

&lt;h5 id=&quot;--existing&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--existing&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;只更新&lt;/strong&gt; 目标端 &lt;strong&gt;已存在&lt;/strong&gt; 的文件，目标端尚不存在的不传输。&lt;/p&gt;

&lt;p&gt;注意，使用相对路径时，如果上层目录不存在，也不会传输。&lt;/p&gt;

&lt;h5 id=&quot;--ignore-existing&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--ignore-existing&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;只更新&lt;/strong&gt; 目标端 &lt;strong&gt;不存在&lt;/strong&gt; 的文件。&lt;/p&gt;

&lt;h5 id=&quot;-m&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-m&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-m&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;--prune-empty-dirs&lt;/code&gt;  从文件列表中 &lt;strong&gt;删除空目录&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;该参数告诉接收端把空目录从文件列表中去掉，包括嵌套的空目录。避免在筛选规则的作用下生成一堆没用的目录。&lt;/p&gt;

&lt;p&gt;如 &lt;code class=&quot;highlighter-rouge&quot;&gt;+ */&lt;/code&gt; 与筛选规则配合使用时，经常会生成多个空目录，可以用该参数不传输这些空目录。&lt;/p&gt;

&lt;h4 id=&quot;续传&quot;&gt;续传&lt;/h4&gt;

&lt;h5 id=&quot;--partial&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--partial&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-P&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;--partial&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;选项 &lt;code class=&quot;highlighter-rouge&quot;&gt;--partial&lt;/code&gt; 告知接收端，如果在文件完整传输之前发送端不见了，请 &lt;strong&gt;保留未传输完成的文件&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;使用 rsync 传输文件时，文件被临时保存为目标目录中的一个隐藏文件，或保存在 &lt;code class=&quot;highlighter-rouge&quot;&gt;--partial-dir&lt;/code&gt; 指定的临时目录中。&lt;/p&gt;

&lt;p&gt;如果发生传输失败：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;不使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--partial&lt;/code&gt; 选项：该 &lt;strong&gt;隐藏文件会保留在目标目录&lt;/strong&gt; 中不动&lt;/li&gt;
  &lt;li&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--partial&lt;/code&gt; 选项：该 &lt;strong&gt;隐藏文件会被更名为真正的目标文件名&lt;/strong&gt;，即使没有传输完成。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下一次可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--apend&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;--apend-verify&lt;/code&gt; 选项来再次运行 rsync，以期进行续传。&lt;/p&gt;

&lt;p class=&quot;notice--success&quot;&gt;因此，&lt;code class=&quot;highlighter-rouge&quot;&gt;--partial&lt;/code&gt; 需要与 &lt;code class=&quot;highlighter-rouge&quot;&gt;--apend&lt;/code&gt; 配合使用，才能实现断点续传。&lt;/p&gt;

&lt;h5 id=&quot;--append-选项&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--append&lt;/code&gt; 选项&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--append&lt;/code&gt; 选项是真正的续传开关，无论是否使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;--partial&lt;/code&gt; 选项，都可以使用它。&lt;/p&gt;

&lt;p&gt;当使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--append&lt;/code&gt; 选项时，不会再创建临时文件，&lt;strong&gt;文件会被直接创建到目标&lt;/strong&gt;，于是，突然的中断，产生的结果与使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--partial&lt;/code&gt; 是一致的，留下的未传完的文件均是真正的文件名，只不过 &lt;code class=&quot;highlighter-rouge&quot;&gt;--append&lt;/code&gt; 不会产生那些隐藏的临时文件。&lt;/p&gt;

&lt;p&gt;如果要续传大型文件，在续传时，应使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--append&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;--append-verify&lt;/code&gt; 开关。&lt;/p&gt;

&lt;p&gt;rsync 是在版本 3.0.0 之后，开始支持 &lt;code class=&quot;highlighter-rouge&quot;&gt;--append-verify&lt;/code&gt; 选项的。&lt;/p&gt;

&lt;p&gt;版本 3.0.0 之前：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--append&lt;/code&gt; 始终会比较两端的文件，不会假想它们相同&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在传输之前会对目标文件进行完整的校验，如果检验失败就会从头重新传输。&lt;/p&gt;

&lt;p&gt;版本 3.0.0 之后：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--append&lt;/code&gt; 会认为两端的文件是完全相同的，不会比较两端的文件，不做校验而直接传输&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--append-verify&lt;/code&gt; 始终会比较两端的文件，进行校验，不会假想它们相同&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;文件的检查&quot;&gt;文件的检查&lt;/h4&gt;

&lt;p&gt;检查文件是否有变化是确定是否要传输该文件的前提。&lt;/p&gt;

&lt;h5 id=&quot;-u&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-u&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-u&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;--update&lt;/code&gt;  &lt;strong&gt;忽略&lt;/strong&gt; 那些接收端比发送端要 &lt;strong&gt;新&lt;/strong&gt; 的文件。&lt;/p&gt;

&lt;p&gt;注意：该选项是接收端判断的，不会影响删除行为。&lt;/p&gt;

&lt;h5 id=&quot;--ignore-times&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--ignore-times&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--ignore-times&lt;/code&gt; 选项会 &lt;strong&gt;关闭&lt;/strong&gt; rsync 对文件时间和大小的检查，&lt;strong&gt;无条件地传输所有文件&lt;/strong&gt;。&lt;/p&gt;

&lt;h5 id=&quot;--size-only&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--size-only&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;只检查文件大小&lt;/strong&gt;，相同就忽略。&lt;/p&gt;

&lt;h5 id=&quot;-c&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-c&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-c&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;--checksum&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;该选项会改变 rsync 检查文件的方法。&lt;/p&gt;

&lt;p&gt;不用该选项时，在传输之前，rsync 默认使用快速检查，即检查每个文件的大小和修改时间。&lt;/p&gt;

&lt;p&gt;使用该选项以后，rsync 会 &lt;strong&gt;忽略文件时间&lt;/strong&gt;，只检查文件大小。&lt;strong&gt;如果文件大小相同，则进一步检查校验码&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;生成校验码&lt;/strong&gt; 意味着，在传输之前，两端主机都要花费大量的时间在磁盘 I/O 上，读取文件中的所有数据。这会 &lt;strong&gt;严重影响传输速度&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;发送端扫描文件系统并生成文件列表时，会创建校验码。接收端在扫描变化的文件时生成校验码。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果发现 &lt;strong&gt;文件大小相同&lt;/strong&gt;，则会 &lt;strong&gt;进一步检查其校验码&lt;/strong&gt; ，如果 &lt;strong&gt;检验码不同，则仅传输该文件的差异部分&lt;/strong&gt;。&lt;/li&gt;
  &lt;li&gt;如果发现文件 &lt;strong&gt;大小不同&lt;/strong&gt;，会 &lt;strong&gt;重新传输整个文件&lt;/strong&gt;，覆盖目标文件。&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;notice--success&quot;&gt;因此，&lt;code class=&quot;highlighter-rouge&quot;&gt;--checksum&lt;/code&gt; 选项最适合其文件内容经常有 &lt;strong&gt;小变化的大型文件的同步&lt;/strong&gt;。&lt;/p&gt;

&lt;p class=&quot;notice--warning&quot;&gt;要注意一点，rsync 传输的每个文件传到对端后，都要进行整个文件的校验，以 &lt;strong&gt;确保文件被正确重建&lt;/strong&gt;。但该检验是在文件 &lt;strong&gt;传输之后&lt;/strong&gt;，无论如何都要进行的，与 &lt;code class=&quot;highlighter-rouge&quot;&gt;--checksum&lt;/code&gt; 的作用完全不同，后者是在 &lt;strong&gt;传输之前&lt;/strong&gt; 想弄清楚 &lt;strong&gt;对端文件是否需要更新&lt;/strong&gt;。&lt;/p&gt;

&lt;h5 id=&quot;--whole-file-选项&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--whole-file&lt;/code&gt; 选项&lt;/h5&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-W&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;--whole-file&lt;/code&gt; 选项时，rsync &lt;strong&gt;不会使用 delta-transfer 机制&lt;/strong&gt;，即会 &lt;strong&gt;传输整个文件&lt;/strong&gt;，而非仅仅不同的部分。&lt;/p&gt;

&lt;p&gt;当网络带宽大于本地磁盘的带宽时，使用该选项会加快同步速度。因此它是本地同步的默认选项。&lt;/p&gt;

&lt;h4 id=&quot;服务端主机上的操作&quot;&gt;服务端主机上的操作&lt;/h4&gt;

&lt;p class=&quot;notice--success&quot;&gt;😈 rsync 同步时，希望尽量 &lt;strong&gt;减少不必要的网络传输&lt;/strong&gt;。因此，无论本地还是服务端，能本地解决的，就决不应该通过网络传输来解决。&lt;/p&gt;

&lt;p&gt;某些时候，可能需要在目标主机上同时保存某个文件的多个副本，如果能让发送端知道目标主机已经存在该文件，就无需重复传输。&lt;/p&gt;

&lt;h5 id=&quot;--compare-dest-选项&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--compare-dest&lt;/code&gt; 选项&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--compare-dest=DIR&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;DIR 为目标主机上的目录。当目标目录中某文件丢失，可能需要重传时，该选项会让 rsync 在传输之前，先在本地 DIR 寻找，&lt;strong&gt;如果找到了相同的文件，就不会传输该文件&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;可以使用多个 &lt;code class=&quot;highlighter-rouge&quot;&gt;--compare-dest&lt;/code&gt; 选项来指定多个比较目录，rsync 会按顺序依次在这些目录中寻找。&lt;/p&gt;

&lt;p&gt;如果在这些目录中找到了相同的文件，但文件属性不同，rsync 会生成一个本地副本，并将其更新为所需的属性。&lt;/p&gt;

&lt;p&gt;如果没有找到，会找到一个接近的文件，以尝试加速传输。&lt;/p&gt;

&lt;p&gt;如果 DIR 用的是相对路径，它一定要相对于目标目录。&lt;/p&gt;

&lt;h5 id=&quot;--copy-dest-选项&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--copy-dest&lt;/code&gt; 选项&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--copy-dest=DIR&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;工作原理与上面选项类似。如果在目标主机的比较目录中 &lt;strong&gt;找到了相同的文件&lt;/strong&gt;，rsync 就不会从网络传输，而是从该目录中 &lt;strong&gt;把文件从本地复制到目标目录&lt;/strong&gt;。&lt;/p&gt;

&lt;h5 id=&quot;--link-dest-选项&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--link-dest&lt;/code&gt; 选项&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--link-dest=DIR&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;工作原理相同。如果在比较目录中找到的文件不仅与目标文件大小时间相同，而且 &lt;strong&gt;属性也完全一致&lt;/strong&gt;，则会从比较目录把该文件 &lt;strong&gt;硬链接到目标目录&lt;/strong&gt;，可以大大减少不必要的磁盘占用。&lt;/p&gt;

&lt;p&gt;如果发现 rsync 没有生成链接，首先应该检查两地的文件属性是否一致，另外还要检查是否某些属性被管控，而导致 rsync 无法检查。比如挂载选项将超级用户作为了唯一合法用户，导致普通用户无权读取文件属性；或用了普通权限挂载可移动驱动器。&lt;/p&gt;

&lt;p&gt;该选项特别适用于 &lt;strong&gt;向空目录复制文件&lt;/strong&gt;。做了硬链接以后，rsync 就不用再去比较目录查找，而且其延展性很强，如果哪天需要修改所有文件的属性，只需要修改比较目录中的文件，其硬链接就自动跟着变化了。&lt;/p&gt;

&lt;h5 id=&quot;--delete-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--delete&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;同步时，以源为基准，对服务端的文件进行操作。&lt;strong&gt;多则删，少则补&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--delete&lt;/code&gt; 是在接收端执行的，所以它是在 exclude/include 规则生效之后才执行的。&lt;/p&gt;

&lt;h5 id=&quot;-b&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-b&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-b&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;--backup&lt;/code&gt;  对目标上已存在的文件做一个 &lt;strong&gt;备份&lt;/strong&gt;，备份文件后缀为 &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;--backup-dir&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--backup-dir&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;指定 &lt;strong&gt;备份文件的保存路径&lt;/strong&gt;。不指定时默认与原文件同目录。&lt;/p&gt;

&lt;h4 id=&quot;小结&quot;&gt;小结&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;如果经常使用 rsync 来单纯地把文件从 A 移动到 B，&lt;strong&gt;只需要续传功能&lt;/strong&gt;，不要使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--checksum&lt;/code&gt;，一定要用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--append-verify&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;如果使用 rsync 来备份文件，而且备份的主要为大型文件，其修改内容通常很少，可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--append-verify&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;范例&quot;&gt;范例&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -azvHP -e ssh --delete --exclude Cache --link-dest=yesterdaystargetdir remote1:sourcedir todaystargetdir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;遍历子目录&lt;/li&gt;
  &lt;li&gt;复制符号链接&lt;/li&gt;
  &lt;li&gt;保留权限&lt;/li&gt;
  &lt;li&gt;保留 mtime&lt;/li&gt;
  &lt;li&gt;保留组&lt;/li&gt;
  &lt;li&gt;保留所有者&lt;/li&gt;
  &lt;li&gt;保留设备文件及特殊文件&lt;/li&gt;
  &lt;li&gt;保留硬链接&lt;/li&gt;
  &lt;li&gt;使用 SSH 做为服务端 shell&lt;/li&gt;
  &lt;li&gt;同步删除动作&lt;/li&gt;
  &lt;li&gt;排除 Cache 目录&lt;/li&gt;
  &lt;li&gt;比较目录&lt;/li&gt;
  &lt;li&gt;支持续传&lt;/li&gt;
  &lt;li&gt;传输前压缩&lt;/li&gt;
  &lt;li&gt;显示传输进度&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;rsync-路径参数注意事项&quot;&gt;rsync 路径参数注意事项&lt;/h3&gt;

&lt;h4 id=&quot;传输的根&quot;&gt;传输的根&lt;/h4&gt;

&lt;p&gt;rsync 所传输的文件结构往往是一个经筛选后得到的目录树结构，该目录树的最根一层目录，称为传输的根目录，或传输的根（root of the transfer）。与 Linux 根目录没有直接关系。&lt;/p&gt;

&lt;p&gt;如：本地主机有目录 &lt;code class=&quot;highlighter-rouge&quot;&gt;/tmp/dir1/test/&lt;/code&gt;，如果用 rsync 把 &lt;code class=&quot;highlighter-rouge&quot;&gt;/tmp/dir1&lt;/code&gt; 目录及其内容同步给服务端主机，则 &lt;code class=&quot;highlighter-rouge&quot;&gt;dir1&lt;/code&gt; 就是传输的根。&lt;/p&gt;

&lt;h4 id=&quot;指定多个源路径&quot;&gt;指定多个源路径&lt;/h4&gt;

&lt;p&gt;通过使用 &lt;strong&gt;多个 &lt;code class=&quot;highlighter-rouge&quot;&gt;host:file&lt;/code&gt; 参数&lt;/strong&gt;，可以 &lt;strong&gt;同时指定多个源文件路径&lt;/strong&gt;，第二个起可以 &lt;strong&gt;省略主机&lt;/strong&gt;：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -av host:file1 :file2 host:file{3,4} /dest/
rsync -av host::modname/file{1,2} host:modname/file3 /dest/
rsync -av host::modname/file1 ::modname/file{3,4}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;较早版本的 rsync 是先用空格分隔各目录，再用单引号括起来：&lt;/p&gt;

  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -av host:`dir1/file1 dir2/file2` /dest
rsync host::`modname/dir1/file1 modname/dir2/file2` /dest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;p&gt;以上用法在新版本也可以使用，但不如之前的方法便于使用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;如果传输的文件名含有空格，可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--protect-args&lt;/code&gt; 参数，或者把空格转义：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -av host:`file\ name\ with\ spaces` /dest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;只有一个路径参数&quot;&gt;只有一个路径参数&lt;/h4&gt;

&lt;p&gt;如果在 rsync 命令中 &lt;strong&gt;仅有一个路径参数&lt;/strong&gt;，将被视为源路径，其效果类似于 &lt;code class=&quot;highlighter-rouge&quot;&gt;ls -l&lt;/code&gt;，会列出该主机上的 &lt;strong&gt;文件列表&lt;/strong&gt;，而 &lt;strong&gt;不会复制文件&lt;/strong&gt;。&lt;/p&gt;

&lt;h4 id=&quot;源路径结尾的斜线&quot;&gt;源路径结尾的斜线&lt;/h4&gt;

&lt;p&gt;当源路径是目录时，&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;若 &lt;strong&gt;目录结尾有斜线&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;dir/&lt;/code&gt;，表示 &lt;strong&gt;同步目录中的文件&lt;/strong&gt;，不包括目录本身&lt;/li&gt;
  &lt;li&gt;若 &lt;strong&gt;目录结尾没有斜线&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;dir&lt;/code&gt;，表示 &lt;strong&gt;同步整个目录&lt;/strong&gt;，包括目录本身&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~]# rsync /etc /tmp
~]# rsync /etc/ /tmp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;第一个命令会在 &lt;code class=&quot;highlighter-rouge&quot;&gt;/tmp&lt;/code&gt; 目录下创建 &lt;code class=&quot;highlighter-rouge&quot;&gt;etc&lt;/code&gt; 目录，而第二个命令不会，源路径 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/&lt;/code&gt; 中的所有文件都直接放到 &lt;code class=&quot;highlighter-rouge&quot;&gt;/tmp&lt;/code&gt; 目录下。&lt;/p&gt;

&lt;p&gt;注意，无论目录结尾有否斜线，&lt;strong&gt;目录的属性始终会传输给对端&lt;/strong&gt;：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -av /src/foo /dest
rsync -av /src/foo/ /dest/foo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;🚩 即，以上两种情况的结果是一致的，会以同样的方式复制文件，而且 &lt;code class=&quot;highlighter-rouge&quot;&gt;/dest/foo&lt;/code&gt; 的属性最终也是一致的。&lt;/p&gt;

&lt;h4 id=&quot;服务端主机路径的省略&quot;&gt;服务端主机路径的省略&lt;/h4&gt;

&lt;p&gt;如果服务端主机或模块的末尾 &lt;strong&gt;省略了路径&lt;/strong&gt;，则代表路径为 &lt;strong&gt;默认目录&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;通过 ssh 连接时，默认目录为 Linux 用户家目录：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -av src/ host:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;连接到 rsync daemon 时，默认目录为该模块指定的目录：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -av host::module /dest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果在服务端主机后 &lt;code class=&quot;highlighter-rouge&quot;&gt;::&lt;/code&gt; &lt;strong&gt;省略了模块&lt;/strong&gt;，将查看该主机 rsync 模块列表：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync somehost.mydomain.com::
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;隐含目录&quot;&gt;隐含目录&lt;/h4&gt;

&lt;p&gt;Implied Directories&lt;/p&gt;

&lt;h5 id=&quot;默认行为&quot;&gt;默认行为&lt;/h5&gt;

&lt;p&gt;默认情况下，rsync 只会传输命令行中源路径参数中最后一个斜线后面的字符串，可以是文件，也可以是目录。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -av /foo/bar/baz.c remote:/tmp/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该命令会把本地的 &lt;code class=&quot;highlighter-rouge&quot;&gt;baz.c&lt;/code&gt; 文件复制到服务端主机的 &lt;code class=&quot;highlighter-rouge&quot;&gt;/tmp/&lt;/code&gt; 目录，同步结果为在服务端创建 &lt;code class=&quot;highlighter-rouge&quot;&gt;/tmp/baz.c&lt;/code&gt;。前面的 &lt;code class=&quot;highlighter-rouge&quot;&gt;/foo/bar/&lt;/code&gt; 被忽略。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -av /foo/bar/baz remote:/tmp/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该命令会把本地的 &lt;code class=&quot;highlighter-rouge&quot;&gt;baz&lt;/code&gt; 目录复制到服务端 &lt;code class=&quot;highlighter-rouge&quot;&gt;/tmp/&lt;/code&gt; 目录，即 &lt;code class=&quot;highlighter-rouge&quot;&gt;/tmp/baz&lt;/code&gt;。前面的 &lt;code class=&quot;highlighter-rouge&quot;&gt;/foo/bar/&lt;/code&gt; 被忽略。&lt;/p&gt;

&lt;h5 id=&quot;使用--r-选项&quot;&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-R&lt;/code&gt; 选项&lt;/h5&gt;

&lt;p&gt;而当使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-R&lt;/code&gt; 选项时，rsync 会使用相对路径，即把命令行中完整的路径参数全部发送给接收端，而不仅仅是路径参数的最后部分。非常适用于 &lt;strong&gt;需要传输多个不同的目录&lt;/strong&gt; 的场合。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -avR /foo/bar/baz.c remote:/tmp/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-R&lt;/code&gt; 后，&lt;code class=&quot;highlighter-rouge&quot;&gt;baz.c&lt;/code&gt; 将 &lt;strong&gt;连同其上层目录结构&lt;/strong&gt; 一起被复制到服务端，同步结果为在服务端创建 &lt;code class=&quot;highlighter-rouge&quot;&gt;/tmp/foo/bar/baz.c&lt;/code&gt;。这些额外的路径元素被称为 &lt;strong&gt;隐含目录&lt;/strong&gt;。&lt;/p&gt;

&lt;h5 id=&quot;限制隐含目录的层级&quot;&gt;限制隐含目录的层级&lt;/h5&gt;

&lt;p&gt;如果 &lt;strong&gt;不希望&lt;/strong&gt; 源路径参数 &lt;strong&gt;全部&lt;/strong&gt; 做为隐含目录发送给对方，对于每个路径参数，都可以指定哪一部分要做为隐含目录。&lt;/p&gt;

&lt;p&gt;通过在源路径参数中加入 &lt;code class=&quot;highlighter-rouge&quot;&gt;./&lt;/code&gt; 来分隔路径参数，只有其后面的才会做为隐含目录发送给接收端。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -avR /foo/./bar/baz.c remote:/tmp/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该命令的结果是在接收端创建 &lt;code class=&quot;highlighter-rouge&quot;&gt;/tmp/bar/baz.c&lt;/code&gt;。&lt;/p&gt;

&lt;h2 id=&quot;rsync-筛选规则&quot;&gt;rsync 筛选规则&lt;/h2&gt;

&lt;p class=&quot;notice--warning&quot;&gt;写到这里，必须抱怨一句，rsync man page 写的实在是过于难懂了，逻辑也很混乱！导致普通用户的学习成本急剧增加，浪费了很多本不该浪费的时间。这就是本人倡导 “&lt;strong&gt;用简洁清晰的语言讨论技术&lt;/strong&gt;” 的原因。能写代码、编程序是一回事，而能把事情讲清楚是另一回事。&lt;/p&gt;

&lt;p&gt;通过筛选规则可以灵活 &lt;strong&gt;选择需要同步或排除的文件&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--include&lt;/code&gt; 选项可以指定需要传输的文件，称 &lt;strong&gt;包含规则&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--exclude&lt;/code&gt; 选项可以排除无需传输的文件，称 &lt;strong&gt;排除规则&lt;/strong&gt;。&lt;/p&gt;

&lt;p class=&quot;notice--success&quot;&gt;rsync 会根据命令行中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;--include&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;--exclude&lt;/code&gt; 选项 &lt;strong&gt;依次&lt;/strong&gt; 生成一个过滤 &lt;strong&gt;规则列表&lt;/strong&gt;。&lt;/p&gt;

&lt;h3 id=&quot;筛选的原则&quot;&gt;筛选的原则&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;排除了目录，就排除了其中所有文件&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;包含了目录，不会自动包含其中的文件&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;命令行选项中，&lt;code class=&quot;highlighter-rouge&quot;&gt;--filter&lt;/code&gt; 支持全部规则的解析，而 &lt;code class=&quot;highlighter-rouge&quot;&gt;--include&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;--exclude&lt;/code&gt; 只支持使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt; 来清除规则列表。&lt;/li&gt;
  &lt;li&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--filter&lt;/code&gt; 选项时，在规则的 &lt;strong&gt;开头必须指定规则名称&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--include&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;--exclude&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;--filter&lt;/code&gt; 一次只能指定一条规则，要想指定多条规则：
    &lt;ul&gt;
      &lt;li&gt;可以在命令行上 &lt;strong&gt;多次使用&lt;/strong&gt; 选项&lt;/li&gt;
      &lt;li&gt;可以 &lt;strong&gt;从文件读取&lt;/strong&gt; 规则：&lt;code class=&quot;highlighter-rouge&quot;&gt;--filter=&quot;. mergefile&quot;&lt;/code&gt;，或 &lt;code class=&quot;highlighter-rouge&quot;&gt;--include-from&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;--exclude-from&lt;/code&gt;，&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;生成要文件列表之后，对于其中的每个文件，rsync 都会对照筛选规则列表 &lt;strong&gt;依次&lt;/strong&gt; 检查，并按 &lt;strong&gt;首个匹配的筛选规则&lt;/strong&gt; 行事，该条规则：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果是排除，便忽略该文件不同步&lt;/li&gt;
  &lt;li&gt;如果是包含，则不会忽略该文件&lt;/li&gt;
  &lt;li&gt;如果没有匹配的规则，也不会忽略文件文件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;根据 rsync 的以上工作特点，我们在指定筛选规则或编辑规则列表时，一定要 &lt;strong&gt;注意先后顺序&lt;/strong&gt;。因为 rsync 会 &lt;strong&gt;按照匹配到的第一个规则行事&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;因此，编写规则通常会按以下顺序进行：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;设定包含规则&lt;/li&gt;
  &lt;li&gt;逐层包含子目录&lt;/li&gt;
  &lt;li&gt;设定排除规则&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;筛选规则的生效时机&quot;&gt;筛选规则的生效时机&lt;/h3&gt;

&lt;p&gt;发送端运行 rsync 命令后，rsync 会立即 &lt;strong&gt;扫描&lt;/strong&gt; 命令行中给定的文件和目录，扫描过程中还会按照目录进行排序，将同一个目录的文件放在相邻的位置，称为 &lt;strong&gt;拷贝树&lt;/strong&gt;（copy tree）。扫描完成后将需同步的文件或目录记录到 &lt;strong&gt;文件列表&lt;/strong&gt; 中，然后将文件列表 &lt;strong&gt;传输给接收端&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;而 &lt;strong&gt;筛选规则的作用时刻是在扫描拷贝树&lt;/strong&gt; 时，所以会根据规则来匹配，并决定是否把文件记录到文件列表中。&lt;/p&gt;

&lt;p&gt;实际上，即使是排除的文件，也会记录到文件列表中，只不过被标记为 hide 而隐藏起来。&lt;/p&gt;

&lt;p class=&quot;notice--success&quot;&gt;筛选规则的生效时间在 rsync 整个同步过程中是非常靠前的，它会影响很多选项的操作对象，最典型的如 &lt;code class=&quot;highlighter-rouge&quot;&gt;--delete&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&quot;从文件读取规则&quot;&gt;从文件读取规则&lt;/h3&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--filter=&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;--include-from&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;--exclude-from&lt;/code&gt; 选项都可以从文件读取规则。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--include-from&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;--exclude-from&lt;/code&gt; 选项读取规则文件&lt;/li&gt;
  &lt;li&gt;通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;--filter=&quot;merge file&quot;&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;--filter=&quot;dir-merge file&quot;&lt;/code&gt; 可以把整个规则文件合并到筛选规则中来&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -av --include-from=include.file src/ dest/
rsync -av --exclude-from=include.file src/ dest/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;规则文件有两种形式：&lt;strong&gt;单独&lt;/strong&gt; 的规则文件，以及 &lt;strong&gt;每目录&lt;/strong&gt; 一个独立的规则文件&lt;/p&gt;

&lt;h4 id=&quot;单独的规则文件&quot;&gt;单独的规则文件&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--filter=&quot;merge file&quot;&lt;/code&gt; 或简写为 &lt;code class=&quot;highlighter-rouge&quot;&gt;--filter=&quot;. file&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;单独的规则文件用于一次全部读取，其规则会被合并到规则列表中。&lt;/p&gt;

&lt;h4 id=&quot;每目录的规则文件&quot;&gt;每目录的规则文件&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--filter=&quot;dir-merge file&quot;&lt;/code&gt; 或简写为 &lt;code class=&quot;highlighter-rouge&quot;&gt;--filter=&quot;: file&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;rsync 会遍历扫描每个目录，寻找目录中的特定名称（命令中指定的，如上 &lt;code class=&quot;highlighter-rouge&quot;&gt;file&lt;/code&gt;）的规则文件，如果存在，则将其内容合并到当前继承的规则列表中。&lt;/p&gt;

&lt;p&gt;这些每目录规则文件必须在发送端创建，因为要扫描发送端来决定传送哪些文件。&lt;/p&gt;

&lt;p&gt;如果希望这些规则文件能够控制接收端避免删除某些文件，则需要将它们发送给接收端。&lt;/p&gt;

&lt;p&gt;在每目录规则概念出现以后，有必要区分一下全局规则和每目录规则：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;全局规则&lt;/strong&gt;：本次 rsync 同步过程中全程有效的规则，基本上在 dir-merge 之前读取的规则只要不重复就是全局规则&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;每目录规则&lt;/strong&gt;：仅对每个目录自身有效，加上其继承的父目录的规则&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;merge-使用的修饰符&quot;&gt;merge 使用的修饰符&lt;/h5&gt;

&lt;p&gt;在 merge 或 dir-merge 后面也可以跟修饰符，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;--filter=&quot;:n- file&quot;&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;修饰符的主要作用是让 rsync 更好地了解该规则文件，以及应该如何使用它。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;&lt;/strong&gt;  规则文件仅由排除表达式组成，不含其他规则。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;&lt;/strong&gt;  规则文件仅由包含表达式组成，不含其他规则。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;C&lt;/code&gt;&lt;/strong&gt;  规则文件应该以 CVS 兼容方式来读取。该修饰符同时会开启 &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;w&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;，同时也允许使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt; 来反向指定，如果没有指定文件名，默认会使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;.cvsignore&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;e&lt;/code&gt;&lt;/strong&gt;  传输时排除规则文件本身。即规则文件自身不会被传输。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;&lt;/strong&gt;  规则不会被子目录继承。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;w&lt;/code&gt;&lt;/strong&gt;  规则使用空格分隔，而非换行符。此时不允许规则中使用注释。&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;除了以上这些修饰符，merge 还可以使用下文中的为 &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; 准备的修饰符（除了 &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt;，它用不上）。&lt;/p&gt;

&lt;p&gt;如：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:s&lt;/code&gt;  表示每目录的规则文件仅在发送端生效。&lt;/p&gt;

&lt;p&gt;如果命令行中的 merge 选项中已经使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;s&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt; 这类令规则仅在一端生效的修饰符，则其读取的规则文件中就不能重复出现它们。&lt;/p&gt;

&lt;h5 id=&quot;子目录的规则&quot;&gt;子目录的规则&lt;/h5&gt;

&lt;p&gt;每目录规则默认会被其子目录继承，除非使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; 修饰符。&lt;/p&gt;

&lt;p&gt;如果子目录中存在自己的规则文件，则其自己的规则会排在它继承规则的前面，具有更高的优先级。&lt;/p&gt;

&lt;h5 id=&quot;防止规则被继承的方法&quot;&gt;防止规则被继承的方法&lt;/h5&gt;

&lt;p&gt;命令行中 merge 的位置，决定了全体每目录规则在全局规则列表中的位置。因此，如果在 &lt;strong&gt;命令行中更靠前的位置指定规则&lt;/strong&gt;，会覆盖每目录的规则，因为它位于全局规则列表中更靠前的位置。&lt;/p&gt;

&lt;p&gt;从每目录规则文件中读取到的 &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt;，即清除列表规则（list-clearing rule），只会清除其继承的规则。&lt;/p&gt;

&lt;p&gt;另外，如果在规则中使用前导斜线 &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; ，就可以阻止该条规则被继承。因为每目录规则文件中的规则，均是相对于规则文件所在的目录的，因此规则中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;/foo&lt;/code&gt; 只会匹配该规则文件所在目录中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt;，而不会匹配其子目录中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt;。&lt;/p&gt;

&lt;h5 id=&quot;使用每目录规则时删除的注意事项&quot;&gt;使用每目录规则时，删除的注意事项&lt;/h5&gt;

&lt;p&gt;如果没有删除的选项，每目录规则只与发送端有关，因此完全可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--filter=&quot;:e .file&quot;&lt;/code&gt; 把规则文件自身给排除掉，不予传输。&lt;/p&gt;

&lt;p&gt;但是，如果需要在接收端进行删除操作，而且还需要排除某些文件，以避免被删除，则 &lt;strong&gt;必须要保证把所有规则文件都发送给接收端&lt;/strong&gt;，这样两端的主机所获得的规则才完全相同。之后，需要 &lt;strong&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--delete-after&lt;/code&gt; 选项&lt;/strong&gt;，来告知接收端，直到 &lt;strong&gt;接收完所有的规则文件才开始执行删除的操作&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -avF --delete-after host:src/dir /dest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;筛选规则的语法&quot;&gt;筛选规则的语法&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;规则名称[,修饰符] [表达式或文件名]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;规则名称有两种形式：长名，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;exclude&lt;/code&gt;。短名，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;。因短名只有一个字符，因此更多被使用。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使用 &lt;strong&gt;长名&lt;/strong&gt;： &lt;code class=&quot;highlighter-rouge&quot;&gt;exclude,/ dir1/mergefile&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;使用 &lt;strong&gt;短名&lt;/strong&gt;： &lt;code class=&quot;highlighter-rouge&quot;&gt;-,! */&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;使用 &lt;strong&gt;短名&lt;/strong&gt; 时，可以省略修饰符前面的逗号：&lt;code class=&quot;highlighter-rouge&quot;&gt;-p *.tmp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;规则名称&quot;&gt;规则名称&lt;/h4&gt;

&lt;p&gt;本段落中规则名称均为 &lt;code class=&quot;highlighter-rouge&quot;&gt;长名, 短名&lt;/code&gt; 格式。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exclude, -&lt;/code&gt;  指定要排除的文件。只作用于发送端，被排除的文件在文件列表中与隐藏规则一样被隐藏&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;include, +&lt;/code&gt;  指定要包括的文件。只作用于发送端，被包含的文件将明确记录到文件列表中&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;merge, .&lt;/code&gt;  指定额外文件，从中读取更多规则&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dir-merge, :&lt;/code&gt;  指定额外目录，读取其中的所有规则文件&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hide, H&lt;/code&gt;  指定传输中要隐藏的文件。只作用于发送端，隐藏后的文件对于接收端来说是看不见的，也就是说接收端会认为它不存在于源端。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;show, S&lt;/code&gt;  指定要显示的文件。只作用于发送端，是隐藏规则的反向规则。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;protect, P&lt;/code&gt;  指定要保护的文件。只作用于接收端，被保护的文件不会被删除掉。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;risk, R&lt;/code&gt;  指定不保护的文件，可以删除&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;clear, !&lt;/code&gt;  清除当前规则列表&lt;/p&gt;

&lt;p&gt;如果从文件中读取规则，规则文件中的空行将被忽略，&lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt; 开头的行视为注释。&lt;/p&gt;

&lt;h4 id=&quot;修饰符&quot;&gt;修饰符&lt;/h4&gt;

&lt;p&gt;筛选规则中的修饰符是为了 &lt;strong&gt;更加细致地规范规则&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;以下的修饰符可以在 &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; 后面使用：&lt;/p&gt;

&lt;h5&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; 表示规则匹配时必须 &lt;strong&gt;按绝对路径比较&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;如 &lt;code class=&quot;highlighter-rouge&quot;&gt;-/ /etc/passwd&lt;/code&gt; 表示：从 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc&lt;/code&gt; 目录发送的文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;passwd&lt;/code&gt; 会被排除&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-/ subdir/foo&lt;/code&gt; 只要文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; 所在的目录为 &lt;code class=&quot;highlighter-rouge&quot;&gt;subdir&lt;/code&gt; 就会排除，哪怕 &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; 位于传输的根上。&lt;/p&gt;

&lt;h5 id=&quot;-1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt; 表示反向比较，可以理解为 “&lt;strong&gt;非&lt;/strong&gt;”。&lt;/p&gt;

&lt;p&gt;如 &lt;code class=&quot;highlighter-rouge&quot;&gt;-! */&lt;/code&gt; 表示排除所有非目录。&lt;/p&gt;

&lt;h5 id=&quot;s&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;s&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;s&lt;/code&gt; 表示规则仅在发送端生效。&lt;/p&gt;

&lt;p&gt;如果规则在发送端生效，该规则就会 &lt;strong&gt;防止文件被传输&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;普通的规则默认是在发送端和接收端同时生效的。&lt;/p&gt;

&lt;h5 id=&quot;r&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt; 表示规则仅在接收端生效。&lt;/p&gt;

&lt;p&gt;如果规则在接收端生效，该规则就会 &lt;strong&gt;防止文件被删除&lt;/strong&gt;。&lt;/p&gt;

&lt;h5 id=&quot;c&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;C&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;本人未了解。&lt;/p&gt;

&lt;h5 id=&quot;p&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;当需要删除某个被排除的文件所在的目录时，可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt; 修饰符。&lt;/p&gt;

&lt;p&gt;假设本地主机有如下目录结构：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;data
├── cache
│   └── config.tmp
├── dir1
│   └── go.tmp
├── dir2
│   └── over.tmp
└── logs
    └── error.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;同步时，我们不希望传输本地的 &lt;code class=&quot;highlighter-rouge&quot;&gt;*.tmp&lt;/code&gt; 临时文件，以及 &lt;code class=&quot;highlighter-rouge&quot;&gt;data/logs&lt;/code&gt; 目录中的日志文件，因为它们只对本地系统有意义。同时，我们也希望保存服务端主机上的临时文件和日志文件，不要被 rsync 删除。&lt;/p&gt;

&lt;p&gt;假设之前已经同步过，现在删除本地 &lt;code class=&quot;highlighter-rouge&quot;&gt;data/cache&lt;/code&gt; 目录，然后再次同步：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rm -rf data/cache
$ rsync --delete -d --exclude=&quot;*.tmp&quot; --exclude=&quot;data/logs/*.log&quot; src/ remote:dest/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;运行时会得到 “cannot delete non-empty directory: data/cache” 的反馈信息，因为 &lt;code class=&quot;highlighter-rouge&quot;&gt;data/cache/config.tmp&lt;/code&gt; 是被排除的文件，在服务端主机上没有被删除，rsync 就无法删除其所在目录。&lt;/p&gt;

&lt;p&gt;此时，即使加上 &lt;code class=&quot;highlighter-rouge&quot;&gt;--force&lt;/code&gt; 这个强制删除非空目录的选项也无济于事。&lt;/p&gt;

&lt;p&gt;而 &lt;code class=&quot;highlighter-rouge&quot;&gt;--delete-excluded&lt;/code&gt; 选项，虽然可以删除被排除的文件，但并不适合当前场景，因为我们需要保留服务端的 &lt;code class=&quot;highlighter-rouge&quot;&gt;*.tmp&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;*.log&lt;/code&gt; 文件。&lt;/p&gt;

&lt;p&gt;rsync 有一个模式叫 &lt;strong&gt;“易逝” 模式&lt;/strong&gt;（perishable mode），用 &lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt; 修饰符来实现。&lt;/p&gt;

&lt;p class=&quot;notice--success&quot;&gt;该模式下排除的文件不会传输，通常也不会在接收端被删除，&lt;strong&gt;除非&lt;/strong&gt; 它们所在的目录不复存在。也就是说，如果 rsync 要删除某个目录时，发现其中有被排除的文件，会临时忽略排除的限制，继续删除该目录。&lt;/p&gt;

&lt;p&gt;因此，最终我们应该使用修饰符 &lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt; 来实现：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rsync --delete -d --filter=&quot;-p *.tmp&quot; --filter=&quot;-p data/logs/&quot; src/ remote:dest/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该命令运行后，接收端 &lt;code class=&quot;highlighter-rouge&quot;&gt;data/cache&lt;/code&gt; 目录将被成功删除。&lt;/p&gt;

&lt;h4 id=&quot;表达式&quot;&gt;表达式&lt;/h4&gt;

&lt;p&gt;表达式可以有以下几种形式：&lt;/p&gt;

&lt;h5 id=&quot;-前导斜线&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; 前导斜线&lt;/h5&gt;

&lt;p&gt;如果表达式以 &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; 开头，则该表达式需要锚定到某个目录上。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;对于命令行中指定的规则与单独规则文件中的规则来说，该前导斜线表示 &lt;strong&gt;相对于传输根&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;对于每根目录规则文件来说，该斜线表示 &lt;strong&gt;相对于规则文件所在目录&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;结尾斜线-&quot;&gt;结尾斜线 &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;如果表达式以斜线结尾，表示 &lt;strong&gt;仅匹配目录&lt;/strong&gt;，而非普通文件、链接或设备文件。&lt;/p&gt;

&lt;h5 id=&quot;通配符&quot;&gt;通配符&lt;/h5&gt;

&lt;p&gt;只有在表达式中发现 &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt; 时，rsync 才会进行通配符匹配，否则进行简单的字符串匹配。&lt;/p&gt;

&lt;h5 id=&quot;-2&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 匹配所有文件、路径，但遇到斜线 &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; 会停止匹配。&lt;/p&gt;

&lt;h5 id=&quot;-3&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;**&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;**&lt;/code&gt; 匹配所有文件、路径，包括斜线。&lt;/p&gt;

&lt;h5 id=&quot;-4&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; 匹配所有字符，除了 &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;。&lt;/p&gt;

&lt;h5 id=&quot;-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ ]&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ ]&lt;/code&gt;  会引入一组字符，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;[a-z]&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;[[:alpha:]]&lt;/code&gt;。&lt;/p&gt;

&lt;h5 id=&quot;-5&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;在通配符表达式中，反斜线 &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; 可用于转义通配符本身。&lt;/p&gt;

&lt;p&gt;如果在表达式中不含通配符，&lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; 匹配反斜线自身。&lt;/p&gt;

&lt;h5 id=&quot;-6&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;**&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;如果表达式包含一个 &lt;strong&gt;斜线&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; （结尾斜线不算）或 &lt;strong&gt;双星号&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;**&lt;/code&gt;，则应该用于 &lt;strong&gt;匹配全路径&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;如果表达式 &lt;strong&gt;不包含 &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;\*\*&lt;/code&gt;&lt;/strong&gt;，则仅 &lt;strong&gt;匹配文件名&lt;/strong&gt;。&lt;/p&gt;

&lt;h5 id=&quot;dir&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dir/***&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;如果表达式的结尾是 &lt;code class=&quot;highlighter-rouge&quot;&gt;dirname/***&lt;/code&gt;，则匹配 &lt;strong&gt;目录及其所有内容&lt;/strong&gt;。&lt;/p&gt;

&lt;h4 id=&quot;表达式范例&quot;&gt;表达式范例&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;- *.o&lt;/code&gt;  排除所有 &lt;code class=&quot;highlighter-rouge&quot;&gt;*.o&lt;/code&gt; 文件&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;- /foo&lt;/code&gt;  排除传输根目录中名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; 的文件或目录&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;- foo/&lt;/code&gt;  排除所有名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; 的目录&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;- /foo/*/bar&lt;/code&gt;  在传输根目录中，排除 &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; 目录下两层子目录中名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt; 的文件&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;- /foo/**/bar&lt;/code&gt;  在传输根目录中，排除 &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; 目录下两层及两层以上子目录中名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt; 的文件&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+ */&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;+ *.c&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;- *&lt;/code&gt;  包含所有目录，以及所有 &lt;code class=&quot;highlighter-rouge&quot;&gt;*.c&lt;/code&gt; 文件，排除其他所有&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+ foo/&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;+ foo/bar.c&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;-*&lt;/code&gt;  包含名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; 的目录，及该目录中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;bar.c&lt;/code&gt; 文件，排除其他所有&lt;/p&gt;

&lt;h5 id=&quot;包含文件或目录&quot;&gt;包含文件或目录&lt;/h5&gt;

&lt;p&gt;要想准确地包含文件或路径，首先要 &lt;strong&gt;逐层目录地包含&lt;/strong&gt;，&lt;strong&gt;最后再把其余的排除掉&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;简单粗暴型：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+ */
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;细腻型：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+ data/
+ data/text_forms/
+ data/text_forms/*.per
+ data/text_forms/*.42f
+ data/text_forms/*.xml
+ data/text_forms/*.xml.*
- *
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;只把要包含的目录单独指定，然后包含目录中特定文件，最后再排除其他所有。&lt;/p&gt;

&lt;p&gt;排除其余所有：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;- *&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;连接到-rsync-daemon&quot;&gt;连接到 rsync daemon&lt;/h2&gt;

&lt;p&gt;可以不使用远程 shell 来传输，而直接连接到远程  rsync daemon，通常使用 &lt;strong&gt;TCP 873 端口&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;rsync daemon 会为每个连接 fork 出一个新的 rsync daemon 进程。进程启动时，会解析 &lt;code class=&quot;highlighter-rouge&quot;&gt;rsyncd.conf&lt;/code&gt; 配置文件，了解存在哪些模块、设置全局选项。&lt;/p&gt;

&lt;p&gt;当 rsync daemon 收到针对某个 rsync 模块的连接时，它会 fork 出一个子进程来处理该连接。该子进程读取 &lt;code class=&quot;highlighter-rouge&quot;&gt;rsyncd.conf&lt;/code&gt; 为该模块请求设定选项，该模块会 &lt;code class=&quot;highlighter-rouge&quot;&gt;chroot&lt;/code&gt; 到其默认路径，并为该进程去掉 SUID、SGID。&lt;/p&gt;

&lt;p&gt;之后，该子进程就可以像其它 rsync 服务端进程一样运行了。&lt;/p&gt;

&lt;h3 id=&quot;基本语法-1&quot;&gt;基本语法&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Access via rsync daemon:
  Pull: rsync [OPTION...] [USER@]HOST::SRC... [DEST]
        rsync [OPTION...] rsync://[USER@]HOST[:PORT]/SRC... [DEST]
  Push: rsync [OPTION...] SRC... [USER@]HOST::DEST
        rsync [OPTION...] SRC... rsync://[USER@]HOST[:PORT]/DEST
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -av host::src /dest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;【 daemon 选项 】&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--daemon&lt;/code&gt;  作为 daemon 运行&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--address&lt;/code&gt;  绑定到特定 IP 地址或主机名，此举允许虚拟主机配合 &lt;code class=&quot;highlighter-rouge&quot;&gt;--config&lt;/code&gt; 选项&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--config=FILE&lt;/code&gt;  不使用默认的配置文件，指定本次运行 rsync 要使用的配置文件&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--port=PORT&lt;/code&gt;  指定运行端口&lt;/p&gt;

&lt;h3 id=&quot;与使用远程-ssh-的区别&quot;&gt;与使用远程 ssh 的区别&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;主机后要用双冒号 &lt;code class=&quot;highlighter-rouge&quot;&gt;::&lt;/code&gt;，或使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;rsync://&lt;/code&gt; 格式&lt;/li&gt;
  &lt;li&gt;主机后的第一个名字是模块名 &lt;code class=&quot;highlighter-rouge&quot;&gt;host::module&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;服务端 rsync daemon 可以输出一条消息告知你连接的日期&lt;/li&gt;
  &lt;li&gt;如果省略服务端路径，则会列出服务端可访问的路径列表&lt;/li&gt;
  &lt;li&gt;如果没有指定本地目标目录，则会列出服务端目录中文件列表&lt;/li&gt;
  &lt;li&gt;不可使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-rsh&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;-e&lt;/code&gt;) 参数&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;关于模块的概念见下文 “rsync daemon 的配置”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;用户认证&quot;&gt;用户认证&lt;/h3&gt;

&lt;p&gt;根据实际需要，可以对服务端 rsync daemon 中的某些模块进行强制密码认证，本地连接到服务端时，会收到输入密码的提示。要想避开该提示，可以使 &lt;strong&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--password-file&lt;/code&gt;&lt;/strong&gt; 选项来指定 &lt;strong&gt;本地保存密码的文件&lt;/strong&gt;，也可以使用环境变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;RSYNC_PASSWORD&lt;/code&gt; 来保存密码。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -av --password-file=pwd source/ host::module
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;通过代理连接&quot;&gt;通过代理连接&lt;/h3&gt;

&lt;h4 id=&quot;web-代理&quot;&gt;WEB 代理&lt;/h4&gt;

&lt;p&gt;可以 &lt;strong&gt;通过 WEB 代理服务器来建立连接&lt;/strong&gt;，只需给环境变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;RSYNC_PROXY&lt;/code&gt; 赋值，格式为 &lt;code class=&quot;highlighter-rouge&quot;&gt;hostname:port&lt;/code&gt;。注意，网页代理服务器的配置必须支持到 TCP 873 端口的连接。&lt;/p&gt;

&lt;h4 id=&quot;程序代理&quot;&gt;程序代理&lt;/h4&gt;

&lt;p&gt;也可以通过设定环境变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;RSYNC_CONNECT_PROG&lt;/code&gt; 为某个命令，实现 &lt;strong&gt;把一个程序做为代理来创建一个 rsync daemon 的连接&lt;/strong&gt;，这样就可以不用直接创建一个套接字连接了。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export RSYNC_CONNECT_PROG='ssh proxyhost nc %H 873'
rsync -av targethost1::module/src/ /dest/
rsync -av rsync:://targethost2/module/src/ /dest/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;以上命令表示使用 ssh 在代理主机 proxyhost 上运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;nc&lt;/code&gt; （netcat），netcat 会把所有数据转发给主机 &lt;code class=&quot;highlighter-rouge&quot;&gt;%H&lt;/code&gt; 的端口 873。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%H&lt;/code&gt; 代表 rsync 命令中的主机名，hostname。&lt;/p&gt;

&lt;h3 id=&quot;rsync-daemon-的配置&quot;&gt;rsync daemon 的配置&lt;/h3&gt;

&lt;h4 id=&quot;启动-rsync-daemon&quot;&gt;启动 rsync daemon&lt;/h4&gt;

&lt;p&gt;要想连接到服务端系统的 rsync daemon，该守护进程必须在服务端系统中启动，或者当 &lt;strong&gt;特定端口传来入站连接时&lt;/strong&gt;，设置诸如 inetd 等来 &lt;strong&gt;自动生成一个 rsync daemon&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/rsyncd.conf&lt;/code&gt; 是 rsync daemon 的配置文件。&lt;/p&gt;

&lt;p&gt;如果使用了远程 shell 来传输，就不必再手动启动 rsync daemon 了。&lt;/p&gt;

&lt;h2 id=&quot;通过远程-shell-使用-rsync-daemon-的功能&quot;&gt;通过远程 shell 使用 rsync daemon 的功能&lt;/h2&gt;

&lt;p&gt;如果不用放行任何新的套接字连接进入系统，而又能使用 rsync daemon 的各种功能，有时候会特别有用。&lt;/p&gt;

&lt;p&gt;rsync 允许使用远程 shell 连接到主机，然后再产生一个单一用途的 rsync daemon，该进程可以按指定选项来读取配置文件。&lt;/p&gt;

&lt;p&gt;当你需要加密 daemon 风格的数据传输时，这个方法特别有用。但是，因为该进程是由服务端用户激发的，因此无法使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;chroot&lt;/code&gt; 功能，也无法修改进程使用的 UID。&lt;/p&gt;

&lt;p&gt;另一种加密 daemon 传输的方法是：用 ssh 为某个本地端口到服务端主机先创建一个隧道，然后再在服务端主机上配置一个普通的 rsync daemon，配置其只接受本地主机的连接。&lt;/p&gt;

&lt;p&gt;语法上基本与使用 ssh 相同，只是要用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--rsh&lt;/code&gt; 来指定远程 shell。当然也可以通过设置环境变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;RSYNC_RSH&lt;/code&gt; 达到相同的效果。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -av --rsh=ssh host::module /dest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果要使用其它的远程 shell 用户，可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;user@host&lt;/code&gt; 格式来指定，同时必须使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-l user&lt;/code&gt; 选项：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -av -e &quot;ssh -l ssh-user&quot; rsync-user@host::module /dest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意：&lt;code class=&quot;highlighter-rouge&quot;&gt;ssh-user&lt;/code&gt; 用于 SSH 连接，而 &lt;code class=&quot;highlighter-rouge&quot;&gt;rsync-user&lt;/code&gt; 则用于登陆 rsync 的模块。&lt;/p&gt;

&lt;h2 id=&quot;批处理模式&quot;&gt;批处理模式&lt;/h2&gt;

&lt;p&gt;批处理模式可用于 &lt;strong&gt;向多组相同的系统应用同一批更新&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;假设有个目录树，在 &lt;strong&gt;多个主机上都有副本&lt;/strong&gt;，该源目录树发生的修改需要传给多个主机。&lt;/p&gt;

&lt;p class=&quot;notice--success&quot;&gt;为了使用批处理模式，先是使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--write-batch&lt;/code&gt; 选项，向某一台主机的目标来应用修改，&lt;code class=&quot;highlighter-rouge&quot;&gt;--write-batch&lt;/code&gt; 选项会把本次 rsync &lt;strong&gt;对服务端进行的同步操作&lt;/strong&gt; 完整保存到一个 &lt;strong&gt;批处理文件&lt;/strong&gt; 中，之后可以用它来帮助其余的主机完成快速同步。&lt;/p&gt;

&lt;p&gt;为了方便用户，rsync 同时还会自动生成一个 &lt;strong&gt;同名脚本文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;*.sh&lt;/code&gt;&lt;/strong&gt;，内容为一行 rsync 命令，上面的批处理文件也会做为其中的选项。&lt;/p&gt;

&lt;h3 id=&quot;批处理文件的作用&quot;&gt;批处理文件的作用&lt;/h3&gt;

&lt;p&gt;之所以在第一次同步时生成批处理文件，是为了省去同步其余主机时不必要的文件状态检查、校验码检查，可以大大提升同步的效率。可以用 &lt;strong&gt;多播传输协议&lt;/strong&gt;，&lt;strong&gt;同时对多个主机并行传输更新的文件&lt;/strong&gt;，而无需单独对每个主机逐个传输相同的数据。&lt;/p&gt;

&lt;h3 id=&quot;如何使用批处理文件&quot;&gt;如何使用批处理文件&lt;/h3&gt;

&lt;p&gt;要想把批处理录制下来的同步操作应用给其他主机，可以在同步命令中使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--read-batch&lt;/code&gt; 选项来指定批处理文件。&lt;/p&gt;

&lt;h4 id=&quot;生成批处理文件&quot;&gt;生成批处理文件&lt;/h4&gt;

&lt;p class=&quot;notice&quot;&gt;假设有 A、B、C、D、E、F、G 七台主机，同时保存相同的目录树副本，现在主机 A 上对目录树做了修改，希望其同步到其余所有主机上。&lt;/p&gt;

&lt;p&gt;可以先随意找一台主机，如主机 B，先在上面运行一次 rsync，把主机 A 中的修改同步到主机 B 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;/destB/dir/&lt;/code&gt; 目录。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync --write-batch=abc -av hostA:/source/dir/ /destB/dir/
#                   ^^^
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;同步完成后，rsync 会生成两个文件：&lt;code class=&quot;highlighter-rouge&quot;&gt;abc&lt;/code&gt; 及 &lt;code class=&quot;highlighter-rouge&quot;&gt;abc.sh&lt;/code&gt;。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;abc&lt;/code&gt; 为批处理文件&lt;/strong&gt;，用于记录本次 rsync 的所有同步操作。如对文件的删除、同步等。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;abc.sh&lt;/code&gt; 为脚本文件&lt;/strong&gt;，其内容为 &lt;code class=&quot;highlighter-rouge&quot;&gt;rsync -av --read-batch=abc ${1:-/destA/dir/}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;abc.sh&lt;/code&gt; 可以用 bash shell 来执行，运行时还可以传递一个 &lt;strong&gt;目标目录&lt;/strong&gt; 的参数，该参数将覆盖脚本中的目标目录。当目标主机中的目标目录名各不相同时非常有用。&lt;/p&gt;

&lt;h4 id=&quot;把批处理文件复制到其他主机&quot;&gt;把批处理文件复制到其他主机&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scp abc* hostC：
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用 scp 命令把 &lt;code class=&quot;highlighter-rouge&quot;&gt;abc&lt;/code&gt; 及 &lt;code class=&quot;highlighter-rouge&quot;&gt;abc.sh&lt;/code&gt; 复制到主机 C。&lt;/p&gt;

&lt;h4 id=&quot;远程执行同步脚本&quot;&gt;远程执行同步脚本&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh hostC ./abc.sh /destC/dir/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;用 ssh 连接到主机 C，并在主机 C 的 shell 上执行刚刚复制过去的脚本 &lt;code class=&quot;highlighter-rouge&quot;&gt;abc.sh&lt;/code&gt;，即在主机 C 上运行 rsync 进行同步。&lt;/p&gt;

&lt;h4 id=&quot;从标准输入读取批处理&quot;&gt;从标准输入读取批处理&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh hostD rsync --read-batch=- -a /destD/dir/ &amp;lt;abc
#                            ^                 ^^^
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;也可以在 ssh 命令中直接使用 rsync 命令，此时 &lt;code class=&quot;highlighter-rouge&quot;&gt;--read-batch&lt;/code&gt; 选项的值来自于重定向于 &lt;code class=&quot;highlighter-rouge&quot;&gt;abc&lt;/code&gt; 的标准输入。&lt;/p&gt;

&lt;p&gt;这样的做法就省去了向服务端主机复制批处理文件的步骤。&lt;/p&gt;

&lt;p&gt;本例未使用脚本 &lt;code class=&quot;highlighter-rouge&quot;&gt;abc.sh&lt;/code&gt; 是因为 &lt;code class=&quot;highlighter-rouge&quot;&gt;--read-batch&lt;/code&gt; 选项需要使用标准输入。如果想在命令中使用脚本，必须要确保没有其他选项会使用标准输入，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;--exclude-from=-&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&quot;批处理注意事项&quot;&gt;批处理注意事项&lt;/h3&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--read-batch&lt;/code&gt; 选项时，必须确保目标目录树与生成批处理文件时的目标目录树完全一致。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果目标目录树已经更新，同步时会被忽略，并出现警示信息&lt;/li&gt;
  &lt;li&gt;如果目标目录树出现验证错误，同步会忽略，并出现错误信息&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;因此，如果同步被意外中断时，可以很安全地使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--read-batch&lt;/code&gt; 再次运行 rsync 命令。&lt;/p&gt;

&lt;p&gt;在批处理模式中，如果希望每次同步时都忽略对文件大小和日期的检查，可以再加上 &lt;code class=&quot;highlighter-rouge&quot;&gt;-I&lt;/code&gt; 选项。&lt;/p&gt;

&lt;p&gt;如果同步时的意外导致目标没有同步完成，可以使用 rsync 的普通模式来修复。&lt;/p&gt;

&lt;p&gt;同步的目标主机，其 rsync 版本不能低于生成批处理的主机。&lt;/p&gt;

&lt;p&gt;生成批处理文件时，如果在 rsync 命令中含有 &lt;code class=&quot;highlighter-rouge&quot;&gt;--exclude&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;--include&lt;/code&gt; 或其他过滤选项，这些选项会被保存到 &lt;code class=&quot;highlighter-rouge&quot;&gt;*.sh&lt;/code&gt; 脚本中，并以 here 文档的格式追加在 rsync 命令的下面：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~]$ cat abc.sh
rsync --filter=._- -av --read-batch=abc ${1:-~/source/} &amp;lt;&amp;lt;'#E#'
- aaaa
- bbbb
#E#
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上例中 &lt;code class=&quot;highlighter-rouge&quot;&gt;- aaaa&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;- bbbb&lt;/code&gt; 就是被排除的目录名。&lt;/p&gt;

&lt;h2 id=&quot;rsync-工作流程分析&quot;&gt;rsync 工作流程分析&lt;/h2&gt;

&lt;h3 id=&quot;基本概念&quot;&gt;基本概念&lt;/h3&gt;

&lt;h4 id=&quot;工作方式&quot;&gt;工作方式&lt;/h4&gt;

&lt;p&gt;rsync 有三种工作方式：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;本地传输&lt;/li&gt;
  &lt;li&gt;使用远程 shell 连接&lt;/li&gt;
  &lt;li&gt;使用网络套接字连接 rsync daemon&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;本地传输&quot;&gt;本地传输&lt;/h5&gt;

&lt;p&gt;本地传输其实是一种特殊的工作方式。运行 rsync 命令时，&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;先生成一个 rsync 进程&lt;/li&gt;
  &lt;li&gt;根据此进程 fork 另一个 rsync 进程 &lt;strong&gt;作为连接的对端&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;连接建立之后，后续所有的 &lt;strong&gt;通信&lt;/strong&gt; 将采用 &lt;strong&gt;管道&lt;/strong&gt; 的方式。&lt;/p&gt;

&lt;h5 id=&quot;使用远程-shell-连接-1&quot;&gt;使用远程 shell 连接&lt;/h5&gt;

&lt;p&gt;以 SSH 为例：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;本地键入 rsync 命令后，将 &lt;strong&gt;请求&lt;/strong&gt; 和远程主机建立远程 &lt;strong&gt;ssh 连接&lt;/strong&gt;，连接建立成功后&lt;/li&gt;
  &lt;li&gt;在远程主机上 &lt;strong&gt;fork 远程 ssh 进程&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;调用远程 rsync&lt;/strong&gt; 程序&lt;/li&gt;
  &lt;li&gt;将 rsync 所需的 &lt;strong&gt;选项&lt;/strong&gt; 通过远程 ssh &lt;strong&gt;传递给远程 rsync&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这样两端就都启动了 rsync。之后，它们将通过 &lt;strong&gt;管道&lt;/strong&gt; 的方式（即使它们之间是本地和远程的关系）&lt;strong&gt;进行通信&lt;/strong&gt;。&lt;/p&gt;

&lt;h5 id=&quot;使用网络套接字连接-rsync-daemon&quot;&gt;使用网络套接字连接 rsync daemon&lt;/h5&gt;

&lt;p&gt;通过网络套接字连接到 rsync daemon 时，&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;rsync daemon 进程会 &lt;strong&gt;创建一个子进程&lt;/strong&gt; 来响应该连接，并负责后续该连接的所有通信&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这样两端也都启动了连接所需的rsync，之后它们 &lt;strong&gt;通过网络套接字进行通信&lt;/strong&gt;。&lt;/p&gt;

&lt;h4 id=&quot;客户端与服务端&quot;&gt;客户端与服务端&lt;/h4&gt;

&lt;p&gt;无论使用何种连接方式，发起连接的一端被称为 &lt;strong&gt;客户端&lt;/strong&gt;，即执行 rsync 命令的一端，连接的另一端称为 &lt;strong&gt;服务端&lt;/strong&gt;。&lt;/p&gt;

&lt;p class=&quot;notice--warning&quot;&gt;服务端可以是本地端，也可以是远程对端，还可以是远程 rsync daemon 端。&lt;/p&gt;

&lt;p&gt;rsync 的客户端和服务端的概念存活周期很短，当客户端和服务端都启动了 rsync 进程，并建立了 rsync 连接（管道、网络套接字）时，将使用 &lt;strong&gt;发送端&lt;/strong&gt; 和 &lt;strong&gt;接收端&lt;/strong&gt; 来代替客户端和服务端的概念。（啰嗦）&lt;/p&gt;

&lt;h4 id=&quot;进程及流水线&quot;&gt;进程及流水线&lt;/h4&gt;

&lt;p&gt;两端的 rsync 连接建立后，整个传输过程将由三个进程完成，它们是 &lt;strong&gt;高度流水线化&lt;/strong&gt;（pipelined）的。进程之间以 &lt;strong&gt;单方向&lt;/strong&gt; 的方式进行通信。在文件列表传输完成之后，流水线如下：&lt;/p&gt;

&lt;p&gt;generator  &amp;gt;  发送端  &amp;gt;  接收端&lt;/p&gt;

&lt;p&gt;generator 的输出结果是发送端的输入，发送端的输出结果是接收端的输入。&lt;/p&gt;

&lt;p&gt;它们每个进程独立运行，并且只有在流水线被阻塞，或等待磁盘 I/O、CPU 资源时才被延迟。&lt;/p&gt;

&lt;p&gt;虽然这三个进程是流水线式的，但它们是 &lt;strong&gt;完全独立、并行工作&lt;/strong&gt; 的。每个进程在处理完相关工作的那一刻，都会立即将数据传输给接收进程，并开始处理下一个工作，接收进程收到数据后也马上开始处理。所以它们的工作基本上不会出现延迟和阻塞。&lt;/p&gt;

&lt;h5 id=&quot;发送端进程&quot;&gt;发送端进程&lt;/h5&gt;

&lt;p&gt;发送端 rsync 进程负责这一端的 &lt;strong&gt;所有工作&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;发送端进程收到 generator 的 &lt;strong&gt;校验码集合&lt;/strong&gt;，会立即处理该文件。处理文件时，每遇到一个匹配块，都会 &lt;strong&gt;随时&lt;/strong&gt; 将这部分相关数据 &lt;strong&gt;传递&lt;/strong&gt; 给接收端进程，然后立即处理下一个数据块。&lt;/p&gt;

&lt;h5 id=&quot;接收端进程&quot;&gt;接收端进程&lt;/h5&gt;

&lt;p&gt;接收端 rsync 进程负责 &lt;strong&gt;接收数据、文件重组&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;接收端进程收到数据后，会立即开始 &lt;strong&gt;重组&lt;/strong&gt; 工作。&lt;/p&gt;

&lt;h5 id=&quot;接收端-generator-进程&quot;&gt;接收端 generator 进程&lt;/h5&gt;

&lt;p&gt;它是另一个核心进程，负责执行 &lt;strong&gt;删除&lt;/strong&gt; 操作、&lt;strong&gt;比较文件大小&lt;/strong&gt;、&lt;strong&gt;比较 mtime&lt;/strong&gt;、对每个文件 &lt;strong&gt;划分数据块&lt;/strong&gt;、&lt;strong&gt;计算校验码&lt;/strong&gt;、&lt;strong&gt;生成校验码集合&lt;/strong&gt;，然后将校验码集合传递给发送端。&lt;/p&gt;

&lt;p&gt;generator 计算出一个文件的校验码集合，传给发送端，之后它会立即计算下一个文件的校验码集合。&lt;/p&gt;

&lt;h4 id=&quot;文件列表&quot;&gt;文件列表&lt;/h4&gt;

&lt;p&gt;rsync 连接建立完成之后，第一件事就是由发送端创建文件列表，并传递给接收端。&lt;/p&gt;

&lt;p&gt;文件列表中不仅包含路径，还包含文件的 &lt;strong&gt;部分属性&lt;/strong&gt;：复制模式、权限、文件大小、所有者、属组、修改时间等。&lt;/p&gt;

&lt;p&gt;包含哪些属性决定于 rsync 使用的选项，如不指定 &lt;code class=&quot;highlighter-rouge&quot;&gt;-o&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;-g&lt;/code&gt; 时，不会包含 UID、GID，指定 &lt;code class=&quot;highlighter-rouge&quot;&gt;--checksum&lt;/code&gt; 会包含文件级的校验码。&lt;/p&gt;

&lt;p&gt;文件列表创建并传递完毕以后，两端都会按照相对于传递根目录的路径对文件列表进行排序（排序算法信赖于传输的协议版本号），排序完成后，之后对文件的引用就都通过文件列表中的 &lt;strong&gt;编号&lt;/strong&gt; 来进行。&lt;/p&gt;

&lt;p&gt;以下为实例：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~]# rsync -a -vvvv /etc/cron.d /var/log/anaconda /etc/issue longshuai@172.16.10.5:/tmp
......
######### 发送端生成文件列表，发送给接收端 #############
sending incremental file list
[sender] make_file(cron.d,*,0)       # 第一个要传输的文件目录：cron.d文件，注意，此处cron.d是待传输的文件，而不认为是目录
[sender] make_file(anaconda,*,0)     # 第二个要传输的为目录：anaconda
[sender] make_file(issue,*,0)        # 第三个要传输的为目录：issue

# 从文件列表的第1项开始，本次要传输的文件共有3个
[sender] flist start=1, used=3, low=0, high=2   
# 为这3个文件生成列表，包括文件id，所在目录，权限模式，长度，uid/gid，修饰符
[sender] i=1 /etc issue mode=0100644 len=23 uid=0 gid=0 flags=5   
#  隐含目录  ^^^^  ^^^^  需同步文件
[sender] i=2 /var/log anaconda/ mode=040755 len=4096 uid=0 gid=0 flas=5
#  隐含目录   ^^^^^^^  ^^^^^^^  需同步文件
[sender] i=3 /etc cron.d/ mode=040755 len=51 uid=0 gid=0 flags=5   
#  隐含目录  ^^^^  ^^^^^^  需同步文件
send_file_list done
file list sent
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;唯一需要注意的是文件所在目录，例如 &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/log anaconda/&lt;/code&gt;，但实际在命令行中指定的是 &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/log/anaconda&lt;/code&gt;。此处 &lt;code class=&quot;highlighter-rouge&quot;&gt;log&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;anaconda&lt;/code&gt; 使用空格分开了，这个 &lt;strong&gt;空格&lt;/strong&gt; 非常关键。空格的左边为 &lt;strong&gt;隐含目录&lt;/strong&gt;，右边是 &lt;strong&gt;待同步的文件&lt;/strong&gt;，&lt;strong&gt;默认&lt;/strong&gt; 情况下将会在接收端生成 &lt;code class=&quot;highlighter-rouge&quot;&gt;anaconda/&lt;/code&gt; 目录，而左边的 &lt;strong&gt;隐含目录不会创建&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;可以通过使用选项 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-R&lt;/code&gt;&lt;/strong&gt;，允许接收端同步时 &lt;strong&gt;创建隐含目录&lt;/strong&gt;，以便创建 &lt;strong&gt;整个目录结构&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;############ 发送端发送文件属性信息 #####################
# 由于前面的文件列表中有两个条目是目录，因此还要为目录中的每个文件生成属性信息并发送给接收端
send_files starting
[sender] make_file(anaconda/anaconda.log,*,2)
[sender] make_file(anaconda/syslog,*,2)
[sender] make_file(anaconda/program.log,*,2)
[sender] make_file(anaconda/packaging.log,*,2)
[sender] make_file(anaconda/storage.log,*,2)
[sender] make_file(anaconda/ifcfg.log,*,2)
[sender] make_file(anaconda/ks-script-1uLekR.log,*,2)
[sender] make_file(anaconda/ks-script-iGpl4q.log,*,2)
[sender] make_file(anaconda/journal.log,*,2)
[sender] flist start=5, used=9, low=0, high=8
[sender] i=5 /var/log anaconda/anaconda.log mode=0100600 len=6668 uid=0 gid=0 flags=0
[sender] i=6 /var/log anaconda/ifcfg.log mode=0100600 len=3826 uid=0 gid=0 flags=0
[sender] i=7 /var/log anaconda/journal.log mode=0100600 len=1102699 uid=0 gid=0 flags=0
[sender] i=8 /var/log anaconda/ks-script-1uLekR.log mode=0100600 len=0 uid=0 gid=0 flags=0
[sender] i=9 /var/log anaconda/ks-script-iGpl4q.log mode=0100600 len=0 uid=0 gid=0 flags=0
[sender] i=10 /var/log anaconda/packaging.log mode=0100600 len=160420 uid=0 gid=0 flags=0
[sender] i=11 /var/log anaconda/program.log mode=0100600 len=27906 uid=0 gid=0 flags=0
[sender] i=12 /var/log anaconda/storage.log mode=0100600 len=78001 uid=0 gid=0 flags=0
[sender] i=13 /var/log anaconda/syslog mode=0100600 len=197961 uid=0 gid=0 flags=0
[sender] make_file(cron.d/0hourly,*,2)
[sender] make_file(cron.d/sysstat,*,2)
[sender] make_file(cron.d/raid-check,*,2)
[sender] flist start=15, used=3, low=0, high=2
[sender] i=15 /etc cron.d/0hourly mode=0100644 len=128 uid=0 gid=0 flags=0
[sender] i=16 /etc cron.d/raid-check mode=0100644 len=108 uid=0 gid=0 flags=0
[sender] i=17 /etc cron.d/sysstat mode=0100600 len=235 uid=0 gid=0 flags=0
# 从上述结果中发现，没有i=4和i=14的文件信息，因为它们是目录anaconda和cron.d的文件信息
# 还发现没有发送/etc/issue文件的信息，因为issue自身是普通文件而非目录，因此在发送目录前就发送了
############# 文件列表所有内容发送完毕 ####################
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;基准文件&quot;&gt;基准文件&lt;/h4&gt;

&lt;p&gt;Basis File&lt;/p&gt;

&lt;p&gt;如果文件不被忽略，所有目标路径下 &lt;strong&gt;已存在的文件版本&lt;/strong&gt; 将作为基准文件，它们将作为数据匹配源，使得发送端无需发送能匹配上这些数据源的部分，从而实现增量传输。&lt;/p&gt;

&lt;h3 id=&quot;rsync-工作流程&quot;&gt;rsync 工作流程&lt;/h3&gt;

&lt;h4 id=&quot;建立连接启动进程&quot;&gt;建立连接，启动进程&lt;/h4&gt;

&lt;p&gt;客户端启动，与服务端 &lt;strong&gt;建立通信连接&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;在通信最初阶段，双方会相互发送自己支持的最大的 &lt;strong&gt;协议版本号&lt;/strong&gt;，使用两者之中较低版本进行传输。&lt;/p&gt;

&lt;h5 id=&quot;连接远程-shell&quot;&gt;连接远程 shell&lt;/h5&gt;

&lt;p&gt;当 rsync 通过远程 shell 连接到服务端时，服务端会 &lt;strong&gt;启动一个 rsync 进程&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;两端都通过 &lt;strong&gt;远程 shell 之间的管道&lt;/strong&gt; 进行通信。&lt;/p&gt;

&lt;p&gt;在此过程中，rsync 进程未涉及到网络。&lt;/p&gt;

&lt;p&gt;该模式下，服务端的 rsync 进程所使用的 &lt;strong&gt;选项&lt;/strong&gt; 是由远程 shell 传递给它的。&lt;/p&gt;

&lt;h5 id=&quot;连接-rsync-daemon&quot;&gt;连接 rsync daemon&lt;/h5&gt;

&lt;p&gt;连接到服务端的 rsync daemon 时，直接使用 &lt;strong&gt;网络套接字&lt;/strong&gt; 通信。&lt;/p&gt;

&lt;p&gt;这是唯一一种可称为网络感知的 rsync 通信方式。&lt;/p&gt;

&lt;p&gt;该模式下，rsync 通过套接字先把 &lt;strong&gt;选项&lt;/strong&gt; 传递给服务端，再传递排除列表。&lt;/p&gt;

&lt;h5 id=&quot;本地&quot;&gt;本地&lt;/h5&gt;

&lt;p&gt;rsync 在本地同步时，源文件端变成发送端，并 fork 一个服务端进程，来扮演接收端的角色，之后它们通过 &lt;strong&gt;管道&lt;/strong&gt; 进行通信。&lt;/p&gt;

&lt;h4 id=&quot;发送端传递文件列表&quot;&gt;发送端传递文件列表&lt;/h4&gt;

&lt;p&gt;发送端进程根据 rsync 命令行中给定的选项和筛选规则来 &lt;strong&gt;收集待同步文件&lt;/strong&gt;，将其 &lt;strong&gt;保存至文件列表&lt;/strong&gt;，&lt;strong&gt;传递&lt;/strong&gt; 给接收端。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;创建文件列表时，先按照目录进行 &lt;strong&gt;排序&lt;/strong&gt;，然后给文件 &lt;strong&gt;编号&lt;/strong&gt;，便于随后对文件的引用。&lt;/li&gt;
  &lt;li&gt;无需等待全部文件扫描完毕，发送端每扫描完 &lt;strong&gt;一个目录&lt;/strong&gt;，就会将这一部分的文件列表 &lt;strong&gt;随时&lt;/strong&gt; 发给接收端。同样，接收端也是逐个目录接收的，收到的文件列表均经过排序。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exclude&lt;/code&gt; 及 &lt;code class=&quot;highlighter-rouge&quot;&gt;hide&lt;/code&gt; 筛选规则匹配的文件会在文件列表中 &lt;strong&gt;标记为隐藏&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;hide&lt;/code&gt;，接收端看不见这些文件。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;接收端比较文件传递校验码集合&quot;&gt;接收端比较文件，传递校验码集合&lt;/h4&gt;

&lt;p&gt;接收端收到文件列表后，从接收端进程 &lt;strong&gt;fork 出 generator&lt;/strong&gt; 进程，该进程参照文件列表来 &lt;strong&gt;扫描本地目录树&lt;/strong&gt;。&lt;/p&gt;

&lt;h5 id=&quot;删除操作&quot;&gt;删除操作&lt;/h5&gt;

&lt;p&gt;generator 的工作流程中，最先执行的是 &lt;strong&gt;删除&lt;/strong&gt; 操作。&lt;/p&gt;

&lt;p&gt;如果使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;--delete&lt;/code&gt; 选项，会删除那些源路径中没有，但目标路径中存在的文件。&lt;/p&gt;

&lt;h5 id=&quot;比较文件&quot;&gt;比较文件&lt;/h5&gt;

&lt;p&gt;参照文件列表，按顺序逐个 &lt;strong&gt;比较本地文件&lt;/strong&gt; 的大小和 mtime。&lt;/p&gt;

&lt;h6 id=&quot;目标文件存在&quot;&gt;目标文件存在&lt;/h6&gt;

&lt;p&gt;如果目标路径中的目标文件已经存在，则对两端文件的文件大小或 mtime 进行比较：&lt;/p&gt;

&lt;p&gt;如果 &lt;strong&gt;相同则忽略&lt;/strong&gt;，如果 &lt;strong&gt;不同&lt;/strong&gt;，则对目标文件进行 &lt;strong&gt;校验&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;generator 读取文件列表中的一个基准文件，将其 &lt;strong&gt;划分数据块并编号&lt;/strong&gt;，对每个数据块计算 &lt;strong&gt;弱滚动校验码&lt;/strong&gt;（rolling checksum）和 &lt;strong&gt;强校验码&lt;/strong&gt;（MD5 hash），将这些校验码随数据块编号组合在一起，成为 &lt;strong&gt;校验码集合&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;数据块的大及块校验和的大小，是根据文件大小计算出来的，也支持自定义块大小。将该文件的 &lt;strong&gt;编号&lt;/strong&gt; 与 &lt;strong&gt;校验码集合&lt;/strong&gt; 一起传递给发送端。&lt;/p&gt;

&lt;p&gt;每文件的块校验码集合在计算出来之后也是 &lt;strong&gt;随时&lt;/strong&gt; 发送的，不会等所有文件都计算完才一起发送。&lt;/p&gt;

&lt;p&gt;之后，继续处理文件列表中下一个文件。&lt;/p&gt;

&lt;p&gt;如果使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;--checksum&lt;/code&gt; 选项，generator 会生成 &lt;strong&gt;文件级校验码&lt;/strong&gt;，并加以比较。&lt;/p&gt;

&lt;p&gt;如果使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;--whole-file&lt;/code&gt; 选项，则会对文件列表中的所有文件发送 &lt;strong&gt;空的块校验码&lt;/strong&gt;，使得 rsync 强制采用 &lt;strong&gt;全量传输&lt;/strong&gt;。&lt;/p&gt;

&lt;h6 id=&quot;目标文件不存在&quot;&gt;目标文件不存在&lt;/h6&gt;

&lt;p&gt;当 generator 比较文件时，对于那些接收端 &lt;strong&gt;没有的文件&lt;/strong&gt;，会将其 &lt;strong&gt;校验码设置为空&lt;/strong&gt;，再传递给发送端。rsync 对于该文件就会使用 &lt;strong&gt;全量传输&lt;/strong&gt;，而不再用增量传输。&lt;/p&gt;

&lt;h4 id=&quot;发送端传递匹配信息非匹配数据&quot;&gt;发送端传递匹配信息、非匹配数据&lt;/h4&gt;

&lt;p&gt;发送端进程收到 generator 发来的 “文件编号及校验码集合”，对于 generator 发来的每个文件，发送端会存储块校验码，并生成它们的 hash 索引，以加快查找速度。&lt;/p&gt;

&lt;p&gt;然后，按照文件编号，发送端依次 &lt;strong&gt;为本地文件数据块计算校验码&lt;/strong&gt;。为了节省时间，先是仅计算滚动校验码。&lt;/p&gt;

&lt;p&gt;发送端读取每个文件，在 &lt;strong&gt;所有偏移量上&lt;/strong&gt; 查找，看有没有数据块与接收端相同。&lt;/p&gt;

&lt;p&gt;读取相同大小的数据块，并计算校验码，将其与接收端的校验码集合进行 &lt;strong&gt;比对&lt;/strong&gt;，看能否 &lt;strong&gt;匹配&lt;/strong&gt; 其中的某一项。&lt;/p&gt;

&lt;h5 id=&quot;没有匹配项&quot;&gt;没有匹配项&lt;/h5&gt;

&lt;p&gt;如果没有匹配项，表示两端数据存在差异，该数据块需要传输给接收端。&lt;/p&gt;

&lt;p&gt;这部分不匹配的数据 &lt;strong&gt;累加&lt;/strong&gt; 到上一个不匹配数据中。&lt;/p&gt;

&lt;p&gt;向后 &lt;strong&gt;跳一个字节&lt;/strong&gt;，比较下一个数据块。这就是所谓 “滚动检验”。&lt;/p&gt;

&lt;h5 id=&quot;发现匹配项&quot;&gt;发现匹配项&lt;/h5&gt;

&lt;p&gt;如果发现匹配项，会再次计算该数据块的强校验码，若仍然相同，表示该数据块两端都有，无需传输。&lt;/p&gt;

&lt;p&gt;此时，会把累加到当前的 &lt;strong&gt;不匹配数据&lt;/strong&gt; 发送给接收端，然后发送 &lt;strong&gt;匹配项的偏移量及长度&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;向后 &lt;strong&gt;跳一个字节&lt;/strong&gt;，比较下一个数据块。&lt;/p&gt;

&lt;p class=&quot;notice--success&quot;&gt;即使文件的数据块被重新排序过，或位于不同的偏移量上，用这种方法都能 &lt;strong&gt;把匹配项找出来&lt;/strong&gt;，这是 rsync 机制的 &lt;strong&gt;核心&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;通过这种方法，发送端会传递出丰富的指令，以帮助接收端重组出最新的文件。这些指令详细地描述了如何从基准文件中把匹配的数据复制出来，同时还包含所有的不匹配的原始数据（raw data）。&lt;/p&gt;

&lt;p&gt;处理完每个文件，发送端还会把整个文件的校验码发给接收端，然后再处理下一个文件。&lt;/p&gt;

&lt;h4 id=&quot;接收端重组文件&quot;&gt;接收端重组文件&lt;/h4&gt;

&lt;p&gt;接收端会根据文件编号来读取发送端传来的该文件的数据，打开本地的基准文件，创建一个临时文件。&lt;/p&gt;

&lt;p&gt;接收端收到的都是若干个 &lt;strong&gt;不匹配数据 + 匹配记录&lt;/strong&gt; 这样的序列，用它们就能重组成一个最新的文件。&lt;/p&gt;

&lt;p&gt;读取到的不匹配数据会被写入临时文件，接收端参照匹配记录的说明，定位基准文件的偏移量，将对应的部分复制到临时文件中。临时文件就是以这种方式一点点创建完成的。&lt;/p&gt;

&lt;p&gt;临时文件生成完毕，会为其生成文件校验码，将其与发送端的进行比对，要是不同，则删除该临时文件。如果失败一次，会重新再生成一遍，如果失败再次，则会报告错误信息。&lt;/p&gt;

&lt;p&gt;为临时文件设置拥有者、权限、mtime，然后重命名，覆盖基准文件。&lt;/p&gt;

&lt;p&gt;从基准文件把数据复制到临时文件的过程，会让接收端的磁盘操作变得密集。对于小文件，可以放到磁盘缓存，但若是大文件，generator 要处理下一个文件时，缓存就会发生抖动（thrash），会导致发送端产生延迟。&lt;/p&gt;

&lt;p&gt;另外，由于数据可能会从一个文件随机地被读取，再写到另一个文件中，如果整块数据大于磁盘缓存，则会导致 “寻道风暴” （seek storm），会进一步影响性能。&lt;/p&gt;

&lt;h3 id=&quot;rsync-适用场景&quot;&gt;rsync 适用场景&lt;/h3&gt;

&lt;h4 id=&quot;资源消耗&quot;&gt;资源消耗&lt;/h4&gt;

&lt;p&gt;增量传输时：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;发送端&lt;/strong&gt; 因为要多次计算、多次比较各种校验码，因此对 &lt;strong&gt;CPU&lt;/strong&gt; 的消耗很高。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;接收端&lt;/strong&gt; 因为要从 basis file 中复制数据，因此对 &lt;strong&gt;I/O&lt;/strong&gt; 的消耗很高。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;全量传输时：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;发送端无需计算、比较校验码，接收端无需复制 basis file，rsync 消耗的资源与 scp 是一样的。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;不适合同步数据库文件&quot;&gt;不适合同步数据库文件&lt;/h4&gt;

&lt;p&gt;数据库文件比较大，频繁访问。如果要用 rsync 同步，发送端在计算、比较数据块校验码时会长期消耗大量的 CPU，从而影响数据库服务的性能。&lt;/p&gt;

&lt;p&gt;接收端每次都要从巨大的 basis file中复制大部分相同的数据块，来重组新文件，这几乎相当于直接 cp 了一个文件，I/O 压力特别大。&lt;/p&gt;

&lt;p&gt;因此，对于数据库文件，只适合用 rsync 偶尔备份一次，不适合做频繁的同步。&lt;/p&gt;

&lt;p&gt;数据库文件的同步应该 &lt;strong&gt;使用数据库自带的 replication 功能&lt;/strong&gt;。&lt;/p&gt;

&lt;h4 id=&quot;适合实时同步大量小文件&quot;&gt;适合实时同步大量小文件&lt;/h4&gt;

&lt;p&gt;rsync 最适合实时同步大量的小文件。&lt;/p&gt;

&lt;p&gt;由于 rsync 是增量同步，所以对于接收端已存在的文件，不会发送。因此两端都只需要处理少量的文件。&lt;/p&gt;

&lt;p&gt;由于文件较小，因此无论是发送端的 CPU 还是接收端的 I/O 都不成问题。&lt;/p&gt;

&lt;p&gt;但，&lt;strong&gt;实时&lt;/strong&gt; 同步需要 &lt;strong&gt;借助其它工具&lt;/strong&gt; 来实现，如 inotify + rsync，sersync。&lt;/p&gt;</content><author><name>Hawk Zhang</name><email>imhawkz@gmail.com</email></author><category term="rsync" /><category term="备份" /><category term="同步" /></entry><entry><title type="html">MySQL 服务端的管理</title><link href="https://linotes.netlify.com/database/mysql_server_managemt/" rel="alternate" type="text/html" title="MySQL 服务端的管理" /><published>2016-03-01T00:00:00+08:00</published><updated>2016-03-01T00:00:00+08:00</updated><id>https://linotes.netlify.com/database/mysql_server_managemt</id><content type="html" xml:base="https://linotes.netlify.com/database/mysql_server_managemt/">&lt;h2 id=&quot;mysql-server&quot;&gt;MySQL Server&lt;/h2&gt;

&lt;p&gt;本节内容主要引自 &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/&quot;&gt; MySQL 8.0 Reference Manual &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MySQL 服务端&lt;/p&gt;

&lt;h3 id=&quot;服务端的配置&quot;&gt;服务端的配置&lt;/h3&gt;

&lt;p&gt;MySQL 的服务端程序为 mysqld，它包含许多命令 &lt;strong&gt;选项&lt;/strong&gt; 及系统 &lt;strong&gt;变量&lt;/strong&gt;，这些都可以在启动服务端时进行设置。&lt;/p&gt;

&lt;h4 id=&quot;查看所有选项和系统变量&quot;&gt;查看所有选项和系统变量&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysqld &lt;span class=&quot;nt&quot;&gt;--verbose&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该命令会列出所有的选项和可配置的系统变量。&lt;/p&gt;

&lt;h4 id=&quot;查看服务端运行中会使用的系统变量&quot;&gt;查看服务端运行中会使用的系统变量&lt;/h4&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARIABLES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;查看服务端运行中的状态信息&quot;&gt;查看服务端运行中的状态信息&lt;/h4&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATUS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;在-shell-中查看系统变量和状态信息&quot;&gt;在 shell 中查看系统变量和状态信息&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysqladmin &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; variables
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysqladmin &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; extended-status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;服务端选项&quot;&gt;服务端选项&lt;/h3&gt;

&lt;p&gt;启动 mysqld 服务时，可以通过 &lt;strong&gt;命令行、配置文件、变量&lt;/strong&gt; 这三种方法来 &lt;strong&gt;定义&lt;/strong&gt; 其运行的各种 &lt;strong&gt;选项&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;在多数情况下，我们希望服务端每次都用同样的选项来工作，因此修改配置文件更满足这个要求。&lt;/p&gt;

&lt;p&gt;mysqld 会从 &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/lib/mysql/auto.cnf&lt;/code&gt; 配置文件中读取 &lt;code class=&quot;highlighter-rouge&quot;&gt;[mysqld]&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;[server]&lt;/code&gt; 区段的设置。&lt;/p&gt;

&lt;p&gt;服务端选项、系统变量、状态变量加在一起的数量很庞大，&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/server-option-variable-reference.html&quot;&gt;这里&lt;/a&gt;有一个详细的列表可供查询。&lt;/p&gt;

&lt;p&gt;有些选项用来控制缓冲区的大小。对于一个给定的缓冲区，服务端有时会需要分配内部数据结构，这些结构通常是从总内存中拿出来，分配到缓冲区的，其需要的存储空间大小依平台而有所不同。因此，如果通过选项指定了缓冲区的大小，最后得到的可用空间可能会有所差异。&lt;/p&gt;

&lt;p&gt;有些选项的值是文件名。除非特别指定，如果是相对路径的话，默认的文件路径是数据目录。要想显式指定路径，应使用绝对路径。假设数据目录是 &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/mysql/data&lt;/code&gt;，如果某个选项指定了一个相对路径的文件名，则会被认为是在 &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/mysql/data&lt;/code&gt; 目录中。&lt;/p&gt;

&lt;p&gt;用户给变量赋值后，MySQL 会在一定范围内自动纠错，将其调整到可用范围内最接近的值。&lt;/p&gt;

&lt;p&gt;服务端运行时，可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SET&lt;/code&gt; 命令设置某些系统变量，如果希望提前对这些变量的最大值加以限制，可以在启动服务时以 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqld --maximum-var_name=value&lt;/code&gt; 的形式指定。&lt;/p&gt;

&lt;h3 id=&quot;系统变量&quot;&gt;系统变量&lt;/h3&gt;

&lt;p&gt;MySQL 服务端维护了许多系统变量，它们体现了服务的具体配置。&lt;/p&gt;

&lt;p&gt;每个系统变量都有一个默认值。这些变量可以在命令行指定，也可以在配置文件中指定。&lt;/p&gt;

&lt;p&gt;它们中的大多数都可以在运行时用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SET&lt;/code&gt; 语句来动态修改，这样就可以无需停止或重启服务就可修改服务的运行。&lt;/p&gt;

&lt;p&gt;可以在表达式中使用系统变量。&lt;/p&gt;

&lt;p&gt;在运行时，要想设置系统变量的全局值通常需要 &lt;code class=&quot;highlighter-rouge&quot;&gt;SYSTEM_VARIABLES_ADMIN&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;SUPER&lt;/code&gt; 的权限。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/server-system-variable-reference.html&quot;&gt;这里&lt;/a&gt;有详细的服务端系统变量统计表。&lt;/p&gt;

&lt;h4 id=&quot;查看系统变量及当前的值&quot;&gt;查看系统变量及当前的值&lt;/h4&gt;

&lt;p&gt;要想查看服务端基于其编译默认的所有系统变量：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysqld &lt;span class=&quot;nt&quot;&gt;--verbose&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;要想从所有系统变量中把在配置文件中出现的排除掉：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysqld &lt;span class=&quot;nt&quot;&gt;--no-defaults&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--verbose&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看当前运行中的服务正在使用的变量及值：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARIABLES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;系统变量的作用域&quot;&gt;系统变量的作用域&lt;/h4&gt;

&lt;p&gt;系统变量有两个作用域：&lt;strong&gt;全局&lt;/strong&gt; 和 &lt;strong&gt;会话&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;全局变量作用于运行的整个过程，会话变量作用于单个客户端的连接。&lt;/p&gt;

&lt;p&gt;某个系统变量可能同时有一个全局的值，和一个会话的值。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;服务启动时，会把每个全局变量初始化为其默认值。&lt;/li&gt;
  &lt;li&gt;服务端为每个连接来的客户端维护一组会话变量，这些变量是在连接时初始化的，大多使用的是其全局变量当前的值。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysqld &lt;span class=&quot;nt&quot;&gt;--innodb_log_file_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;16M &lt;span class=&quot;nt&quot;&gt;--max_allowed_packet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1G
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;相应地，如果要修改配置文件：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mysqld]
&lt;span class=&quot;nv&quot;&gt;innodb_log_file_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;16M
&lt;span class=&quot;nv&quot;&gt;max_allowed_packet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1G
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;修改变量&quot;&gt;修改变量&lt;/h4&gt;

&lt;p&gt;许多系统变量是动态的，可以在运行时使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SET&lt;/code&gt; 语句修改。使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SET&lt;/code&gt; 修改的配置在重启服务之后仍然有效。因为它不仅修改了运行时变量的值，还会把变量的新值写入配置文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/lib/mysql/auto.cnf&lt;/code&gt; 中。&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/var/lib/mysql/auto.cnf&lt;/code&gt; 配置文件完全由服务端自行管理，不要手动修改。&lt;/p&gt;

&lt;h5 id=&quot;赋值的单位&quot;&gt;赋值的单位&lt;/h5&gt;

&lt;p&gt;在 &lt;strong&gt;命令行&lt;/strong&gt; 中启动服务时为变量赋值，后缀可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;K&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;M&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;G&lt;/code&gt;，大小写均可，来表示 1024、1024&lt;sup&gt;2&lt;/sup&gt;、1024&lt;sup&gt;3&lt;/sup&gt; 等等。&lt;/p&gt;

&lt;p&gt;在 &lt;strong&gt;运行时&lt;/strong&gt; 为变量赋值时，不支持这些容量单位。&lt;/p&gt;

&lt;h5 id=&quot;用表达式赋值&quot;&gt;用表达式赋值&lt;/h5&gt;

&lt;p&gt;在 &lt;strong&gt;运行时&lt;/strong&gt; 为变量赋值时，支持用表达式来赋值，如：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GLOBAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_allowed_packet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;而在启动服务时则不支持用表达式赋值。&lt;/p&gt;

&lt;h5 id=&quot;设置全局变量&quot;&gt;设置全局变量&lt;/h5&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;GLOBAL&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;@@global.&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GLOBAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_connections&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_connections&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;PERSIST&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;@@persist.&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PERSIST&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_connections&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;persist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_connections&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;PERSIST_ONLY&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;@@persist_only&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PERSIST_ONLY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;back_log&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;persist_only&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;back_log&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p class=&quot;notice&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;PERSIST_ONLY&lt;/code&gt; 特殊的一点：它只会把赋值更新到配置文件，而不会修改运行时中的全局系统变量，因此更适合配置只读的系统变量，这些变量只能在启动服务的时候设置。&lt;/p&gt;

&lt;h5 id=&quot;设置会话变量&quot;&gt;设置会话变量&lt;/h5&gt;

&lt;p&gt;要想标记一个变量为会话变量，在变量名前面可以加上 &lt;code class=&quot;highlighter-rouge&quot;&gt;SESSION&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;@@session.&lt;/code&gt; 关键字，或使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;@@&lt;/code&gt; 修饰符。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SESSION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sql_mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'TRADITIONAL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql_mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'TRADITIONAL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql_mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'TRADITIONAL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;客户端只可以修改自己会话的变量。&lt;/p&gt;

&lt;p&gt;如果变量只用于会话，则不会持续有效，因此没必要出现在配置文件中。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LOCAL&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;@@local&lt;/code&gt; 与 &lt;code class=&quot;highlighter-rouge&quot;&gt;SESSION&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;@@session.&lt;/code&gt; 是等效的。&lt;/p&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SET&lt;/code&gt; 命令时，如果没有使用修饰符，则默认为修改会话变量。&lt;/p&gt;

&lt;p&gt;如果用设置会话变量的关键字来设置全局变量，或者反之，均会报错。&lt;/p&gt;

&lt;h5 id=&quot;同时为多个变量赋值&quot;&gt;同时为多个变量赋值&lt;/h5&gt;

&lt;p&gt;一条 &lt;code class=&quot;highlighter-rouge&quot;&gt;SET&lt;/code&gt; 语句中可以为多个变量赋值，用逗号分隔：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SESSION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sql_mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GLOBAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sort_buffer_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SESSION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sort_buffer_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_buffer_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_buffer_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GLOBAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_connections&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sort_buffer_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;同时为多个变量赋值时，如果这些变量同属于全局变量或会话变量，关键字只需要使用一次即可，放在第一个变量前面，如上面最后一条语句。&lt;/p&gt;

&lt;p&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;SET&lt;/code&gt; 语句中，某个变量的赋值失败，则整条语句都失败，哪个变量都不会改变，配置文件也不会被更新。&lt;/p&gt;

&lt;p&gt;如果修改了会话变量，变量值在 &lt;strong&gt;会话期间&lt;/strong&gt; 一直生效，直到会话结束。&lt;/p&gt;

&lt;p&gt;如果修改了全局变量，变量值 &lt;strong&gt;始终&lt;/strong&gt; 有效，并会用于 &lt;strong&gt;新产生的会话&lt;/strong&gt;，直到服务退出。全局变量的修改对于访问该变量的 &lt;strong&gt;所有客户端都可见&lt;/strong&gt;。&lt;/p&gt;

&lt;h4 id=&quot;变量的引用&quot;&gt;变量的引用&lt;/h4&gt;

&lt;p&gt;要想在表达式中引用系统变量，可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;@@&lt;/code&gt; 修饰符，除了 &lt;code class=&quot;highlighter-rouge&quot;&gt;@@persist.&lt;/code&gt;，它不允许用于表达式。&lt;/p&gt;

&lt;p&gt;如，在 &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; 语句中获取变量的值：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;对于用 &lt;code class=&quot;highlighter-rouge&quot;&gt;@@var_name&lt;/code&gt; 格式引用的变量名来说，MySQL 会返回其会话值，如果不存在，则返回全局值。而对于变量名中有句点的则不适用，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;@@global.&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;@@session.&lt;/code&gt; 格式的变量名。&lt;/p&gt;

&lt;h4 id=&quot;查询变量&quot;&gt;查询变量&lt;/h4&gt;

&lt;h5 id=&quot;查看所有变量&quot;&gt;查看所有变量&lt;/h5&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARIABLES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;用变量名检索&quot;&gt;用变量名检索&lt;/h5&gt;

&lt;p&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;LIKE&lt;/code&gt; 子句来 &lt;strong&gt;匹配&lt;/strong&gt; 特定的变量：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARIABLES&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'max_join_size'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SESSION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARIABLES&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'max_join_size'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;用模板检索&quot;&gt;用模板检索&lt;/h5&gt;

&lt;p&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;LIKE&lt;/code&gt; 子句中使用通配符 &lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; 来匹配变量：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARIABLES&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'%size%'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GLOBAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARIABLES&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'%size%'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;结构化的系统变量&quot;&gt;结构化的系统变量&lt;/h4&gt;

&lt;p&gt;结构化的变量与常规变量在两方面不同：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;变量值&lt;/strong&gt; 是结构化的，由 &lt;strong&gt;多个组件&lt;/strong&gt; 构成，每个组件用来描述不同的 &lt;strong&gt;服务参数&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;每一类结构化变量可以有 &lt;strong&gt;多个实例&lt;/strong&gt;，每个实例的名字不同，代表着服务所维护的 &lt;strong&gt;不同的资源&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;结构化系统变量的命名&quot;&gt;结构化系统变量的命名&lt;/h5&gt;

&lt;p&gt;MySQL 支持的这种结构化变量类型，其命名是这样的：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;实例名.组件名&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;要想引用某个结构化变量实例中的某个组件，就使用上面这种复合的变量名。以 Key Cache 变量为例：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hot_cache.key_buffer_size
hot_cache.key_cache_block_size
cold_cache.key_cache_block_size
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;对于每个结构化系统变量来说，总是有个用 &lt;code class=&quot;highlighter-rouge&quot;&gt;default&lt;/code&gt; 命名的 &lt;strong&gt;预定义的实例&lt;/strong&gt;。如果在引用某个结构化变量时，没有指定实例名称，则会认为使用的是 &lt;code class=&quot;highlighter-rouge&quot;&gt;default&lt;/code&gt; 实例。因此，&lt;code class=&quot;highlighter-rouge&quot;&gt;default.key_buffer_size&lt;/code&gt; 与 &lt;code class=&quot;highlighter-rouge&quot;&gt;key_buffer_size&lt;/code&gt; 指的是同一个系统变量。&lt;/p&gt;

&lt;p&gt;结构化变量的实例和组件遵循以下命名规则：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;对于一个特定的结构化变量的类型，每个实例的名称在 &lt;strong&gt;该类型&lt;/strong&gt; 的变量中必须是 &lt;strong&gt;唯一&lt;/strong&gt; 的。不同类型的变量可以使用相同的实例名。&lt;/li&gt;
  &lt;li&gt;对于每个结构化变量类型来说，组件名称必须是唯一的。&lt;/li&gt;
  &lt;li&gt;如果结构化变量名在未引用时是非法的，引用时需要用反引号。如 &lt;code class=&quot;highlighter-rouge&quot;&gt;hot-cahce&lt;/code&gt; 是非法的，而 &lt;code class=&quot;highlighter-rouge&quot;&gt;`hot-chache`&lt;/code&gt; 就是合法的。&lt;/li&gt;
  &lt;li&gt;禁止用 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;session&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;local&lt;/code&gt; 做为实例的名称，以免与对应的非结构化系统变量冲突。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;结构化变量的使用场景&quot;&gt;结构化变量的使用场景&lt;/h5&gt;

&lt;p&gt;只要能用普通变量的地方，就能用结构化的变量组件。如，用命令行选项为结构化变量赋值：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysqld &lt;span class=&quot;nt&quot;&gt;--hot_cache&lt;/span&gt;.key_buffer_size&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;64K
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在配置文件中也可以使用：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mysqld]
hot_cache.key_buffer_size&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;64K
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;赋值及检索&quot;&gt;赋值及检索&lt;/h5&gt;

&lt;p&gt;要想为结构化变量赋值，以下两种格式都可以：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GLOBAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hot_cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_buffer_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hot_cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_buffer_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;返回变量的值：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hot_cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_buffer_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;状态变量&quot;&gt;状态变量&lt;/h3&gt;

&lt;p&gt;服务端的状态变量用于保存服务动作的信息。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/server-status-variable-reference.html&quot;&gt;这里&lt;/a&gt;是详细的服务端状态变量统计表。&lt;/p&gt;

&lt;p&gt;查看所有状态变量及当前的值：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GOLBAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATUS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;许多状态变量可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;FLUSH STATUS&lt;/code&gt; 来重置为 0。&lt;/p&gt;

&lt;h3 id=&quot;服务端的-sql-模式&quot;&gt;服务端的 SQL 模式&lt;/h3&gt;

&lt;p&gt;MySQL 服务端能够以不同的 SQL 模式运转，并且能够为不同的客户端应用不同的模式，取决于 &lt;code class=&quot;highlighter-rouge&quot;&gt;sql_mode&lt;/code&gt; 这个系统变量。DBA 可以设置全局的 SQL 模式，以匹配网站服务运营的需求，每个程序都可以根据自己的需求来设置其会话的 SQL 模式。&lt;/p&gt;

&lt;p&gt;不同的模式会影响对 SQL 语法的支持，以及对数据有效性的检查。这一点使得在不同的环境中使用 MySQL 变的更加容易，同样地，也更容易与其它数据库服务一同使用。&lt;/p&gt;

&lt;h4 id=&quot;设置-sql-模式&quot;&gt;设置 SQL 模式&lt;/h4&gt;

&lt;p&gt;MySQL 8.0 的默认 SQL 模式包括：&lt;code class=&quot;highlighter-rouge&quot;&gt;ONLY_FULL_GROUP_BY&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;STRICT_TRANS_TABLES&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;NO_ZERO_IN_DATE&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;NO_ZERO_DATE&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;ERROR_FOR_DIVISION_BY_ZERO&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;NO_ENGINE_SUBSTITUTION&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;若要在服务启动时设置 SQL 模式，可用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--sql-mode=&quot;modes&quot;&lt;/code&gt; 选项，或在配置文件中使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;sql-mode=&quot;modes&quot;&lt;/code&gt;。其中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;modes&lt;/code&gt; 可以是不同模式的列表，用逗号分隔。若要显式清除 SQL 模式，可在命令行用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--sql-mode=&quot;&quot;&lt;/code&gt; 或在配置文件中用 &lt;code class=&quot;highlighter-rouge&quot;&gt;sql-mode=&quot;&quot;&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;要在运行时更改 SQL 模式，可用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SET&lt;/code&gt; 语句来设置全局或会话变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;sql_mode&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GLOBAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sql_mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'modes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SESSION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sql_mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'modes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询当前模式：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;GLOBAL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SESSION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p class=&quot;notice--warning&quot;&gt;&lt;strong&gt;SQL 模式与用户定义的分区&lt;/strong&gt; ： 分了区的表被创建并插入数据以后，如果要修改服务端 SQL 模式，表的行为会发生很大变化，有可能会引起数据的丢失和损坏。因此，强烈建议用户在对表进行分区之后，永远不要修改 SQL 模式。&lt;br /&gt;&lt;br /&gt;在复制分了区的表时，从表和主表必须使用相同的 SQL 模式。&lt;/p&gt;

&lt;h2 id=&quot;mysql-数据目录&quot;&gt;MySQL 数据目录&lt;/h2&gt;

&lt;p&gt;MySQL 服务端管理的信息保存在一个目录中，该目录称为数据目录。CentOS 7 中，该数据目录为 &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/lib/mysql&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;数据目录中常见的项目主要有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;数据目录的 &lt;strong&gt;子目录&lt;/strong&gt;。每个子目录都是一个数据库目录，对应一个服务端管理的数据库。
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 子目录中的是 mysql 的系统数据库，其中包含 MySQL 服务端运行所需的信息。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;performance_schema&lt;/code&gt; 子目录中的数据库，用于审查服务端在运行时其内部的执行情况。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sys&lt;/code&gt; 子目录中的数据库，会提供一组对象，来帮助解释 performance_schema 中的信息。&lt;/li&gt;
      &lt;li&gt;其他子目录为用户或应用程序建立的数据库。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;服务端保存的日志文件&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;InnoDB&lt;/code&gt; 表空间及日志文件&lt;/li&gt;
  &lt;li&gt;默认的，或自动生成的 SSL 及 RSA 证书及密钥文件。&lt;/li&gt;
  &lt;li&gt;服务端进程 ID 文件&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;auto.cnf&lt;/code&gt; 配置文件，保存全局系统变量。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mysql-系统数据库&quot;&gt;mysql 系统数据库&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 数据库是系统数据库，其中的表保存了服务端运行所需的信息。所有的表按功能大致分成以下几类：&lt;/p&gt;

&lt;h3 id=&quot;数据词典表&quot;&gt;数据词典表&lt;/h3&gt;

&lt;p&gt;Data Dictionary Tables&lt;/p&gt;

&lt;p&gt;这些表由数据词典组成，其中包含了数据库对象的元数据。&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;数据词典是 MySQL 8.0 新出现的。启用数据词典的服务端会带来一些操作上的差异。&lt;/p&gt;

&lt;p&gt;数据词典表是不可见的，无法被 &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; 读取，用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SHOW TABLES&lt;/code&gt; 也不会出现。但是，&lt;code class=&quot;highlighter-rouge&quot;&gt;INFORMATION_SCHEMA&lt;/code&gt; 数据库提供了一个视角，可以查看数据词典的元数据：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INFORMATION_SCHEMA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCHEMATA&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;G&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;***************************&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;***************************&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;CATALOG_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;def&lt;/span&gt;
               &lt;span class=&quot;k&quot;&gt;SCHEMA_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DEFAULT_CHARACTER_SET_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8mb4&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DEFAULT_COLLATION_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8mb4_0900_ai_ci&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;SQL_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;***************************&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;***************************&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;CATALOG_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;def&lt;/span&gt;
               &lt;span class=&quot;k&quot;&gt;SCHEMA_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DEFAULT_CHARACTER_SET_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DEFAULT_COLLATION_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8_general_ci&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;SQL_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;MySQL 8.0 以前版本的一些系统表已经被数据词典表代替：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;旧版的 &lt;code class=&quot;highlighter-rouge&quot;&gt;event&lt;/code&gt; 表被现在的 &lt;code class=&quot;highlighter-rouge&quot;&gt;events&lt;/code&gt; 数据词典表代替&lt;/li&gt;
  &lt;li&gt;旧版的 &lt;code class=&quot;highlighter-rouge&quot;&gt;proc&lt;/code&gt; 表被现在的 &lt;code class=&quot;highlighter-rouge&quot;&gt;parameters&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;routines&lt;/code&gt; 数据词典表代替&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;授权系统表&quot;&gt;授权系统表&lt;/h3&gt;

&lt;p&gt;Grant System Tables&lt;/p&gt;

&lt;p&gt;这些表中包含了用户账号及其权限等信息。&lt;/p&gt;

&lt;p&gt;对于 MySQL 8.0 来说，授权表是 &lt;code class=&quot;highlighter-rouge&quot;&gt;InnoDB&lt;/code&gt; （事务）表，之前的版本则是 &lt;code class=&quot;highlighter-rouge&quot;&gt;MyISAM&lt;/code&gt;（非事务）表。授权表底层存储引擎的改变，直接导致了账户管理语句的改变，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE USER&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT&lt;/code&gt;。以前版本中，账户管理语句中如果指定了多个用户，即使其中的部分用户失败，整个语句依然可以成功执行。但语句现在是事务性的，要么全部用户成功，语句成功执行，只要发生任何错误，整个语句就会回滚。&lt;/p&gt;

&lt;h4 id=&quot;事务&quot;&gt;事务&lt;/h4&gt;

&lt;p&gt;事务，Transaction，一般是指要做的或所做的事情。在计算机术语中是指访问并可能更新数据库中各种数据项的一个程序执行单元（unit）。在计算机术语中，事务通常就是指数据库事务。&lt;/p&gt;

&lt;p&gt;一个数据库事务通常包含对数据库进行读或写的一个 &lt;strong&gt;操作序列&lt;/strong&gt;。它的存在包含有以下两个目的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;为数据库操作提供了一个从失败中恢复到正常状态的方法，同时提供了数据库即使在异常状态下仍能保持 &lt;strong&gt;一致性&lt;/strong&gt; 的方法。&lt;/li&gt;
  &lt;li&gt;当多个应用程序在 &lt;strong&gt;并发访问&lt;/strong&gt; 数据库时，可以在这些应用程序之间提供一个 &lt;strong&gt;隔离&lt;/strong&gt; 方法，以防止彼此的操作互相干扰。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当一个事务被提交给了 DBMS（数据库管理系统）时，DBMS 需要确保该事务中的 &lt;strong&gt;所有操作都成功完成&lt;/strong&gt;，且其结果被 &lt;strong&gt;永久保存&lt;/strong&gt; 在数据库中，如果事务中有的操作没有成功完成，则事务中的所有操作都需要被 &lt;strong&gt;回滚&lt;/strong&gt;，回到事务执行前的状态（要么全执行，要么全都不执行）；同时，该事务对数据库或者其他事务的执行无影响，所有的事务都好像在独立的运行。&lt;/p&gt;

&lt;p&gt;但在现实情况下，失败的风险很高。在一个数据库事务的执行过程中，有可能会遇上事务操作失败、数据库系统/操作系统失败，甚至是存储介质失败等情况。这便需要 DBMS 对一个执行失败的事务执行恢复操作，将其数据库状态恢复到一致状态（数据的一致性得到保证的状态）。为了实现将数据库状态恢复到一致状态的功能，DBMS 通常需要维护 &lt;strong&gt;事务日志&lt;/strong&gt; 以追踪事务中所有影响数据库数据的操作。&lt;/p&gt;

&lt;h3 id=&quot;对象信息系统表&quot;&gt;对象信息系统表&lt;/h3&gt;

&lt;p&gt;Object Information System Tables&lt;/p&gt;

&lt;p&gt;这些表所保存的信息是关于存储的程序、组件、用户定义的函数及服务端插件的。&lt;/p&gt;

&lt;h3 id=&quot;日志系统表&quot;&gt;日志系统表&lt;/h3&gt;

&lt;p&gt;Log System Tables&lt;/p&gt;

&lt;p&gt;服务端用这些表来保存日志。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;general_log&lt;/code&gt; 普通的查询日志&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;slow_log&lt;/code&gt; 慢速查询日志&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;日志表使用 CSV 存储引擎。&lt;/p&gt;

&lt;h3 id=&quot;帮助系统表&quot;&gt;帮助系统表&lt;/h3&gt;

&lt;p&gt;Server-Side Help System Tables&lt;/p&gt;

&lt;p&gt;这些表包含服务端帮助信息。&lt;/p&gt;

&lt;h3 id=&quot;时区系统表&quot;&gt;时区系统表&lt;/h3&gt;

&lt;p&gt;Time Zone System Tables&lt;/p&gt;

&lt;p&gt;这些表包含时区信息。&lt;/p&gt;

&lt;h3 id=&quot;复制系统表&quot;&gt;复制系统表&lt;/h3&gt;

&lt;p&gt;Replication System Tables&lt;/p&gt;

&lt;p&gt;服务端使用这些表来支持复制。&lt;/p&gt;

&lt;h3 id=&quot;优化器系统表&quot;&gt;优化器系统表&lt;/h3&gt;

&lt;p&gt;这些表用于优化器。&lt;/p&gt;

&lt;h3 id=&quot;其它系统表&quot;&gt;其它系统表&lt;/h3&gt;

&lt;p&gt;无法归纳到以上类别的其它表。&lt;/p&gt;

&lt;h2 id=&quot;mysql-server-日志&quot;&gt;MySQL Server 日志&lt;/h2&gt;

&lt;p&gt;MySQL Server 有多个日志来帮助用户查明当下发生的事件。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;日志类型&lt;/th&gt;
      &lt;th&gt;写到日志中的信息&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;错误日志&lt;/td&gt;
      &lt;td&gt;在 mysqld 启动、运行、暂停期间遇到的问题&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;一般查询日志&lt;/td&gt;
      &lt;td&gt;已建立的客户端连接和客户端接收的语句&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;二进制日志&lt;/td&gt;
      &lt;td&gt;改变数据的语句（也用于复制）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;中继日志&lt;/td&gt;
      &lt;td&gt;从复制主服务器接收的数据更改&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;慢查询的日志&lt;/td&gt;
      &lt;td&gt;超过 &lt;code class=&quot;highlighter-rouge&quot;&gt;long_query_time&lt;/code&gt; 秒执行的查询&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DDL 元数据日志&lt;/td&gt;
      &lt;td&gt;DDL 语句执行的元数据操作&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;系统默认不会启用任何日志。对于已启用的日志，服务端会把日志文件写入数据目录中。通过对日志的 &lt;strong&gt;冲洗&lt;/strong&gt;，用户可以强制服务端关闭并重新打开日志文件，或在某些情况下切换到一个新的日志文件。&lt;/p&gt;

&lt;p&gt;冲洗日志的方法：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;FLUSH LOGS&lt;/code&gt; 语句&lt;/li&gt;
  &lt;li&gt;执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqladmin flush-logs&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqladmin refresh&lt;/code&gt; 语句&lt;/li&gt;
  &lt;li&gt;执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqldump --flush-logs&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqldump --master-data&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;二进制日志在大小超过 &lt;code class=&quot;highlighter-rouge&quot;&gt;max_binlog_size&lt;/code&gt; 系统变量时会自动冲洗&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;自定义查询日志的保存位置&quot;&gt;自定义查询日志的保存位置&lt;/h3&gt;

&lt;p class=&quot;notice&quot;&gt;这一块内容，在 &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/log-destinations.html&quot;&gt;MySQL 8.0 参考手册原文&lt;/a&gt;中写的尤其的混乱，本人尝试按自己的理解整理如下，如有异议，欢迎讨论。&lt;/p&gt;

&lt;p&gt;本节内容仅限于 &lt;strong&gt;一般查询日志&lt;/strong&gt; 和 &lt;strong&gt;慢查询日志&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;如果要启用一般查询日志和慢查询日志，既可以把日志保存为 &lt;strong&gt;日志文件&lt;/strong&gt;，也可以保存到 &lt;strong&gt;数据库&lt;/strong&gt; 中，也可以同时保存到文件和数据库中。如果保存到数据库，通常会保存到 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 数据库中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;general_log&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;slow_log&lt;/code&gt; &lt;strong&gt;表&lt;/strong&gt; 中。&lt;/p&gt;

&lt;h4 id=&quot;把日志保存到数据库&quot;&gt;把日志保存到数据库&lt;/h4&gt;

&lt;h5 id=&quot;把日志保存到数据库的好处&quot;&gt;把日志保存到数据库的好处&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;日志条目有标准的格式&lt;/li&gt;
  &lt;li&gt;可以用 SQL 语句访问日志内容&lt;/li&gt;
  &lt;li&gt;可以通过任何客户端远程查询日志&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;查看数据库中的日志&quot;&gt;查看数据库中的日志&lt;/h5&gt;

&lt;p&gt;要想查看 &lt;strong&gt;日志表的结构&lt;/strong&gt;，可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SHOW CREATE TABLE&lt;/code&gt; 语句：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;general_log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slow_log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以用特定条件来查询日志。如可以查询与某个客户端相关的日志内容，以便查找该客户端发生的查询问题。&lt;/p&gt;

&lt;h5 id=&quot;使用数据库保存日志的特点&quot;&gt;使用数据库保存日志的特点&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;总的说来，使用日志表的目的是为用户提供一个接口，便于观察服务在运行时的执行，而不去干扰运行时的执行。&lt;/li&gt;
  &lt;li&gt;对一个日志表可以进行 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE TABLE&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER TABLE&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;DROP TABLE&lt;/code&gt; 操作，其中 &lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER TABLE&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;DROP TABLE&lt;/code&gt; 操作需要在日志表未被使用时，且要被禁用，才能进行。&lt;/li&gt;
  &lt;li&gt;日志表默认使用 CSV 存储引擎，写入的数据需用逗号分隔。如果用户有权限访问该 &lt;code class=&quot;highlighter-rouge&quot;&gt;.csv&lt;/code&gt; 文件，就可以很方便地将其导入其它电子表格程序中。&lt;/li&gt;
  &lt;li&gt;要想禁用日志以便修改或删除日志表，可以用以下方法：
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;old_log_state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;general_log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GLOBAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;general_log&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'OFF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;general_log&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ENGINE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyISAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GLOBAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;general_log&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;old_log_state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TRUNCATE TABLE&lt;/code&gt; 用于清空数据表，可用在那些过期的日志条目上&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RENAME TABLE&lt;/code&gt; 可以原子地重命名日志表，可用于日志的滚动
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;general_log2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;general_log2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;general_log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;RENAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;general_log&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;general_log_backup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;general_log2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;general_log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;可用 &lt;code class=&quot;highlighter-rouge&quot;&gt;CHECK TABLE&lt;/code&gt; 检查日志表的错误。&lt;/li&gt;
  &lt;li&gt;对日志表不能使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;LOCK TABLES&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;对日志表不能使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;UPDATE&lt;/code&gt;，这些操作只能由服务端内部进行。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FLUSH TABLES WITH READ LOCK&lt;/code&gt; 及 &lt;code class=&quot;highlighter-rouge&quot;&gt;read_only&lt;/code&gt; 系统变量的状态对日志表没有影响，服务端总是可以写入日志表。&lt;/li&gt;
  &lt;li&gt;写入日志表中的条目不会被写入二进制日志，因此不会复制到从服务端。&lt;/li&gt;
  &lt;li&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;FLUSH TABLES&lt;/code&gt; 冲洗日志表，用 &lt;code class=&quot;highlighter-rouge&quot;&gt;FLUSH LOGS&lt;/code&gt; 冲洗日志文件。&lt;/li&gt;
  &lt;li&gt;日志表是无法分区的&lt;/li&gt;
  &lt;li&gt;日志表无法用 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqldump&lt;/code&gt; 来备份&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;控制查询日志的主要变量&quot;&gt;控制查询日志的主要变量&lt;/h4&gt;

&lt;p&gt;这两种查询日志主要由以下几个变量来控制：&lt;/p&gt;

&lt;h5 id=&quot;general_log&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;general_log&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;全局变量，&lt;strong&gt;一般查询日志的开关&lt;/strong&gt;。变量值为布尔值，为 1 则启用日志，为 0 则禁用日志。&lt;/p&gt;

&lt;p&gt;该变量的默认值取决于是否使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;--general_log&lt;/code&gt; 选项。&lt;/p&gt;

&lt;h5 id=&quot;general_log_file&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;general_log_file&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;全局变量，一般查询日志文件的文件名，默认值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;host_name.log&lt;/code&gt;，可通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;--general_log_file&lt;/code&gt; 选项来修改其默认值。&lt;/p&gt;

&lt;h5 id=&quot;slow_query_log&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;slow_query_log&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;全局变量，&lt;strong&gt;慢查询日志的开关&lt;/strong&gt;。变量值为布尔值，为 1 则启用日志，为 0 则禁用日志。&lt;/p&gt;

&lt;p&gt;该变量的默认值取决于是否使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;--slow_query_log&lt;/code&gt; 选项。&lt;/p&gt;

&lt;h5 id=&quot;slow_query_log_file&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;slow_query_log_file&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;全局变量，慢查询日志文件的文件名，默认值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;host_name-slow.log&lt;/code&gt;，可通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;--slow_query_log_file&lt;/code&gt; 选项来修改其默认值。&lt;/p&gt;

&lt;h5 id=&quot;log_output&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log_output&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;全局变量。&lt;/p&gt;

&lt;p&gt;官方对该变量的解释是：系统变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_output&lt;/code&gt; 用于控制一般查询日志和慢查询日志所输出的目标。即把它们保存到哪儿。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;有效变量值&lt;/strong&gt; ： 如果日志保存为文件，变量值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;FILE&lt;/code&gt;；如果日志保存到数据库中，变量值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;TABLE&lt;/code&gt;；如果不保存日志，变量值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;NONE&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;由此我们看到，该变量实际上同时起到了两个作用：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;总开关&lt;/strong&gt;：变量值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;NONE&lt;/code&gt; 时，系统绝对不会保存一般查询日志和慢查询日志，即使 &lt;code class=&quot;highlighter-rouge&quot;&gt;general_log&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;slow_guery_log&lt;/code&gt; 为 1 也没用。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;日志输出形式&lt;/strong&gt;：如果变量值不为 &lt;code class=&quot;highlighter-rouge&quot;&gt;NONE&lt;/code&gt;，说明总开关打开，启用这两个查询日志。
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FILE&lt;/code&gt; ： 日志保存为文件&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TABLE&lt;/code&gt; ： 日志保存到数据库中的表&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;无论从逻辑上还是从操作上看，把日志保存到文件和保存到数据库是不相冲突的，因此应该允许同时把日志保存到文件和数据库中。&lt;/p&gt;

&lt;p&gt;可通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;--log-output[=value,...]&lt;/code&gt; 选项来为变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_output&lt;/code&gt; 赋值：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;赋值时允许使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;TABLE, FILE&lt;/code&gt; 这样的列表，用逗号分隔&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log_output&lt;/code&gt; 默认值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;FILE&lt;/code&gt;。因此，如果没有使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--log-output&lt;/code&gt; 选项，则会默认把日志保存为文件。&lt;/li&gt;
  &lt;li&gt;虽然有点儿傻，但如果赋值时列表中含有 &lt;code class=&quot;highlighter-rouge&quot;&gt;NONE&lt;/code&gt;，则列表中其他值无效，总开关关闭，禁用日志。&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;变量的配合使用&quot;&gt;变量的配合使用&lt;/h6&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log_output&lt;/code&gt; 做为查询日志的总开关，控制是否启用，及输出的形式。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;general_log&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;slow_query_log&lt;/code&gt; 做为二级开关需要与总开关配合使用。要想开启某个查询日志，&lt;strong&gt;两层&lt;/strong&gt; 开关必须 &lt;strong&gt;同时打开&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;以下范例使用命令行选项为变量赋值：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;两种查询日志均开启，把日志同时保存到文件及数据库：&lt;code class=&quot;highlighter-rouge&quot;&gt;--log-output=FILE,TABLE --general_log=1 --slow_query_log=1&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;两种查询日志均开启，把日志仅保存到数据库： &lt;code class=&quot;highlighter-rouge&quot;&gt;--log-output=TABLE --general_log --slow_query_log&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;仅开启慢查询日志，仅保存为文件： &lt;code class=&quot;highlighter-rouge&quot;&gt;--log-output=FILE --slow_query_log&lt;/code&gt;，或简写为 &lt;code class=&quot;highlighter-rouge&quot;&gt;--slow_query_log&lt;/code&gt;，因为 &lt;code class=&quot;highlighter-rouge&quot;&gt;FILE&lt;/code&gt; 是默认值&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;选项简写说明：&lt;code class=&quot;highlighter-rouge&quot;&gt;--general_log=1&lt;/code&gt; 可以简写为 &lt;code class=&quot;highlighter-rouge&quot;&gt;--general_log&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;--slow_query_log=1&lt;/code&gt; 可简写为 &lt;code class=&quot;highlighter-rouge&quot;&gt;--slow_query_log&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;sql_log_off&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sql_log_off&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sql_log_off&lt;/code&gt; 为会话变量，布尔值。&lt;/p&gt;

&lt;p&gt;该变量仅用于控制：对于 &lt;strong&gt;当前连接&lt;/strong&gt;，是否启用日志。&lt;/p&gt;

&lt;h4 id=&quot;在启动服务时指定日志形式&quot;&gt;在启动服务时指定日志形式&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;general_log&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;slow_query_log&lt;/code&gt; 的布尔值即可以用 1/0 表示，也可以用 ON/OFF 表示。&lt;/p&gt;

&lt;p&gt;在启动服务时通过选项以 &lt;code class=&quot;highlighter-rouge&quot;&gt;--log-output=FILE&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;--general_log=1&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;--slow_query_log=1&lt;/code&gt; 的形式来控制日志的开启。具体使用方法已在上文范例中演示。&lt;/p&gt;

&lt;p&gt;当然还可以直接修改配置文件：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;general_log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;span class=&quot;nv&quot;&gt;general_log_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;my_logs.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;在运行时设定日志形式&quot;&gt;在运行时设定日志形式&lt;/h4&gt;

&lt;p&gt;这些变量均可以在运行时设定：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log_output&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;general_log&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;general_log_file&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;slow_query_log&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;slow_query_log_file&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;sql_log_off&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GLOBAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log_output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'TABLE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GLOBAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;general_log&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ON'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;错误日志&quot;&gt;错误日志&lt;/h3&gt;

&lt;p&gt;错误日志中包含 mysqld 启动和关闭期间诸如错误、警告、通知这类诊断消息。&lt;/p&gt;

&lt;h4 id=&quot;错误日志系统变量&quot;&gt;错误日志系统变量&lt;/h4&gt;

&lt;h5 id=&quot;log_error-系统变量&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log_error&lt;/code&gt; 系统变量&lt;/h5&gt;

&lt;p&gt;默认的错误日志输出目标。因此 &lt;strong&gt;错误日志保存到哪里&lt;/strong&gt; 是由这个变量决定的。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_error&lt;/code&gt; 变量值为 &lt;strong&gt;文件名&lt;/strong&gt;，则日志文件保存为数据目录中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;文件名.NN.json&lt;/code&gt;，NN 从 00 开始计数。如 &lt;code class=&quot;highlighter-rouge&quot;&gt;filename.00.json&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;filename.01.json&lt;/code&gt; 等。&lt;/li&gt;
  &lt;li&gt;如果变量值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;stderr&lt;/code&gt;，则日志输出到终端。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;该变量可以通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;--log-error[=file_name]&lt;/code&gt; 来赋值。如果使用选项时未指定文件名，则默认文件名为数据目录中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;host_name.err&lt;/code&gt;。&lt;/p&gt;

&lt;h5 id=&quot;log_error_services-系统变量&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log_error_services&lt;/code&gt; 系统变量&lt;/h5&gt;

&lt;p&gt;该变量用于控制在错误日志中 &lt;strong&gt;启用哪些组件&lt;/strong&gt;，以及以什么 &lt;strong&gt;顺序&lt;/strong&gt; 使用这些组件。&lt;/p&gt;

&lt;p&gt;变量值为日志组件列表，用分号分隔。列表中的组件是按服务端执行它们的 &lt;strong&gt;顺序&lt;/strong&gt; 排列的。这些组件要么是内建组件，要么必须提前用 &lt;code class=&quot;highlighter-rouge&quot;&gt;INSTALL COMPONENT&lt;/code&gt; 安装到系统中。&lt;/p&gt;

&lt;p&gt;服务端会按照 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_error_services&lt;/code&gt; 变量值中，各组件排列顺序来执行 filter 和 sink 的。&lt;/p&gt;

&lt;p&gt;该变量的默认值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_filter_internal; log_sink_internal&lt;/code&gt;。表示日志事件首先通过内建组件 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_filter_internal&lt;/code&gt;，筛选出来的日志交给内建组件 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_sink_internal&lt;/code&gt;，把日志事件转换成日志消息格式，再输出到特定位置，如文件或系统日志。&lt;/p&gt;

&lt;p&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_error_services&lt;/code&gt; 的变量值中没有 sink 组件，则不会有日志输出。&lt;/p&gt;

&lt;h5 id=&quot;log_error_verbosity-系统变量&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log_error_verbosity&lt;/code&gt; 系统变量&lt;/h5&gt;

&lt;p&gt;该变量决定着 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_filter_internal&lt;/code&gt; 组件应该筛选哪些日志事件。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;变量值为 1 时，筛选错误消息&lt;/li&gt;
  &lt;li&gt;变量值为 2 时，筛选错误和警告消息&lt;/li&gt;
  &lt;li&gt;变量值为 3 时，筛选错误、警告、通知消息&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;dragnetlog_error_filter_rules-系统变量&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dragnet.log_error_filter_rules&lt;/code&gt; 系统变量&lt;/h5&gt;

&lt;h4 id=&quot;错误日志组件&quot;&gt;错误日志组件&lt;/h4&gt;

&lt;p&gt;日志的组件分两类：filter 和 sink&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;filter ： 用于 &lt;strong&gt;处理&lt;/strong&gt; 日志事件。如添加、删除、修改事件字段，或删除整条事件。把最后得到的事件 &lt;strong&gt;传递&lt;/strong&gt; 给 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_error_services&lt;/code&gt; 变量中的下一个组件。&lt;/li&gt;
  &lt;li&gt;sink ： sink 把日志事件 &lt;strong&gt;格式化&lt;/strong&gt; 成日志消息，并将其 &lt;strong&gt;写入&lt;/strong&gt; 相关输出，如日志文件或系统日志。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;filter-组件&quot;&gt;Filter 组件&lt;/h5&gt;

&lt;p&gt;filter 组件完成针对错误日志事件的 &lt;strong&gt;筛选&lt;/strong&gt;，可以理解为日志的 &lt;strong&gt;过滤器&lt;/strong&gt;。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;要是没有启用 filter 组件，就不会进行筛选。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log_error_services&lt;/code&gt; 变量中启用的 filter 组件仅对其 &lt;strong&gt;后面的&lt;/strong&gt; sink 组件 &lt;strong&gt;有作用&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;log_filter_internal-组件&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log_filter_internal&lt;/code&gt; 组件&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;任务 ：基于 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_error_verbosity&lt;/code&gt; 系统变量进行日志的筛选。&lt;/li&gt;
  &lt;li&gt;URN ：该组件为内建组件，使用前无需专门加载&lt;/li&gt;
  &lt;li&gt;允许多用途使用 ：是&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果未启用 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_filter_internal&lt;/code&gt; 组件，&lt;code class=&quot;highlighter-rouge&quot;&gt;log_error_verbosity&lt;/code&gt; 变量就不会生效。&lt;/p&gt;

&lt;h6 id=&quot;log_filter_dragnet-组件&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log_filter_dragnet&lt;/code&gt; 组件&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;任务 ：基于 &lt;code class=&quot;highlighter-rouge&quot;&gt;dragnet.log_error_filter_rules&lt;/code&gt; 系统变量设定的规则进行日志的筛选。&lt;/li&gt;
  &lt;li&gt;URN ：&lt;code class=&quot;highlighter-rouge&quot;&gt;file://component_log_filter_dragnet&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;允许多用途使用 ：否&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;sink-组件&quot;&gt;Sink 组件&lt;/h5&gt;

&lt;p&gt;sink 组件负责日志的 &lt;strong&gt;写入&lt;/strong&gt;，可以理解为日志的 &lt;strong&gt;书写器&lt;/strong&gt;。如果未启用任何 sink 组件，则不会有任何日志输出。&lt;/p&gt;

&lt;h6 id=&quot;log_sink_internal-组件&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log_sink_internal&lt;/code&gt; 组件&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;任务 ：使用传统的错误日志消息的输出格式&lt;/li&gt;
  &lt;li&gt;URN ：该组件为内建组件，使用前无需专门加载&lt;/li&gt;
  &lt;li&gt;允许多用途使用 ：否&lt;/li&gt;
  &lt;li&gt;输出 ：写入默认的错误日志输出&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;log_sink_json-组件&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log_sink_json&lt;/code&gt; 组件&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;任务 ：使用 JSON 格式的错误日志&lt;/li&gt;
  &lt;li&gt;URN ：&lt;code class=&quot;highlighter-rouge&quot;&gt;file://component_log_sink_json&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;允许多用途使用 ：是&lt;/li&gt;
  &lt;li&gt;输出 ：基于 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_error&lt;/code&gt; 系统变量的设定&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;log_sink_syseventlog-组件&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log_sink_syseventlog&lt;/code&gt; 组件&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;任务 ：把错误日志写入系统日志 &lt;code class=&quot;highlighter-rouge&quot;&gt;syslog&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;URN ：&lt;code class=&quot;highlighter-rouge&quot;&gt;file://component_log_sink_syseventlog&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;允许多用途使用 ：是&lt;/li&gt;
  &lt;li&gt;输出 ：写入系统日志&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;log_sink_test-组件&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log_sink_test&lt;/code&gt; 组件&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;任务 ：主要用于内部测试，不用于生产&lt;/li&gt;
  &lt;li&gt;URN ：&lt;code class=&quot;highlighter-rouge&quot;&gt;file://component_log_sink_test&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;允许多用途使用 ：是&lt;/li&gt;
  &lt;li&gt;输出 ：写入默认的错误日志输出&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;错误日志组件配置&quot;&gt;错误日志组件配置&lt;/h4&gt;

&lt;p&gt;在 MySQL 8.0 中，错误日志使用 MySQL 组件架构。错误日志子系统由组件和系统变量组成。其中，组件负责日志事件的 &lt;strong&gt;过滤&lt;/strong&gt; 和 &lt;strong&gt;写入&lt;/strong&gt;，系统变量用于配置特定组件，以实现所需的日志结果。&lt;/p&gt;

&lt;h5 id=&quot;错误日志的特点&quot;&gt;错误日志的特点&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;filter 组件对日志事件进行筛选，影响获取到的信息&lt;/li&gt;
  &lt;li&gt;sink 组件负责日志事件的输出。可以启用多个 sink 组件，以实现向多目标输出日志&lt;/li&gt;
  &lt;li&gt;内建的 filter 和 sink 组件组合在一起形成默认的日志格式&lt;/li&gt;
  &lt;li&gt;通过可加载的 sink 组件，可以实现把错误日志写入系统日志&lt;/li&gt;
  &lt;li&gt;通过可加载的 sink 组件，可以实现 JSON 格式的错误日志&lt;/li&gt;
  &lt;li&gt;由系统变量控制启用哪个组件，及使用哪些规则来筛选日志&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;修改日志组件&quot;&gt;修改日志组件&lt;/h5&gt;

&lt;p&gt;要想修改错误日志使用的组件，如果不是内建组件，需要先将其加载，然后修改 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_error_services&lt;/code&gt; 变量的值。&lt;/p&gt;

&lt;p&gt;要想启用某个非内建的日志组件，先用 &lt;code class=&quot;highlighter-rouge&quot;&gt;INSTALL COMPONENT&lt;/code&gt; 加载它，然后把它加入 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_error_services&lt;/code&gt; 变量。&lt;/p&gt;

&lt;p&gt;要想禁用某个日志组件，先从 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_error_services&lt;/code&gt; 变量中将其移除，再用 &lt;code class=&quot;highlighter-rouge&quot;&gt;UNINSTALL COMPONET&lt;/code&gt; 将其卸载。&lt;/p&gt;

&lt;p&gt;如，想用 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_sink_syseventlog&lt;/code&gt; 组件来代替默认的 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_sink_internal&lt;/code&gt;，先要加载它，再修改 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_error_services&lt;/code&gt; 变量的值：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;INSTALL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMPONENT&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'file://component_log_sink_syseventlog'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GLOBAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log_error_services&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'log_filter_internal; log_sink_syseventlog'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;加载日志组件时所使用的 URN 是复合文件名，前缀为 &lt;code class=&quot;highlighter-rouge&quot;&gt;file://component_&lt;/code&gt;。&lt;/p&gt;

&lt;h6 id=&quot;使用多个-sink-组件&quot;&gt;使用多个 sink 组件&lt;/h6&gt;

&lt;p&gt;可以设置多个 sink 组件，把日志输出到多个目标。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GLOBAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log_error_services&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'log_filter_internal; log_sink_internal; log_sink_syseventlog'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;恢复默认：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GLOBAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log_error_services&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'log_filter_internal; log_sink_internal;'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;UNINSTALL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMPONENT&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'file://component_log_sink_syseventlog'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;保存对组件的修改&quot;&gt;保存对组件的修改&lt;/h6&gt;

&lt;p&gt;要想对组件的修改在服务启动时就自动生效：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果组件可加载，则使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;INSTALL COMPONENT&lt;/code&gt; ，这会将该组件在系统表 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql.component&lt;/code&gt; 中将其注册，以后服务端启动时就会自动加载了。&lt;/li&gt;
  &lt;li&gt;在配置文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;my.cnf&lt;/code&gt; 中设定 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_error_services&lt;/code&gt; 变量&lt;/li&gt;
  &lt;li&gt;在运行时使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SET PERSIST&lt;/code&gt; 将立即生效，而且会保存，重启仍然有效&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;范例&quot;&gt;范例&lt;/h6&gt;

&lt;p&gt;希望每次服务启动时，在默认配置基础上，额外再使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_sink_json&lt;/code&gt; 组件来保存日志。&lt;/p&gt;

&lt;p&gt;如果没有加载，则先加载 JSON 组件：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;INSTALL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMPONENT&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'file://component_log_sink_json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后，在配置文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;my.cnf&lt;/code&gt; 中修改 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_error_services&lt;/code&gt; 变量：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mysqld]
&lt;span class=&quot;nv&quot;&gt;log_error_services&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'log_filter_internal; log_sink_internal; log_sink_json'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;或者，也可以在运行时用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SET PERSIST&lt;/code&gt; 来修改变量：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PERSIST&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log_error_services&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'log_filter_internal; log_sink_internal; log_sink_json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;一定要保证变量中各组件的顺序，如：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log_filter_internal; log_sink_1; log_sink_2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;日志事件先由内建的 filter 筛选，然后交给第一个书写器，再交给第二个书写器。两个书写器都会收到筛选出来的日志事件。&lt;/p&gt;

&lt;p&gt;再如：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log_sink_1; log_filter_internal; log_sink_2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;日志事件先是传给第一个书写器，然后再由内建过滤器筛选，筛选后交给第二个书写器。&lt;/p&gt;

&lt;p&gt;第一个书写器收到的是未经筛选的事件，第二个书写器收到的是经过筛选的事件。这样就可以得到一个完整的不分类的日志，和一个错误日志。&lt;/p&gt;

&lt;h2 id=&quot;mysql-server-组件&quot;&gt;MySQL Server 组件&lt;/h2&gt;

&lt;p&gt;MySQL Server 包含一个基于组件的架构，用来扩展其服务端功能。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;组件可以为服务端和其它组件提供服务，组件之间仅通过它们提供的服务来交互&lt;/li&gt;
  &lt;li&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;INSTALL COMPONENT&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;UNINSTALL COMPONENT&lt;/code&gt; 语句来加载和卸载组件&lt;/li&gt;
  &lt;li&gt;加载服务用来处理组件的加载和卸载，并把已加载的组件放入 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql.component&lt;/code&gt; 系统表中，作为注册表&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;用于控制组件的 SQL 语句对于服务端的运行以及 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql.component&lt;/code&gt; 系统表有如下影响：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;INSTALL COMPONENT&lt;/code&gt; 把组件加载到服务端。组件会立即激活，加载服务还会把加载的组件注册到 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql.component&lt;/code&gt; 系统表中。之后服务端重启时，&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql.component&lt;/code&gt; 中的所有组件都会被加载。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UNINSTALL COMPONENT&lt;/code&gt; 会停用组件，并从服务端卸载。加载服务将其从 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql.component&lt;/code&gt; 移除，下次重启不会加载。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;查看系统当前已安装的组件：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;一台主机运行多个-mysql-实例&quot;&gt;一台主机运行多个 MySQL 实例&lt;/h2&gt;

&lt;p&gt;有时需要在一台主机上同时运行多个 MySQL 的实例，如为了测试一个新版的 MySQL，同时不影响现有的版本，或者需要让不同的用户访问不同的 mysqld 服务端。&lt;/p&gt;

&lt;p&gt;我们可以做到每个实例使用不同的 MySQL Server 二进制文件，或多个实例使用同一个二进制文件，或二者的任意组合。如，可以同时运行两个版本的 MySQL，以观察它们对待同一个工作流有什么区别。或者运行同一个版本的多个实例，每个实例管理不同的数据库。&lt;/p&gt;

&lt;p&gt;不管是否使用不同的服务端二进制文件，每个运行的实例都必须给某些运行参数赋予唯一的值，以避免不同实例间的冲突。参数可以在命令行、配置文件设置，也可以通过设置环境变量实现。&lt;/p&gt;

&lt;p&gt;要想查看某个实例使用的变量及值，可用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SHOW VARIABLES&lt;/code&gt; 语句。&lt;/p&gt;

&lt;p&gt;MySQL 实例管理的主要资源是数据目录，每个实例应该使用不同的数据目录，用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--datadir=&lt;/code&gt; 选项指定。&lt;/p&gt;

&lt;p&gt;除了使用不同的数据目录，每个服务端实例对于以下选项也要有不同的值：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--port=port_num&lt;/code&gt; ： 用于控制 TCP/IP 连接的端口号。或者，如果主机有不同的网址，也可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--bind-address&lt;/code&gt; 让每个服务端侦听不同的地址。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--socket={file_name|pipe_name}&lt;/code&gt; ： 用于控制套接字文件路径。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--pid-file=file_name&lt;/code&gt; ： 服务端把其进程 ID 写到哪个文件中&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--general_log_file=file_name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--log-bin[=file_name]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--slow_query_log_file=file_name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--log-error[=file_name]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--tmpdir=dir_name&lt;/code&gt; ： 为每个实例分配不同的物理磁盘，以分摊负载。&lt;/p&gt;

&lt;p&gt;如果在不同位置有多个 MySQL 的安装文件，可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--basedir=dir_name&lt;/code&gt; 选项为每个安装文件设置各自的基准目录，这会促使每个安装文件都自动使用不同的数据目录、日志文件和 PID 文件，因为这些参数的默认值都与基准目录有关。于是，剩下需要指定的只有 &lt;code class=&quot;highlighter-rouge&quot;&gt;--socket&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;--port&lt;/code&gt; 两个选项了。&lt;/p&gt;</content><author><name>Hawk Zhang</name><email>imhawkz@gmail.com</email></author><category term="mysql" /><category term="server" /></entry><entry><title type="html">MySQL 的安全</title><link href="https://linotes.netlify.com/database/mysql_security/" rel="alternate" type="text/html" title="MySQL 的安全" /><published>2016-03-01T00:00:00+08:00</published><updated>2016-03-01T00:00:00+08:00</updated><id>https://linotes.netlify.com/database/mysql_security</id><content type="html" xml:base="https://linotes.netlify.com/database/mysql_security/">&lt;h2 id=&quot;一般安全问题&quot;&gt;一般安全问题&lt;/h2&gt;

&lt;p&gt;本节内容主要引自 &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/entering-queries.html&quot;&gt; MySQL 8.0 Reference Manual &lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;mysql-安全准则&quot;&gt;MySQL 安全准则&lt;/h3&gt;

&lt;p&gt;在讨论安全问题时，有必要从全局的角度去考虑对服务器主机整体的保护，而非仅仅针对 MySQL 服务端。各种可能的攻击包括：窃取、修改、回放、拒绝服务攻击。&lt;/p&gt;

&lt;p&gt;MySQL 使用基于 ACL 的安全防护，针对所有的连接、查询及其它可能的操作。也支持 MySQL 客户端与服务端使用 SSL 加密连接。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;永远不要授权任何人访问 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 数据库中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表，除 MySQL 的 root 帐户。&lt;/li&gt;
  &lt;li&gt;要了解 MySQL 访问权限系统的工作原理。使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;REVOKE&lt;/code&gt; 语句来控制访问，不要给予不必要的权限，不要为所有主机授权，而应有针对性地对某些主机授权。
    &lt;ul&gt;
      &lt;li&gt;如果使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql -u root&lt;/code&gt; 能够无需密码就成功连接到服务端，则任何人都可以成为超级用户。因此要为 root 设置密码。&lt;/li&gt;
      &lt;li&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SHOW GRANTS&lt;/code&gt; 语句可以检查哪些帐户有哪些访问权限，可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;REVOKE&lt;/code&gt; 语句移除不必要的权限。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;不要在数据库中保存明文密码，而应该使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SHA2()&lt;/code&gt; 或其它单向的哈希函数生成哈希值。&lt;/li&gt;
  &lt;li&gt;不要从字典里选择密码。&lt;/li&gt;
  &lt;li&gt;使用防火墙。
    &lt;ul&gt;
      &lt;li&gt;尝试从互联网扫描服务器的端口，可以使用类似 &lt;code class=&quot;highlighter-rouge&quot;&gt;nmap&lt;/code&gt; 的工具。MySQL 默认使用 3306 端口，非信任的主机应该无法访问该端口。或者用 &lt;code class=&quot;highlighter-rouge&quot;&gt;telnet server_host 3306&lt;/code&gt; 测试，如果 telnet 被挂起或被拒绝，则说明端口是封死的；如果连接上了，并且看到一些垃圾字符，说明端口是开放的。则应该在防火墙中将其关闭。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;访问 MySQL 的应用程序必须不信任由用户直接输入的任何数据，而应该使用适当的防御编程技术来写入。&lt;/li&gt;
  &lt;li&gt;不要在互联网上传输明文数据，而应使用 SSL 或 SSH 等加密协议。MySQL 支持内部 SSL 连接。另一种技术是使用 SSH 的端口转发来创建一个加密的通道来通信。&lt;/li&gt;
  &lt;li&gt;建议使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;strings&lt;/code&gt; 工具。多数情况下可以检查 MySQL 的数据流是否未加密：&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tcpdump &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; eth0 &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; - src or dst port 3306 | strings
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;保持密码的安全&quot;&gt;保持密码的安全&lt;/h3&gt;

&lt;h4 id=&quot;终端用户密码安全规范&quot;&gt;终端用户密码安全规范&lt;/h4&gt;

&lt;p&gt;MySQL 的用户应遵守以下准则来保证密码的安全：&lt;/p&gt;

&lt;p&gt;如果要运行客户端程序来连接到 MySQL 服务端，应该规避有可能被别人看到密码的方法。最安全的方法是让客户端程序提示输入密码，或把密码保存在一个安全的配置文件中。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql_config_editor&lt;/code&gt; 工具，可以把用于身份验证的保密信息保存在一个加密的文件中，文件名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;.mylogin.cnf&lt;/code&gt;。该文件可以被 MySQL 客户端程序读取，以获取身份验证信息，用于连接 MySQL 服务端。&lt;/li&gt;
  &lt;li&gt;在命令行使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-p******&lt;/code&gt; 选项很不安全，在某些系统中，选项中的密码会被 &lt;code class=&quot;highlighter-rouge&quot;&gt;ps&lt;/code&gt; 等程序显示出来。虽然 MySQL 客户端程序会用一堆 0 来覆盖它，但仍是存在该密码可见的时间段。&lt;/li&gt;
  &lt;li&gt;在命令行中使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; 选项，后面不加密码。这种情况，客户端程序就会以交互形式来询问密码，更加安全。&lt;/li&gt;
  &lt;li&gt;把密码保存在一个配置文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;.my.cnf&lt;/code&gt; 中，并为其分配适当权限，然后在命令行使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--default-file=/home/neo/.my.cnf&lt;/code&gt; 选项启动服务端。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;client]
&lt;span class=&quot;nv&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;your_pass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;把密码保存到 &lt;code class=&quot;highlighter-rouge&quot;&gt;MYSQL_PWD&lt;/code&gt; 环境变量中，非常不安全，不建议使用。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;mysql 客户端会把执行的语句记录到一个历史文件中，该文件默认文件名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;.mysql_history&lt;/code&gt;，位于家目录。在 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE USER&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER USER&lt;/code&gt; 语句中都可能有明文的密码，因此要严格限制对该文件的访问权限。&lt;/p&gt;

&lt;p&gt;同样，命令行中执行过的命令也会保存到 bash 的历史文件中，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_history&lt;/code&gt;，同样应该限制对该文件的访问权限。&lt;/p&gt;

&lt;h4 id=&quot;管理员密码安全规范&quot;&gt;管理员密码安全规范&lt;/h4&gt;

&lt;p&gt;MySQL 把用户帐户的密码保存在 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql.user&lt;/code&gt; 表中，非管理员绝不能访问。&lt;/p&gt;

&lt;p&gt;帐户密码会过期，用户必须重置。&lt;/p&gt;

&lt;p&gt;可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;validate_password&lt;/code&gt; 插件来强制实施密码有效策略。&lt;/p&gt;

&lt;p&gt;如果用户有权修改插件目录或 &lt;code class=&quot;highlighter-rouge&quot;&gt;my.cnf&lt;/code&gt; 文件，他就有机会替换掉插件，风险极大。&lt;/p&gt;

&lt;p&gt;日志文件也会保存密码，应控制访问权限。&lt;/p&gt;

&lt;h3 id=&quot;巩固安全抵御攻击&quot;&gt;巩固安全，抵御攻击&lt;/h3&gt;

&lt;h4 id=&quot;保证连接的安全&quot;&gt;保证连接的安全&lt;/h4&gt;

&lt;p&gt;连接到 MySQL 服务端时必须使用密码，不能明文方式传递。所有其它信息都会以明文传递，很可能会被人看到。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果客户端与服务端之间的连接的网络不可信，可以使用压缩协议，增加流量解密的难度。&lt;/li&gt;
  &lt;li&gt;也可以使用 MySQL 内部的 SSL。&lt;/li&gt;
  &lt;li&gt;还可以使用 SSH 获取加密的连接。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;安全规范&quot;&gt;安全规范&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;所有 MySQL 帐号都要有密码。&lt;/li&gt;
  &lt;li&gt;确保对数据目录有读写权限的用户，与运行服务的是同一个用户&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;永远不要以 root 用户运行服务端。&lt;/p&gt;

    &lt;p&gt;极度危险，因为有 &lt;code class=&quot;highlighter-rouge&quot;&gt;FILE&lt;/code&gt; 权限的用户可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt; 身份创建文件，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;~root/.bashrc&lt;/code&gt;。可以创建一个名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 的 Linux 用户专门用于执行 mysqld。在配置文件中可以指定以该用户身份运行服务端。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mysqld]
&lt;span class=&quot;nv&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;不要为非管理员用户分配 &lt;code class=&quot;highlighter-rouge&quot;&gt;FILE&lt;/code&gt; 权限。&lt;/p&gt;

    &lt;p&gt;所有具有该权限的用户都有能力在文件系统的 &lt;strong&gt;任何位置&lt;/strong&gt; 创建文件，使用的是 mysqld 服务的权限。&lt;/p&gt;

    &lt;p&gt;为了让有 &lt;code class=&quot;highlighter-rouge&quot;&gt;FILE&lt;/code&gt; 权限用户其操作更安全一些，由 &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT ... INO OUTFILE&lt;/code&gt; 生成的文件不会覆盖现有的文件，并且任何人都可以修改。&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FILE&lt;/code&gt; 权限也可以用来读取系统中的文件，只要文件对于运行服务端的 Linux 用户是可读的。使用这个权限可以把任何文件导入数据库的表中。如果遭到滥用，完全可以把 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/passwd&lt;/code&gt; 导入数据库，很不安全。&lt;/p&gt;

    &lt;p&gt;可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;secure_file_priv&lt;/code&gt; 系统变量来限制哪些目录中的文件可读、可写。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;不要为非管理员用户分配 &lt;code class=&quot;highlighter-rouge&quot;&gt;PROCESS&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;SUPER&lt;/code&gt; 权限。&lt;code class=&quot;highlighter-rouge&quot;&gt;mysqladmin processlist&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;SHOW PROCESSLIST&lt;/code&gt; 语句的输出会显示当前执行的任何语句的内容，因此有该权限的用户通年地到其它用户执行的语句。&lt;/p&gt;

    &lt;p&gt;mysqld 会一直为拥有该权限的用户保留一个额外的连接，以便 MySQL 的 root 用户可以随时进来查看服务端的活动。&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SUPER&lt;/code&gt; 权限可以用来中断客户端连接，用来修改服务端的运行，控制复制服务器等。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;应该禁止使用到表的符号链接。可以通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;--skip-symbolic-links&lt;/code&gt; 选项加以禁用。尤其以 root 身份运行 mysqld 时，因为任何对数据目录有写权限的用户，都可以删除系统中的任何文件。&lt;/li&gt;
  &lt;li&gt;如果对 DNS 不信任，可以在授权表（grant table）中直接使用 IP 地址。尤其在使用通配符创建授权表条目时，一定要特别谨慎。&lt;/li&gt;
  &lt;li&gt;如果要限制某一帐户的连接数，可以通过设置 &lt;code class=&quot;highlighter-rouge&quot;&gt;max_user_connections&lt;/code&gt; 变量来实现。&lt;/li&gt;
  &lt;li&gt;如果插件目录对服务端是可写的，用户就有机会用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT ... INTO DUMPFILE&lt;/code&gt; 向插件目录中的文件写入可执行代码。可以把 &lt;code class=&quot;highlighter-rouge&quot;&gt;plugin_dir&lt;/code&gt; 设为只读来避免，或者给 &lt;code class=&quot;highlighter-rouge&quot;&gt;--secure-file-priv&lt;/code&gt; 指定一个可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; 安全写入的目录。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;客户端程序安全规范&quot;&gt;客户端程序安全规范&lt;/h3&gt;

&lt;p&gt;访问 MySQL 的程序不应该任何由用户直接输入的数据，因为用户可能会在 Web 表格、URL 或其它程序中输入一些特殊字符或转义字符序列来欺骗系统。当用户输入一些诸如 &lt;code class=&quot;highlighter-rouge&quot;&gt;; DROP DATABASE mysql;&lt;/code&gt; 之类的命令时，要确保客户端程序能保证安全。&lt;/p&gt;

&lt;p&gt;一个容易犯的错误是只保护字符数据。一定要记得，数字数据也需要保护。如果当用户输入 &lt;code class=&quot;highlighter-rouge&quot;&gt;234&lt;/code&gt; 时，程序自动生成一个查询 &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM table WHERE ID=234&lt;/code&gt;，则用户有可能会输入 &lt;code class=&quot;highlighter-rouge&quot;&gt;234 OR 1=1&lt;/code&gt; 以促使程序生成查询 &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM table WHERE ID=234 OR 1=1&lt;/code&gt;。结果就是，服务端会在表中遍历每一行，不仅每一行会暴露，还会让服务端负载极度增加。最简单的防护办法是在数字外使用单引号，&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM table WHERE ID='234'&lt;/code&gt;。如果用户输入了额外的信息，也都会成为字符串的一部分而已。在数字环境下，MySQL 会自动把这样的字符串转换成数字，并删除后面的字符串。&lt;/p&gt;

&lt;h4 id=&quot;规范&quot;&gt;规范&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;启用严格的 SQL 模式，以告知服务端对于接收数据时要更加严格地审查。&lt;/li&gt;
  &lt;li&gt;在网页问卷（form）中尽量使用单引号和双引号。&lt;/li&gt;
  &lt;li&gt;修改动态 URL，向其中添加 &lt;code class=&quot;highlighter-rouge&quot;&gt;%22&lt;/code&gt; （”），&lt;code class=&quot;highlighter-rouge&quot;&gt;%23&lt;/code&gt;（#），&lt;code class=&quot;highlighter-rouge&quot;&gt;%27&lt;/code&gt;（’）&lt;/li&gt;
  &lt;li&gt;修改动态 URL 中的数据类型，从数字改为字符型，以避免这一类的攻击。&lt;/li&gt;
  &lt;li&gt;在数字字段尝试输入字符、空格和特殊字符，客户端应该先把它们清除，然后再传递给 MySQL，或者生成错误消息。把未经检查的数据直接发给 MySQL 是非常危险的！&lt;/li&gt;
  &lt;li&gt;先检查数据的大小，再发给 MySQL&lt;/li&gt;
  &lt;li&gt;用客户端程序连接到数据库时，不要使用管理员帐户。不要给客户端不必要的权限。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;api&quot;&gt;API&lt;/h4&gt;

&lt;p&gt;许多应用程序接口会为数据中的特殊字符提供转义功能，如果使用恰当，可以避免不小心输入非预期的语句：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MySQL C API ：使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql_real_escape_string_quote()&lt;/code&gt; API 调用&lt;/li&gt;
  &lt;li&gt;MySQL++ ：为查询流使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;escape&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;quote&lt;/code&gt; 修饰符&lt;/li&gt;
  &lt;li&gt;PHP ：使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqli&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;pdo_mysql&lt;/code&gt; 扩展，不使用较早的 &lt;code class=&quot;highlighter-rouge&quot;&gt;ext/mysql&lt;/code&gt; 扩展。&lt;/li&gt;
  &lt;li&gt;Perl DBI ：使用占位符或 &lt;code class=&quot;highlighter-rouge&quot;&gt;quote()&lt;/code&gt; 方法&lt;/li&gt;
  &lt;li&gt;Ruby DBI ：使用占位符或 &lt;code class=&quot;highlighter-rouge&quot;&gt;quote()&lt;/code&gt; 方法&lt;/li&gt;
  &lt;li&gt;Java JDBC ：使用一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;preparedStatement&lt;/code&gt; 对象及占位符&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mysql-访问权限系统&quot;&gt;MySQL 访问权限系统&lt;/h2&gt;

&lt;p class=&quot;notice&quot;&gt;MySQL 访问权限系统的主要功能是：对从特定主机连接过来的用户加以验证，将该用户与数据库权限关联到一起。其它的功能包括：允许匿名用户，为特定功能及管理行为授权。&lt;/p&gt;

&lt;p&gt;MySQL 权限系统无法做到：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;无法显式拒绝指定用户的访问。无法显式匹配某个用户，然后拒绝其连接。&lt;/li&gt;
  &lt;li&gt;无法让某个用户有权限在数据库中创建或删除表，同时却无法创建或删除数据库自身。&lt;/li&gt;
  &lt;li&gt;用户的密码是应用于全局的。无法针对数据库、表、程序单独应用密码。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;MySQL 访问权限系统的用户接口由 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE USER&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;REVOKE&lt;/code&gt; 等语句组成。&lt;/p&gt;

&lt;p&gt;服务端内部，会把权限信息保存在 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 数据库的授权表中。MySQL 服务端在启动时会将这些表的内容读入内存，并将访问控制决策基于授权表的内存副本。&lt;/p&gt;

&lt;p&gt;MySQL 访问权限系统会确保所有用户只能进行权限范围内的操作。&lt;/p&gt;

&lt;p&gt;用户连接到 MySQL 服务端时，其身份决定于连接的主机以及使用的用户名。连接以后，当用户发起请求时，系统会根据其身份授予其对应的权限。&lt;/p&gt;

&lt;p&gt;MySQL 的访问控制涉及到两个阶段：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;阶段一&lt;/strong&gt; ：基于用户身份，服务端接受或拒绝连接。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;阶段二&lt;/strong&gt; ：假如连接成功，服务端会检查发来的每条语句，看是否该用户有权执行。&lt;/p&gt;

&lt;h3 id=&quot;mysql-提供的权限&quot;&gt;MySQL 提供的权限&lt;/h3&gt;

&lt;p&gt;授予 MySQL 帐户的权限决定了他可以进行哪些操作。&lt;/p&gt;

&lt;h4 id=&quot;权限应用的范围&quot;&gt;权限应用的范围&lt;/h4&gt;

&lt;p&gt;在不同的上下文中，进行不同级别的操作时，权限都会有所区别：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;有了管理员权限，用户可以管理 MySQL 服务端的运行。这些权限是全局的，不限于特定的数据库。&lt;/li&gt;
  &lt;li&gt;数据库权限适用于某个数据库及其中的所有对象。这些权限可以授予特定的数据库，也可以全局授予，以应用于所有数据库。&lt;/li&gt;
  &lt;li&gt;可以对数据库中特定对象单独授予权限，如对表、索引、视图、保存的程序等对象；也可以对一个数据库中某一类对象授权，如某数据库中的所有的表；还可以为所有数据库的某一类对象授权。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;权限的保存位置&quot;&gt;权限的保存位置&lt;/h4&gt;

&lt;p&gt;关于帐户权限的信息保存在系统数据库 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;db&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;tables_priv&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;colums_priv&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;global_grants&lt;/code&gt; 这些表中。MySQL 服务端启动时，会把这些表的内容读取到内存中，并在权限发生修改时重新读取。访问控制的决策是基于授权表的这些内存副本的。&lt;/p&gt;

&lt;h4 id=&quot;为帐户分配权限&quot;&gt;为帐户分配权限&lt;/h4&gt;

&lt;p&gt;为帐户分配权限时，应该只给他需要的。尤其在分配 &lt;code class=&quot;highlighter-rouge&quot;&gt;FILE&lt;/code&gt; 及管理员权限时。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FILE&lt;/code&gt; 权限若被滥用，能把服务端可读取的本地任何文件导入数据库。&lt;/li&gt;
  &lt;li&gt;有 &lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT OPTION&lt;/code&gt; 权限的用户可以把他们的权限转给其他用户，两个拥有不同权限的用户，如果使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT OPTION&lt;/code&gt; 就可以合并他们的权限。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER&lt;/code&gt; 权限可被用来重命名表，进而破坏权限系统。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SHUTDOWN&lt;/code&gt; 权限的滥用可导致服务端终止运行。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;PROCESS&lt;/code&gt; 权限可被用来查看当前执行的语句的明文，包括语句中的密码。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SUPER&lt;/code&gt; 权限可被用来终止其它会话，或修改服务端运行的方式。&lt;/li&gt;
  &lt;li&gt;如果被授予对 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 数据库的权限，用户就可以修改密码及其它访问权限信息。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;动态权限&quot;&gt;动态权限&lt;/h3&gt;

&lt;p&gt;MySQL 支持静态权限与动态权限。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;静态权限是指服务端内建的权限，这些权限随时可以被授予给用户帐户，无法被注销。&lt;/li&gt;
  &lt;li&gt;动态权限指在运行时定义的权限，既可被注册，也可注销。这会影响它们的可用性。未被注册的动态权限不可用于授权。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;权限是静态还是动态的，会影响当时可为用户授权的具体内容。&lt;/p&gt;

&lt;h4 id=&quot;动态权限的注册与注销&quot;&gt;动态权限的注册与注销&lt;/h4&gt;

&lt;p&gt;服务端会在内存中维护一组注册的权限，服务端关闭时，动态权限会注销。&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;一般来说，一个用来定义动态权限的服务端组件会在安装时注册动态权限。但卸载时，服务端组件却不会注销这些动态权限。&lt;/p&gt;

&lt;p&gt;如果尝试注册一个已经注册了的动态权限，不会有警告和错误消息。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;INSTALL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMPONENT&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'my_component'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;UNINSTALL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMPONENT&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'my_component'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;INSTALL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMPONENT&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'my_component'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;第一条语句会注册该组件定义的动态权限，第二条不会注销，第三条即使发现这些权限已经注册，也不会有警告和错误消息。&lt;/p&gt;

&lt;h4 id=&quot;动态权限的保存&quot;&gt;动态权限的保存&lt;/h4&gt;

&lt;p&gt;动态权限仅应用于全局。服务端会把当前分配的动态权限信息保存到 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql.global_grants&lt;/code&gt; 系统表中的用户帐户中。：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;服务端启动过程中，会自动注册名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;global_grants&lt;/code&gt; 的权限，除非使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;--skip-grant-tables&lt;/code&gt; 选项。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;REVOKE&lt;/code&gt; 语句会修改 &lt;code class=&quot;highlighter-rouge&quot;&gt;global_grants&lt;/code&gt; 表的内容。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;global_grants&lt;/code&gt; 中的动态权限的分配是持久有效的，服务端关闭时不会被清除。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;动态权限的分配及撤消&quot;&gt;动态权限的分配及撤消&lt;/h4&gt;

&lt;p&gt;被授予的动态权限可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SHOW GRANTS&lt;/code&gt; 语句来查看，它们保存在数据库 &lt;code class=&quot;highlighter-rouge&quot;&gt;information_schema&lt;/code&gt; 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;user_privileges&lt;/code&gt; 表中。&lt;/p&gt;

&lt;p&gt;对于全局级别的 &lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;REVOKE&lt;/code&gt; 语句，如果语句中的权限不是静态的，就会检查是否动态的，如果是就授予。否则，发出错误消息。&lt;/p&gt;

&lt;p&gt;而对于 &lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;REVOKE&lt;/code&gt; 来说，&lt;code class=&quot;highlighter-rouge&quot;&gt;ALL [PRIVILIGES]&lt;/code&gt; 这种全局级别的语句包括所有静态全局权限，以及当前注册的动态权限：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;全局级别的 &lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT ALL&lt;/code&gt; 将授予所有静态的全局权限，以及所有当前注册的动态权限。&lt;/li&gt;
  &lt;li&gt;全局级别的 &lt;code class=&quot;highlighter-rouge&quot;&gt;REVOKE ALL&lt;/code&gt; 将撤消所有授予的静态全局权限，以及所有授予的动态权限。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FLUSH PRIVILEGES&lt;/code&gt; 语句用于重新加载权限，它会读取 &lt;code class=&quot;highlighter-rouge&quot;&gt;global_grants&lt;/code&gt; 表，查找其中的动态权限分配，把找到的所有未注册的权限进行注册。&lt;/p&gt;

&lt;h4 id=&quot;从-super-迁移到动态权限&quot;&gt;从 &lt;code class=&quot;highlighter-rouge&quot;&gt;SUPER&lt;/code&gt; 迁移到动态权限&lt;/h4&gt;

&lt;p&gt;MySQL 8.0 中，许多操作在以前既需要 &lt;code class=&quot;highlighter-rouge&quot;&gt;SUPER&lt;/code&gt; 权限，同时也需要在有限范围内使用一个动态权限。这样的每个操作现在只需要把相关的动态权限授予某个帐户即可，不再需要 &lt;code class=&quot;highlighter-rouge&quot;&gt;SUPER&lt;/code&gt; 权限。这个改变提高了安全性，&lt;code class=&quot;highlighter-rouge&quot;&gt;SUPER&lt;/code&gt; 权限将会在今后的版本中取消。&lt;/p&gt;

&lt;p&gt;因此，从前使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SUPER&lt;/code&gt; 权限的帐户，需要迁移到适当的动态权限，以便为 &lt;code class=&quot;highlighter-rouge&quot;&gt;SUPER&lt;/code&gt; 权限的取消做好准备：&lt;/p&gt;

&lt;p&gt;执行以下查询，找出被授予 &lt;code class=&quot;highlighter-rouge&quot;&gt;SUPER&lt;/code&gt; 权限的帐户：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GRANTEE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INFORMATION_SCHEMA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;USER_PRIVILEGES&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PRIVILEGE_TYPE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'SUPER'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;针对找到的帐户，确定他是因为哪些操作才需要的 &lt;code class=&quot;highlighter-rouge&quot;&gt;SUPER&lt;/code&gt;，然后把对应的动态权限授予给他，撤消 &lt;code class=&quot;highlighter-rouge&quot;&gt;SUPER&lt;/code&gt; 权限：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BINLOG_ADMIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SYSTEM_VARIABLES_ADMIN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'u1'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;REVOKE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SUPER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'u1'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;授权表&quot;&gt;授权表&lt;/h3&gt;

&lt;p&gt;系统数据库 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 包含几个授权表，保存的是用户帐户及其权限的信息。&lt;/p&gt;

&lt;p&gt;要想操作授权表中的内容，可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE USER&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;REVOKE&lt;/code&gt; 这样的帐户管理语句来设置帐户，控制每个帐户的权限。&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;不建议使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;UPDATE&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE&lt;/code&gt; 这样的语句来直接修改授权表，服务端会直接忽视这样的修改。服务端会检查针对授权表所做的更改，一理发现结构错误就会报错。此时需要用 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql_upgrade&lt;/code&gt; 来为该表更新结构。&lt;/p&gt;

&lt;h4 id=&quot;授权表常见内容&quot;&gt;授权表常见内容&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 数据库中的表包含以下授权信息：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; ：用户帐户，全局权限，其它&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;global_grants&lt;/code&gt; ：分配给用户的动态全局权限&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;db&lt;/code&gt; ：数据库级的权限&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tables_priv&lt;/code&gt; ：表级的权限&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;colums_priv&lt;/code&gt; ：列级的权限&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;procs_priv&lt;/code&gt; ：保存的流程及功能权限&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;proxies_priv&lt;/code&gt; ：代理用户权限&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;default_roles&lt;/code&gt; ：默认用户权限&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;role_edges&lt;/code&gt; ：Edges for role subgraphs&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;password_history&lt;/code&gt; ：密码的修改&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;MySQL 8.0 中，授权表使用 InnoDB 存储引擎，并是事务性的。在这之前，授权表使用 MyISAM 存储引擎，是非事务性的。这个改变带来了帐户管理语句其行为的改变，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE USER&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT&lt;/code&gt;。之前，一条帐户管理语句中可以使用多个用户，结果可能是部分用户成功执行，部分失败。而现在，每条语句都是事务性的，要么所有用户执行成功，要么所有用户失败，回滚，语句不产生任何影响。&lt;/p&gt;

&lt;p&gt;每个授权表都包含作用域字段和权限字段。&lt;/p&gt;

&lt;h4 id=&quot;服务端以如下方式使用授权表&quot;&gt;服务端以如下方式使用授权表&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表的作用域字段决定了是拒绝还是允许传入的连接。对于允许的连接，&lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表中所有授予的权限都是该用户的全局权限，对服务端所有数据库有效。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;global_grants&lt;/code&gt; 表保存着当前为用户帐号所分配的动态权限。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;db&lt;/code&gt; 表的作用域字段决定了哪些用户可以访问哪些主机上的哪些数据库。权限字段决定了允许的操作。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tables_priv&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;columns_priv&lt;/code&gt; 表与 &lt;code class=&quot;highlighter-rouge&quot;&gt;db&lt;/code&gt; 表类似，但更加细化：它们作用于表和字段级别，而不是数据库级别。表级别的权限作用于该表及其所有字段，而字段级别的权限则仅作用于特定的字段。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;procs_priv&lt;/code&gt; 表作用于保存的例程。该级别的权限仅作用于某个例程或函数。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;proxies_priv&lt;/code&gt; 表决定了哪些用户可以作为他人的代理，以及用户是否可以为别人授予 &lt;code class=&quot;highlighter-rouge&quot;&gt;PROXY&lt;/code&gt; 权限。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;default_roles&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;role_edges&lt;/code&gt; 表包含关于角色关系的信息。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;password_history&lt;/code&gt; 表保存了之前使用过的密码，以限制重用。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;如何指定帐户&quot;&gt;如何指定帐户&lt;/h3&gt;

&lt;p&gt;MySQL 的帐户名由 &lt;strong&gt;用户名&lt;/strong&gt; 和 &lt;strong&gt;主机名&lt;/strong&gt; 组成。&lt;/p&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE USER&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;SET PASSWORD&lt;/code&gt; 语句时，帐户名要遵循以下规则：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;帐户名的语法为 &lt;code class=&quot;highlighter-rouge&quot;&gt;'user_name'@'host_name'&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;如果帐户名只包含用户名，则等同于 &lt;code class=&quot;highlighter-rouge&quot;&gt;'user_name'@'%'&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;如果用户名不包含特殊字符，允许不加单引号&lt;/li&gt;
  &lt;li&gt;引用用户名和主机时可以用单引号、双引号或反引号&lt;/li&gt;
  &lt;li&gt;用户名和主机名必须分别括起来&lt;/li&gt;
  &lt;li&gt;引用函数 &lt;code class=&quot;highlighter-rouge&quot;&gt;CURRENT_USER&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;CURRENT_USER()&lt;/code&gt; 等同于指定当前客户端用户名和主机名&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;帐户的保存&quot;&gt;帐户的保存&lt;/h4&gt;

&lt;p&gt;MySQL 在系统数据库 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 中的授权表中保存帐户名，用户名和主机名会分别用单独字段保存：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;每个帐户在 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表中都有一条记录。&lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; 字段保存用户名，&lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt; 字段保存主机名。该表同时还体现了该帐户拥有的全局权限。&lt;/li&gt;
  &lt;li&gt;其它的授权表体现了帐户对于数据库及其对象的权限。这些表也有 &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt; 字段，与 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表相对应。&lt;/li&gt;
  &lt;li&gt;用户名是大小写敏感的，主机名不是。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;帐户和主机名的形式&quot;&gt;帐户和主机名的形式&lt;/h4&gt;

&lt;p&gt;用户名可以为非空，用于匹配传入连接请求的用户名；也可以为空，用于匹配任何用户名。如果帐户中的用户名为空则分区表为匿名用户，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;''@'localhost'&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;主机名可以用多种形式，也可用通配符：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;主机名可以用主机名或 IP 地址表示。&lt;code class=&quot;highlighter-rouge&quot;&gt;'localhost'&lt;/code&gt; 表示本地主机。&lt;code class=&quot;highlighter-rouge&quot;&gt;'127.0.0.1'&lt;/code&gt; 表示 IPv4 环回地址，&lt;code class=&quot;highlighter-rouge&quot;&gt;'::1'&lt;/code&gt; 表示 IPv6 环回地址。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; 是通配符，可以用来表示主机名和 IP 地址。&lt;code class=&quot;highlighter-rouge&quot;&gt;'%'&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;'%.mysql.com'&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;'198.55.100.%'&lt;/code&gt;。如果通配符出现在 IP 地址中，则它只能匹配 IP 地址，而不能匹配字符，因此 &lt;code class=&quot;highlighter-rouge&quot;&gt;'1.2.example.com'&lt;/code&gt; 不会得逞。&lt;/li&gt;
  &lt;li&gt;当用 IPv4 地址表示主机时，可以指定掩码，用斜线分隔 IP 地址与掩码。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;USER&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'david'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'198.51.100.0/255.255.255.0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该语句的作用是允许 &lt;code class=&quot;highlighter-rouge&quot;&gt;david&lt;/code&gt; 可以从子网 198.51.100.0 中的任何主机连接进来。&lt;/p&gt;

&lt;h3 id=&quot;角色名的指定&quot;&gt;角色名的指定&lt;/h3&gt;

&lt;p&gt;MySQL 中用角色来分区表 &lt;strong&gt;一组权限&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;角色的语法与帐户名类似，不同之处在于：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;角色名中的用户名不能为空。因此没有匿名角色这一说。&lt;/li&gt;
  &lt;li&gt;主机部分可以省略，用 &lt;code class=&quot;highlighter-rouge&quot;&gt;'%'&lt;/code&gt; 表示，但没有通配符属性，不能代表任何主机。&lt;/li&gt;
  &lt;li&gt;主机不支持掩码&lt;/li&gt;
  &lt;li&gt;帐户名在某些上下文环境中可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;CURRENT_USER()&lt;/code&gt; 表示，但角色名不能&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql.user&lt;/code&gt; 系统表中的每一行记录，可以既作为帐户，也可以作为角色。通配符只能用于在帐户中进行匹配，而无法应用于角色。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROLE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'myrole'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'%'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该语句不可能匹配角色名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;myrole&lt;/code&gt; 的所有角色，它只能匹配一个角色，名字就叫 &lt;code class=&quot;highlighter-rouge&quot;&gt;'myrole'@'%'&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;基于这个原因，指定角色名时通常只有用户名，而把主机名部分用 &lt;code class=&quot;highlighter-rouge&quot;&gt;'%'&lt;/code&gt; 表示。&lt;/p&gt;

&lt;p&gt;但是，主机名部分不用 &lt;code class=&quot;highlighter-rouge&quot;&gt;'%'&lt;/code&gt;，而使用真正的主机名，这样做其实更有用，尤其想要创建一个名字，既当作角色用，又当作帐户名用。&lt;/p&gt;

&lt;h3 id=&quot;访问控制&quot;&gt;访问控制&lt;/h3&gt;

&lt;h4 id=&quot;第一阶段连接的验证&quot;&gt;第一阶段：连接的验证&lt;/h4&gt;

&lt;p&gt;用户想要连接到 MySQL 服务端时，服务端会基于以下条件来接受或拒绝连接：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;用户的 &lt;strong&gt;身份&lt;/strong&gt;，提供正确密码以验证该身份&lt;/li&gt;
  &lt;li&gt;该帐户 &lt;strong&gt;是否被锁&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;服务端先检查密码，再检查是否锁定。哪一步失败都会导致服务端拒绝访问。如成功则接受连接，进入第二阶段，等待请求。&lt;/p&gt;

&lt;h5 id=&quot;身份验证&quot;&gt;身份验证&lt;/h5&gt;

&lt;p&gt;密码的检查是使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表中的三个作用域字段 &lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt;、’authentication_string’。&lt;/p&gt;

&lt;p&gt;‘authentication_string’ 字段可以为空，意味着用户连接时不能指定密码。如果服务端用插件来验证客户端，则验证方法不一定使用 ‘authentication_string’ 字段做为密码，这种情况下，有可能使用外部密码来验证。&lt;/p&gt;

&lt;p&gt;如果 ‘authentication_string’ 字段非空，则分区表加密过的密码。安全起见，MySQL 不会以明文保存密码的。同时，用户连接时输入的密码也是加密的，借助帐户验证插件的密码哈希方法。在连接的过程中，验证密码时使用的都是加过密的密码。&lt;/p&gt;

&lt;p&gt;从 MySQL 的角度来看，加过密的密码才是真正的密码，因此不要把访问权给任何人。&lt;/p&gt;

&lt;h5 id=&quot;锁定状态&quot;&gt;锁定状态&lt;/h5&gt;

&lt;p&gt;锁定状态记录于 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;account_locked&lt;/code&gt; 字段。&lt;/p&gt;

&lt;h5 id=&quot;接受连接的条件&quot;&gt;接受连接的条件&lt;/h5&gt;

&lt;p&gt;服务端接受连接的条件：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表中找到了匹配的记录&lt;/li&gt;
  &lt;li&gt;用户输入的密码与该条记录中的密码匹配&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;account_locked&lt;/code&gt; 字段的值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;服务端如何匹配用户身份&quot;&gt;服务端如何匹配用户身份&lt;/h5&gt;

&lt;p&gt;对于传入的连接，&lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表中是有可能找到多个匹配记录的，此时，服务端必须确定要使用哪些记录：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;服务端每次把 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表加载到内存时，都会 &lt;strong&gt;先排序&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;客户端要连接时，服务端会按排序后的顺序 &lt;strong&gt;逐行匹配&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;服务端只使用匹配到的 &lt;strong&gt;第一条&lt;/strong&gt; 记录&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;服务端排序的规则&quot;&gt;服务端排序的规则&lt;/h6&gt;

&lt;p&gt;先按 &lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt; 字段排序，最明确的指定排在前面，最不明确的指定排在后面：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;主机名和 IP 地址形式的指定是最明确的，它们一定排在前面&lt;/li&gt;
  &lt;li&gt;通配符 &lt;code class=&quot;highlighter-rouge&quot;&gt;'%'&lt;/code&gt; 代表任何主机，是最不明确的，一定排在后面。&lt;/li&gt;
  &lt;li&gt;空字符串 &lt;code class=&quot;highlighter-rouge&quot;&gt;''&lt;/code&gt; 虽然也代表任何主机，要排在最后。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;再按 &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; 字段排序，最明确的指定排在前面：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;非空用户名排在前面&lt;/li&gt;
  &lt;li&gt;空的用户名排在最后&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对于 &lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; 字段的值都很明确的，排序是不确定的。&lt;/p&gt;

&lt;h5 id=&quot;查看当前用户帐户&quot;&gt;查看当前用户帐户&lt;/h5&gt;

&lt;p&gt;鉴于以上所述，很有可能用户虽然成功连接进来，但其身份并不是其预想的那个，这会导致权限分配也并非预期。因此，有必要确认一下服务端使用的哪个身份验证的自己。使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;CURRENT_USER()&lt;/code&gt; 函数：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CURRENT_USER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;----------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CURRENT_USER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;----------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;----------------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;第二阶段请求的验证&quot;&gt;第二阶段：请求的验证&lt;/h4&gt;

&lt;p&gt;建立连接之后，服务端就进入第二阶段的访问控制。&lt;/p&gt;

&lt;p&gt;针对用户在该连接发起的每个 &lt;strong&gt;请求&lt;/strong&gt;，服务端会判断用户要进行什么 &lt;strong&gt;操作&lt;/strong&gt;，然后会检查他是否有足够的 &lt;strong&gt;权限&lt;/strong&gt; 来做。此时，授权表中的权限字段就派上用场了。这些权限可以来自 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;db&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;tables_priv&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;columns_priv&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;procs_priv&lt;/code&gt; 表中的任何一个。&lt;/p&gt;

&lt;h5 id=&quot;检索全局权限&quot;&gt;检索全局权限&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表授权的都是全局权限，作用于所有默认数据库。例如，假如 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表授权用户 &lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE&lt;/code&gt; 权限，他就可以删除服务端主机中的任何数据库中的任何表中的任何记录。因此该权限只应该授予数据库管理员。对于其他用户来说，其在 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表中的所有权限都应该设置为 &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt;，然后只为其授予更加具体的权限。&lt;/p&gt;

&lt;h5 id=&quot;检索数据库特定权限及主机权限&quot;&gt;检索数据库特定权限及主机权限&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;db&lt;/code&gt; 表用于授权特定数据库的权限，作用域字段的值可以有以下形式：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;若 &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; 字段为空，则匹配匿名用户，非空则按实际匹配，不能使用通配符。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;Db&lt;/code&gt; 字段可以使用通配符。&lt;/li&gt;
  &lt;li&gt;若 &lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt; 为 &lt;code class=&quot;highlighter-rouge&quot;&gt;'%'&lt;/code&gt; 或空，代表任何主机。&lt;/li&gt;
  &lt;li&gt;若 &lt;code class=&quot;highlighter-rouge&quot;&gt;Db&lt;/code&gt; 为 &lt;code class=&quot;highlighter-rouge&quot;&gt;'%'&lt;/code&gt; 或空，代表任何数据库。&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;notice&quot;&gt;服务端在读取 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表时，同时也会把 &lt;code class=&quot;highlighter-rouge&quot;&gt;db&lt;/code&gt; 表加载到内存并排序。为 &lt;code class=&quot;highlighter-rouge&quot;&gt;db&lt;/code&gt; 排序时是基于 &lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;Db&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; 作用域字段的，与用户表的排序方法相同，最明确的指定在先，最不明确的指定在最后，使用第一条匹配记录。&lt;/p&gt;

&lt;h5 id=&quot;检索表字段例程的特定权限&quot;&gt;检索表、字段、例程的特定权限&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tables_priv&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;columns_priv&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;procs_priv&lt;/code&gt; 这几个表用于授予特定表、特定字段、特定例程的权限。作用域字段的值可接受以下形式：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt; 字段可用通配符&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt; 字段若为 &lt;code class=&quot;highlighter-rouge&quot;&gt;'%'&lt;/code&gt; 或空值，代表任何主机&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Db&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;Table_name&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;Column_name&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;Routine_name&lt;/code&gt; 字段不能使用通配符，不能为空&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;服务端基于 &lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;Db&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; 字段为这三个表排序，但更简单，因为只有 &lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt; 字段可用通配符。&lt;/p&gt;

&lt;p&gt;服务端使用经排序的表来验证收到的每个请求。&lt;/p&gt;

&lt;h5 id=&quot;服务端检索的顺序&quot;&gt;服务端检索的顺序&lt;/h5&gt;

&lt;p&gt;对于需要 &lt;strong&gt;管理员权限&lt;/strong&gt; 的请求，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;SHUTDOWN&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;RELOAD&lt;/code&gt; 等，服务端会 &lt;strong&gt;只检查 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表&lt;/strong&gt; 的记录，因为它是用来指定管理员权限的唯一的表格。如果匹配的记录允许请求的操作，则服务端会允许该访问，否则拒绝。&lt;/p&gt;

&lt;p&gt;对于与 &lt;strong&gt;数据库相关的请求&lt;/strong&gt;，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;UPDATE&lt;/code&gt; 等，服务端 &lt;strong&gt;首先检索 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表&lt;/strong&gt;，检查用户的全局权限。如果匹配的记录允许请求的操作，就允许访问；如果权限不够，服务端会 &lt;strong&gt;进一步检索 &lt;code class=&quot;highlighter-rouge&quot;&gt;db&lt;/code&gt; 表&lt;/strong&gt;，看用户是否有该数据库的专属权限。&lt;/p&gt;

&lt;p&gt;服务端检索 &lt;code class=&quot;highlighter-rouge&quot;&gt;db&lt;/code&gt; 表，尝试匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;Db&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; 字段。&lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; 字段分别用于匹配当前连接的用户主机及 MySQL 用户名。&lt;code class=&quot;highlighter-rouge&quot;&gt;Db&lt;/code&gt; 字段用于匹配用户希望访问的数据库。如果找不到匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; 的记录，访问被拒绝。&lt;/p&gt;

&lt;p&gt;通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;db&lt;/code&gt; 表的匹配记录确定了对指定数据库的权限之后，服务端会把这些权限添加到 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表授予的全局权限中。如果验证的结果允许请求的操作，则允许访问，否则拒绝。否则，在检索完  &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表，以及 &lt;code class=&quot;highlighter-rouge&quot;&gt;tables_priv&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;columns_priv&lt;/code&gt; 表中的权限以后，服务端会把检索到的权限统统添加到用户的权限中，并基于该结果来决定允许还是拒绝。&lt;/p&gt;

&lt;p&gt;如果一开始就发现 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表中的权限不满足当前请求的操作符，为什么还是要把这些权限加到数据库、表、权限字段中呢？是因为一个请求可能需要一个或多个类型的权限，有可能 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表中有一个权限，&lt;code class=&quot;highlighter-rouge&quot;&gt;db&lt;/code&gt; 表中有另一个权限，两个加在一起才满足请求的操作权限。&lt;/p&gt;

&lt;p&gt;对于保存的例程操作，服务端使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;procs_priv&lt;/code&gt; 表，而不会使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;tables_priv&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;columns_priv&lt;/code&gt;。&lt;/p&gt;

&lt;h5 id=&quot;小结&quot;&gt;小结&lt;/h5&gt;

&lt;p&gt;用户权限究竟是如何计算的，可以用布尔值的形式来描述一下：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;privileges&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;privileges&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;privileges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;privileges&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;column&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;privileges&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;routine&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;privileges&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;权限的修改何时生效&quot;&gt;权限的修改何时生效&lt;/h3&gt;

&lt;p&gt;mysqld 启动时，会把所有 &lt;strong&gt;授权表&lt;/strong&gt; 中的内容加载到内存中，此时起，这些表格对于访问控制是有效的。&lt;/p&gt;

&lt;p&gt;如果用 &lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;REVOKE&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;SET PASSWORD&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;RENAME USER&lt;/code&gt; 等帐户管理语句，对授权表进行了间接的修改，服务端发现这些改动时，会立即 &lt;strong&gt;重新加载&lt;/strong&gt; 这些改动。&lt;/p&gt;

&lt;p&gt;如果用 &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;UPDATE&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE&lt;/code&gt; 等语句直接地修改了授权表，这些改动必须重启服务或手动重新加载才能生效。&lt;/p&gt;

&lt;p&gt;要想手动加载授权表，进行一次 &lt;strong&gt;权限冲洗&lt;/strong&gt; 的操作，可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;FLUSH PRIVILEGES&lt;/code&gt; 语句，或 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqladmin flush-privileges&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;mysqladmin reload&lt;/code&gt; 命令来实现。&lt;/p&gt;

&lt;p&gt;权限冲洗会对当前已连接的客户端产生如下影响：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;表和字段权限的改变会从客户端下一个请求生效&lt;/li&gt;
  &lt;li&gt;数据库特定权限的修改会在客户端下次执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;USE db_name&lt;/code&gt; 语句时生效&lt;/li&gt;
  &lt;li&gt;对于已连接的客户端来说，全局权限和密码不受影响，这些改变只能在下次连接生效。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;注：客户端程序有可能会缓存数据库的名字，因此要想让对数据库特定权限的修改生效，可以先修改当前数据库，再切换回来。&lt;/p&gt;

&lt;p&gt;如果服务端启动时使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;--skip-grant-tables&lt;/code&gt; 选项，它就不会读取授权表，也不会进行访问控制。这样的话，任何连接上来可以做任何事，非常不安全。&lt;/p&gt;

&lt;h3 id=&quot;连接排错&quot;&gt;连接排错&lt;/h3&gt;

&lt;p&gt;如果连接 MySQL 服务端时遇到问题，可参照如下解决办法：&lt;/p&gt;

&lt;h5 id=&quot;确认服务是运行着的&quot;&gt;确认服务是运行着的&lt;/h5&gt;

&lt;p&gt;如果服务没有运行，当然连接不上。&lt;/p&gt;

&lt;p&gt;错误消息通常为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mysql
ERROR 2003: Can't connect to MySQL server on 'host_name' (111)
$ mysql
ERROR 2002: Can't connect to local MySQL server through socket
'/tmp/mysql.sock' (111)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;确认端口正确&quot;&gt;确认端口正确&lt;/h5&gt;

&lt;p&gt;如果用户使用的端口并不是服务端所侦听的，也会无法连接。&lt;/p&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--port&lt;/code&gt; 来指定端口，&lt;code class=&quot;highlighter-rouge&quot;&gt;--socket&lt;/code&gt; 来指定命名通道或套接字文件。&lt;/p&gt;

&lt;h5 id=&quot;服务端是否配置为忽略网络连接&quot;&gt;服务端是否配置为忽略网络连接&lt;/h5&gt;

&lt;p&gt;启动时使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--skip-networking&lt;/code&gt;，服务端会不接受任何 TCP/IP 连接；&lt;/p&gt;

&lt;p&gt;启动时使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--bind-address=127.0.0.1&lt;/code&gt;，则只会在环回接口侦听本地发起的连接，不会接受外部的任何连接。&lt;/p&gt;

&lt;h5 id=&quot;检查防火墙设置&quot;&gt;检查防火墙设置&lt;/h5&gt;

&lt;p&gt;确认防火墙没有拦截对 MySQL 的访问。MySQL 的通信端口默认为 3306.&lt;/p&gt;

&lt;h5 id=&quot;授权表是否配置正确&quot;&gt;授权表是否配置正确&lt;/h5&gt;

&lt;p&gt;授权表必须正确地配置，才能保证服务端用它来进行访问控制。&lt;/p&gt;

&lt;p&gt;在某些发行版中，安装进程会初始化 MySQL 的数据目录，包括含有授权表的 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 数据库。如果安装过程没有做这一步，就需要用户手动进行。要想确认是否需要初始化授权表，可以查看数据目录中的 mysql 目录，确保在 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 目录中有一个名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;user.MYD&lt;/code&gt; 的文件，如果没有，就初始化数据目录，然后再启动服务端。&lt;/p&gt;

&lt;h5 id=&quot;版本更新&quot;&gt;版本更新&lt;/h5&gt;

&lt;p&gt;在现有版本 MySQL 进行过一次更新之后，授权表有时会因为某些新功能而发生结构上的变化，因此必须运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql_upgrade&lt;/code&gt; 脚本来更新。&lt;/p&gt;

&lt;h5 id=&quot;检查客户端默认环境&quot;&gt;检查客户端默认环境&lt;/h5&gt;

&lt;p&gt;客户端程序会使用配置文件或环境变量来做为连接的参数。如果你发现明明在命令行中没有指定任何参数，却在连接时发送了错误的默认参数，应该检查一下配置文件和环境变量。&lt;/p&gt;

&lt;p&gt;可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--no-defaults&lt;/code&gt; 选项来绕过配置文件进行连接测试。&lt;/p&gt;

&lt;h5 id=&quot;访问被拒绝&quot;&gt;访问被拒绝&lt;/h5&gt;

&lt;p&gt;连接时，在返回的 &lt;code class=&quot;highlighter-rouge&quot;&gt;Access denied&lt;/code&gt; 错误消息中，说明了你尝试以哪个身份去连接的，从哪个主机去连接的，以及是否使用了密码。可以根据这些信息来分析具体原因。&lt;/p&gt;

&lt;h6 id=&quot;密码不正确&quot;&gt;密码不正确：&lt;/h6&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Access denied for user 'root'@'localhost' (using password: YES)&lt;/code&gt;&lt;/p&gt;

&lt;h6 id=&quot;没输入密码&quot;&gt;没输入密码：&lt;/h6&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;using password: NO&lt;/code&gt;&lt;/p&gt;

&lt;h6 id=&quot;指定的数据库无法访问&quot;&gt;指定的数据库无法访问&lt;/h6&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql -u database&lt;/code&gt; 启动时，如果被拒绝访问，有可能是&lt;/p&gt;

&lt;h6 id=&quot;服务端无法解析客户端主机名&quot;&gt;服务端无法解析客户端主机名&lt;/h6&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mysqladmin -u root -pxxxx -h some_hostname ver
Access denied for user 'root'@'' (using password: YES)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果错误信息如上，返回的主机部分是空的，或者是 IP 地址，表明服务端无法把客户端的 IP 地址解析成主机名。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Access denied for user ''@'unknown'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这个更惨，帐户名为空，表明 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表中没有这个帐户；主机名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;unknown&lt;/code&gt; 表明无法解析客户端主机名。&lt;/p&gt;

&lt;p&gt;这些错误都是由于 DNS 解析错误导致的，因此可以有如下解决办法：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysqladmin flush-hosts&lt;/code&gt; 重置 DNS 缓存&lt;/li&gt;
  &lt;li&gt;检查 DNS 服务器的设置&lt;/li&gt;
  &lt;li&gt;在 MySQL 授权表中使用 IP 地址，而不用主机名&lt;/li&gt;
  &lt;li&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; 加入客户端主机名条目&lt;/li&gt;
  &lt;li&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--skip-name-resolve&lt;/code&gt; 选项启动 mysqld&lt;/li&gt;
  &lt;li&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--skip-host-cache&lt;/code&gt; 选项启动 mysqld&lt;/li&gt;
  &lt;li&gt;如果客户端与服务端在同一主机，连接到 &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;用户不存在&quot;&gt;用户不存在&lt;/h5&gt;

&lt;p&gt;如果返回的错误消息为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host ... is not allowed to connect to this MySQL server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;意味着在 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 表中没有匹配客户端主机的记录。&lt;/p&gt;

&lt;p&gt;解决：新建一个帐户名与该主机名的组合。&lt;/p&gt;

&lt;p&gt;还有一个可能的原因是，客户端与服务端 MySQL 编译时所用的 &lt;code class=&quot;highlighter-rouge&quot;&gt;glibc&lt;/code&gt; 版本不同。&lt;/p&gt;

&lt;p&gt;解决：更新操作系统或 &lt;code class=&quot;highlighter-rouge&quot;&gt;glibc&lt;/code&gt;，或下载 MySQL 的 SRPM 重新编译。&lt;/p&gt;

&lt;h5 id=&quot;没有足够权限&quot;&gt;没有足够权限&lt;/h5&gt;

&lt;p&gt;如果连接以后，使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT ... INTO OUTFILE&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;LOAD DATA INFILE&lt;/code&gt; 语句时返回 &lt;code class=&quot;highlighter-rouge&quot;&gt;Access denied&lt;/code&gt; 消息，表明该用户没有 &lt;code class=&quot;highlighter-rouge&quot;&gt;FILE&lt;/code&gt; 权限。&lt;/p&gt;

&lt;h5 id=&quot;使用调试模式&quot;&gt;使用调试模式&lt;/h5&gt;

&lt;p&gt;如果始终无法定位错误，可以启用调试选项，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;--debug=d,general,guery&lt;/code&gt;。这样，连接时，系统会打印出主机和用户信息，以及键入的每个命令的信息。&lt;/p&gt;

&lt;p&gt;….&lt;/p&gt;</content><author><name>Hawk Zhang</name><email>imhawkz@gmail.com</email></author><category term="mysql" /><category term="安全" /></entry><entry><title type="html">MySQL 入门</title><link href="https://linotes.netlify.com/database/mysql_intro/" rel="alternate" type="text/html" title="MySQL 入门" /><published>2016-03-01T00:00:00+08:00</published><updated>2016-03-01T00:00:00+08:00</updated><id>https://linotes.netlify.com/database/mysql_intro</id><content type="html" xml:base="https://linotes.netlify.com/database/mysql_intro/">&lt;h2 id=&quot;mysql-简介&quot;&gt;MySQL 简介&lt;/h2&gt;

&lt;p&gt;本节内容主要引自 &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/&quot;&gt; MySQL 8.0 Reference Manual &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MySQL 是一款开源的关系数据库管理系统（RDBMS），最早由瑞典公司 MySQL AB 拥有，现在归 Oracle 所有。对于专有使用，有几个付费版本可用，并提供额外的功能。&lt;/p&gt;

&lt;p&gt;MySQL 是开源网页应用软件栈 LAMP 的中心组件。MySQL 常被用于许多大型网站。&lt;/p&gt;

&lt;p&gt;MySQL 是用 C 和 C++ 语言编写的，可工作于许多系统平台。&lt;/p&gt;

&lt;p&gt;当前仍在支持的版本为 5.5、5.6、5.7，最新版本为 8.0。&lt;/p&gt;

&lt;h3 id=&quot;mysql-特点&quot;&gt;MySQL 特点&lt;/h3&gt;

&lt;p&gt;MySQL 提供两个版本：开源社区服务器版和企业专用服务器版。&lt;/p&gt;

&lt;p&gt;企业版含有一系列专用的扩展，以服务器插件的形式安装。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;为多种编程语言提供了 API，包括 C、Java、PHP、Python、Ruby 等&lt;/li&gt;
  &lt;li&gt;支持多线程，充分利用 CPU 资源，支持多用户&lt;/li&gt;
  &lt;li&gt;优化的 SQL 查询算法，有效地提高查询速度&lt;/li&gt;
  &lt;li&gt;既能够作为一个单独的应用程序在客户端服务器网络环境中运行，也能够作为一个程序库而嵌入到其他的软件中&lt;/li&gt;
  &lt;li&gt;提供 TCP/IP、ODBC 和 JDBC 等多种数据库连接途径&lt;/li&gt;
  &lt;li&gt;提供用于管理、检查、优化数据库操作的管理工具&lt;/li&gt;
  &lt;li&gt;可以处理拥有上千万条记录的大型数据库&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;应用&quot;&gt;应用&lt;/h3&gt;

&lt;p&gt;与其他的大型数据库例如 Oracle、IBM DB2、MS SQL 等相比，MySQL 自有它的不足之处，如规模小、功能有限等，但是这丝毫也没有减少它受欢迎的程度。对于一般的个人用户和中小型企业来说，MySQL 提供的功能已经绰绰有余，而且由于 MySQL 是开放源代码软件，因此可以大大降低总体拥有成本。&lt;/p&gt;

&lt;p&gt;2010 年以前互联网上流行的网站构架方式是 LAMP（Linux Apache MySQL PHP），即使用 Linux 作为操作系统，Apache 作为 Web 服务器，MySQL 作为数据库，PHP（部分网站也使用 Perl 或 Python）作为服务器端脚本解释器。由于这四个软件都是开放源代码软件，因此使用这种方式可以以较低的成本创建起一个稳定、免费的网站系统。&lt;/p&gt;

&lt;p&gt;MySQL + PHP 的搭配在互联网上的应用相比 LAMP 来说更为常见，并获得了 “动态配对”（Dynamic Duo）的雅号，大部分 Blog 网站基于的 WordPress 系统即基于此。除了 LAMP 之外，用于 Solaris、Windows 和 Mac 上的网站构架也分别被称为 SAMP、WAMP 和 MAMP。&lt;/p&gt;

&lt;h3 id=&quot;mysql-管理&quot;&gt;MySQL 管理&lt;/h3&gt;

&lt;p&gt;可以使用命令行工具管理 MySQL 数据库（命令为 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqladmin&lt;/code&gt;），也可以从 MySQL 的网站下载图形管理工具 MySQL Workbench。&lt;/p&gt;

&lt;p&gt;Navicat 导航猫 for MySQL 是一套专为 MySQL 设计的强大数据库管理及开发工具。它可以用于任何版本的 MySQL 数据库，并支持大部分 MySQL 的功能，包括触发器、索引、查看等。&lt;/p&gt;

&lt;p&gt;phpMyAdmin 是由 PHP 写成的 MySQL 数据库系统管理程序，让管理者可用 Web 接口管理 MySQL 数据库。借由此 Web 接口可以成为一个简易方式输入繁杂SQL语法的较佳途径，尤其要处理大量数据的导入及导出更为方便。其中一个更大的优势在于由于 phpMyAdmin 跟其他 PHP 程序一样在网页服务器上运行，但是您可以在任何地方使用这些程序产生的 HTML 页面，即远程管理你的 MySQL 数据库。使用 phpMyAdmin 可以方便的创建、修改、删除数据库及数据表。&lt;/p&gt;

&lt;p&gt;phpMyBackupPro 也是由 PHP 写成的，可以通过 Web 接口创建和管理数据库。它可以创建伪 cronjobs，可以自动在某个时间或周期性备份 MySQL 数据库。&lt;/p&gt;

&lt;h3 id=&quot;连接方式&quot;&gt;连接方式&lt;/h3&gt;

&lt;p&gt;应用程序可通过 ODBC 或 ADO 方式，经由使用 MyODBC 与 MySQL 数据库连接。&lt;/p&gt;

&lt;p&gt;MS.Net Framework 下的程序（例如：C#、VB.NET）可通过 ADO.NET 的方式，经由使用 MySQL.Net 与 MySQL 数据库连接。&lt;/p&gt;

&lt;p&gt;C/C++ 可使用 MySQL++ 或是直接使用 MySQL 内置 API 与 MySQL 数据库连接。&lt;/p&gt;

&lt;p&gt;PHP 可通过 PHP 的 MySQLi 与 MySQL 数据库连接，具备比 MySQL 模块更好的性能。另外 PHP6 可使用 mysqlnd 与 MySQL 数据库连接。&lt;/p&gt;

&lt;p&gt;JAVA 程序可通过 JDBC 方式与 MySQL 进行连接，MySQL 官方提供了 JDBC 驱动程序。&lt;/p&gt;

&lt;p&gt;可通过 MySQL 客户端软件与 MySQL 进行连接，如 mysqlfront、mysqlyog、mysqlbrowser 等。&lt;/p&gt;

&lt;p&gt;javascript 可以通过使用 fibjs 的内置 mysql 模块与 MySQL 数据库连接。&lt;/p&gt;

&lt;h3 id=&quot;派生版本&quot;&gt;派生版本&lt;/h3&gt;

&lt;p&gt;派生版本有 Drizzle、MariaDB、Percona Server 及 OurDelta 等。&lt;/p&gt;

&lt;h2 id=&quot;mysql-的安装&quot;&gt;MySQL 的安装&lt;/h2&gt;

&lt;h3 id=&quot;选择版本&quot;&gt;选择版本&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mysql.com/support/supportedplatforms/database.html&quot;&gt;在 MySQL 官网查询各平台可用版本。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;首先要考虑是安装二进制文件还是源代码，其次要考虑是安装开发版本还是一般可用版本（GA，General Availability）。开发版会有些新的功能，但不推荐实际生产使用。GA 版本也称生产版，或稳定版，是为生产准备的。因此推荐安装最新的 GA 版本。&lt;/p&gt;

&lt;h4 id=&quot;版本命名&quot;&gt;版本命名&lt;/h4&gt;

&lt;p&gt;版本 8.0 的命名规则为三个数字加上一个可选的后缀，如 mysql-8.0.1-dmr。&lt;/p&gt;

&lt;p&gt;三位数字含义：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;8&lt;/code&gt; ：主版本号&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; ：次版本号。主+次版本号组合在一起即发行序列版本号，该版本号决定了其稳定的功能组成。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; : 序列版本号内的版本号，每次小更新会加 1，多数情况下，某序列版本的最新版本是比较好的选择。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;后缀：&lt;/p&gt;

&lt;p&gt;后缀为可选，用于表示该版本的稳定级别。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dmr&lt;/code&gt; ： Development Milestone Release，DMR 里程碑版本。MySQL 开发时使用一种里程碑模型，每个里程碑会带来一小组经测试的新功能。从一个里程碑到下一个，功能接口可能会发生改变，甚至可能被删除，均基于社区成员的测试反馈。里程碑版本中的功能可以看作前生产水平。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rc&lt;/code&gt; ： Release Candidate，RC。候选发布版，最终测试版本。该版本比较稳定，通过了所有 MySQL 内部测试。RC 版本中仍有可能加入新功能，但其精力主要集中在修复之前版本功能的 bug。&lt;/li&gt;
  &lt;li&gt;无后缀 ： General Availability，GA。最终稳定版。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;文件格式&quot;&gt;文件格式&lt;/h4&gt;

&lt;p&gt;多数情况下应该选择二进制版本，如 RPM 软件包。&lt;/p&gt;

&lt;p&gt;其他情况下，有可能会需要从源代码版本来安装：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;需要把 MySQL 安装到特殊位置&lt;/li&gt;
  &lt;li&gt;需要为 mysqld 配置一些在标准二进制软件包中没有的功能，常用的有：
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-DWITH_LIBWRAP=1&lt;/code&gt; 支持 TCP 包裹&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-DWITH_ZLIB={system|bundled}&lt;/code&gt; 安装基于压缩的功能&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-DWITH_DEBUG=1&lt;/code&gt; 支持调试&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;需要配置 mysqld 时去掉某些功能&lt;/li&gt;
  &lt;li&gt;需要阅读或修改 MySQL 的源文件&lt;/li&gt;
  &lt;li&gt;源代码版本包含更多的测试和范例&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mysql-文件分布&quot;&gt;MySQL 文件分布&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;目录&lt;/th&gt;
      &lt;th&gt;内容&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;mysqld 服务器，客户端，及工具软件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docs&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;说明文档，info 格式&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;man&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;man pages&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;include&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;头文件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lib&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;运行库&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;share&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;错误消息，词典，数据库安装的 SQL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;support-files&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;其它支持文件&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;安装-mysql&quot;&gt;安装 MySQL&lt;/h3&gt;

&lt;p&gt;安装&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo yum install mysql-community-server&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;启动&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo systemctl start mysqld.service&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;mysql-server-初始化&quot;&gt;MySQL Server 初始化&lt;/h4&gt;

&lt;p&gt;在服务初始化启动时，会发生以下事件：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;服务器初始化&lt;/li&gt;
  &lt;li&gt;生成 SSL 证书与密钥文件&lt;/li&gt;
  &lt;li&gt;安装并启用密码验证插件&lt;/li&gt;
  &lt;li&gt;创建超级用户 &lt;code class=&quot;highlighter-rouge&quot;&gt;root'，用 &lt;/code&gt;sudo grep ‘temporary password’ /var/log/mysqld.log` 查询其初始密码&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;安装后要第一时间修改超级用户的密码：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
mysql&amp;gt; ALTER USER &lt;span class=&quot;s1&quot;&gt;'root'&lt;/span&gt;@&lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt; IDENTIFIED BY &lt;span class=&quot;s1&quot;&gt;'MyNewPass4!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;MySQL 的密码验证插件是默认安装的，它会要求密码至少有一个大写字母、一个小写字母、一位数字、一个特殊符号，至少 8 位。&lt;/p&gt;

&lt;h2 id=&quot;mysql-的简单操作&quot;&gt;MySQL 的简单操作&lt;/h2&gt;

&lt;h3 id=&quot;连接到-mysql-服务器&quot;&gt;连接到 MySQL 服务器&lt;/h3&gt;

&lt;p&gt;要想连接到服务器，通常需要 MySQL 用户名和密码，如果要连接到其它主机，还需要主机名。&lt;/p&gt;

&lt;h4 id=&quot;连接到远程主机&quot;&gt;连接到远程主机&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; host &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; user &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
Enter password:
Welcome to the MySQL monitor.  Commands end with &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; or &lt;span class=&quot;se&quot;&gt;\g&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Your MySQL connection &lt;span class=&quot;nb&quot;&gt;id &lt;/span&gt;is 25338 to server version: 8.0.13-standard

Type &lt;span class=&quot;s1&quot;&gt;'help;'&lt;/span&gt; or &lt;span class=&quot;s1&quot;&gt;'\h'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;help. Type &lt;span class=&quot;s1&quot;&gt;'\c'&lt;/span&gt; to clear the buffer.

mysql&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;连接到本机&quot;&gt;连接到本机&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; user &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;匿名访问&quot;&gt;匿名访问&lt;/h4&gt;

&lt;p&gt;如果本地主机开启了匿名 MySQL 访问，则无需用户名和密码，直接 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 就能进入。&lt;/p&gt;

&lt;h4 id=&quot;退出&quot;&gt;退出&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;QUIT&lt;/code&gt;  注意，该命令后面不需要分号结束。&lt;/p&gt;

&lt;h3 id=&quot;查询&quot;&gt;查询&lt;/h3&gt;

&lt;p&gt;连接到服务器以后，可以进行数据库的查询。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CURRENT_DATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-----------+--------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CURRENT_DATE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-----------+--------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m17&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-----------+--------------+&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;02&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;查询要点&quot;&gt;查询要点&lt;/h4&gt;

&lt;p&gt;查询语句及关键字 &lt;strong&gt;不分大小写&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;可以在一行键入多个查询语句，中间用分号分隔，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&amp;gt; SELECT VERSION(); SELECT NOW();&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;命令太长可以直接回车在下一行继续输入，如果中途要取消输入，可以键入 &lt;code class=&quot;highlighter-rouge&quot;&gt;\c&lt;/code&gt;。&lt;/p&gt;

&lt;h4 id=&quot;查询结果&quot;&gt;查询结果&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;查询通常由 SQL 语句加上 &lt;strong&gt;分号&lt;/strong&gt; 组成&lt;/li&gt;
  &lt;li&gt;查询时，mysql 将语句发送给服务器执行，回显结果，返回提示符&lt;/li&gt;
  &lt;li&gt;mysql 以 &lt;strong&gt;表格的形式&lt;/strong&gt; 显示查询结果&lt;/li&gt;
  &lt;li&gt;查询结果的最后会告知返回了 &lt;strong&gt;多少行&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;提示符&quot;&gt;提示符&lt;/h4&gt;

&lt;p&gt;不同情况下会显示不同的提示符：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;提示符&lt;/th&gt;
      &lt;th&gt;含义&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;就绪，可以查询&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;多行输入状态，等待下一行&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;'&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;等待下一行，等待一个单引号开头的字符串的结束&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;等待下一行，等待一个双引号开头的字符串的结束&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;`&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;等待下一行，等待一个反引号开头的描述符的结束&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/*&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;等待下一行，等待一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;/*&lt;/code&gt; 开头的注释的结束&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;如果命令行的结尾不是分号，通常就会进入多行输入状态：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;此时如果你确认已经完成了语句的输入，直接键入分号，回车即可。&lt;/p&gt;

&lt;p&gt;至于 &lt;code class=&quot;highlighter-rouge&quot;&gt;'&amp;gt;&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&amp;gt;&lt;/code&gt; 提示符，主要发生在收集字符串期间，即 MySQL 在等待用户完成一个字符串的键入。在 MySQL 中，你可以用单引号或双引号把字符串引用起来，而且允许长字符串跨越多行。当看到 &lt;code class=&quot;highlighter-rouge&quot;&gt;'&amp;gt;&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&amp;gt;&lt;/code&gt; 提示符时，说明你已经键入了一行以单引号或双引号开头的字符串，但还没有结束引用，只有结束了引用才算完成了字符串的键入。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_table&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Smith AND age &amp;lt; 30;
    '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;第二行的提示符变成了 &lt;code class=&quot;highlighter-rouge&quot;&gt;'&amp;gt;&lt;/code&gt;，你才发现忘记给 &lt;code class=&quot;highlighter-rouge&quot;&gt;Smith&lt;/code&gt; 结束引号了。此时，能做的只有键入 &lt;code class=&quot;highlighter-rouge&quot;&gt;\c&lt;/code&gt; 来取消输入，回到正常提示符再重新输入。&lt;/p&gt;

&lt;h3 id=&quot;创建和使用数据库&quot;&gt;创建和使用数据库&lt;/h3&gt;

&lt;h4 id=&quot;查看当前数据库&quot;&gt;查看当前数据库&lt;/h4&gt;

&lt;p&gt;通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;SHOW DATABASE&lt;/code&gt; 命令来查看当前数据库列表。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DATABASES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;--------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Database&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;--------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;              &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;performance_schema&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;                &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;--------------------+&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;04&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该命令只能显示当前数据库用户有权访问的数据库。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 数据库用于描述用户访问权限。&lt;/p&gt;

&lt;h4 id=&quot;创建选择数据库&quot;&gt;创建、选择数据库&lt;/h4&gt;

&lt;h5 id=&quot;创建数据库&quot;&gt;创建数据库&lt;/h5&gt;

&lt;p&gt;创建数据库的命令为 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;数据库名字是大小写敏感的，要注意。同样，表格名称也是大小写敏感。&lt;/p&gt;

&lt;p&gt;无论怎样，建议始终保持有规律的大小写命名规则。&lt;/p&gt;

&lt;h5 id=&quot;使用数据库&quot;&gt;使用数据库&lt;/h5&gt;

&lt;p&gt;每次开始一个 mqsql 会话时，在使用数据库之前，必须要先选择它，使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;USE&lt;/code&gt; 命令：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;Database&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;changed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;USE&lt;/code&gt; 命令在行尾也不需要分号。但你非要加也没问题。而且该命令必须 &lt;strong&gt;单独在一行执行&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;另一种选择数据库的方法是在调用 mysql 时就选择：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Enter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;创建表格&quot;&gt;创建表格&lt;/h4&gt;

&lt;h5 id=&quot;查看表格列表&quot;&gt;查看表格列表&lt;/h5&gt;

&lt;p&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SHOW TABLES&lt;/code&gt; 命令查看当前数据库表格列表&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TABLES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;创建表格-1&quot;&gt;创建表格&lt;/h5&gt;

&lt;p&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE TABLE&lt;/code&gt; 命令创建表格。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artist&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;comment&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;为了确认表格创建成功，可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;DESCRIBE&lt;/code&gt; 命令来查看表格的结构：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESCRIBE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;----------+-------------+------+-----+---------+-------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Type&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Default&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Extra&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;----------+-------------+------+-----+---------+-------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YES&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artist&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YES&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;year&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YES&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YES&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;comment&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YES&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;----------+-------------+------+-----+---------+-------+&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;为表格填充数据&quot;&gt;为表格填充数据&lt;/h4&gt;

&lt;p&gt;表格创建以后，要想填充数据，可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;LOAD DATA&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt; 命令来完成。&lt;/p&gt;

&lt;h5 id=&quot;用-load-data-导入文件&quot;&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;LOAD DATA&lt;/code&gt; 导入文件&lt;/h5&gt;

&lt;p&gt;要想批量导入较多数据，可以事先编辑一个纯文本文件，每一行是一个记录，每个字段用 tab 分隔。&lt;/p&gt;

&lt;p&gt;如果该条记录中某字段为空，可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;\N&lt;/code&gt; 表示，即 NULL 空值。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;love 1990	LuoDaYou	1994-7-8	\N
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;导入时用以下方式：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LOAD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATA&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LOCAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INFILE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/path/albums.txt'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果文本文件是在 windows 操作系统中编辑的，其换行符会是 &lt;code class=&quot;highlighter-rouge&quot;&gt;\r\n&lt;/code&gt;，因此上面的语句应换成：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LOAD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATA&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LOCAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INFILE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/path/albums.txt'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LINES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TERMINATED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果是在 MACOSX 中编辑的，则要换成 &lt;code class=&quot;highlighter-rouge&quot;&gt;LINES TERMINATED BY '\r'&lt;/code&gt;。&lt;/p&gt;

&lt;h6 id=&quot;load-data-local-的安全隐患&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LOAD DATA LOCAL&lt;/code&gt; 的安全隐患&lt;/h6&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LOAD DATA&lt;/code&gt; 语句可以加载 &lt;strong&gt;服务器本机&lt;/strong&gt; 上的文件，也可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;LOAD DATA LOCAL&lt;/code&gt; 来加载 &lt;strong&gt;客户端主机&lt;/strong&gt; 中的文件。&lt;/p&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;LOAD DATA LOCAL&lt;/code&gt; 会有以下风险：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;从客户端主机向服务端主机 &lt;strong&gt;传送文件&lt;/strong&gt; 是由 MySQL &lt;strong&gt;服务端发起&lt;/strong&gt; 的。理论上讲，可以做到服务器通知客户端程序，让其发送由服务端选择的文件，而非由客户端执行的 &lt;code class=&quot;highlighter-rouge&quot;&gt;LOAD DATA&lt;/code&gt; 语句指定文件名。这样的服务端可以访问客户端主机中，当前用户有权访问的所有文件。实际上，这样的服务器可以设置成对客户端发送的任何语句都回应一个发送文件的请求，不仅仅针对 &lt;code class=&quot;highlighter-rouge&quot;&gt;LOAD DATA LOCAL&lt;/code&gt; 语句。因此，最根本的安全隐患在于，&lt;strong&gt;客户端不要连接到不可信的服务器&lt;/strong&gt;。&lt;/li&gt;
  &lt;li&gt;在网页服务器的环境下，数据库客户端是从网页服务器发起连接的，数据库用户可以通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;LOAD DATA LOCAL&lt;/code&gt; 语句，从网页服务器读取任何该网页服务进程有权读取的文件。在这种环境下，对 MySQL 服务端来说，其 &lt;strong&gt;客户端实际上是网页服务器&lt;/strong&gt;，而不是连接到网页服务器上的某个远程用户。&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;如何启用-load-data-local&quot;&gt;如何启用 &lt;code class=&quot;highlighter-rouge&quot;&gt;LOAD DATA LOCAL&lt;/code&gt;&lt;/h6&gt;

&lt;p&gt;为了防止 &lt;code class=&quot;highlighter-rouge&quot;&gt;LOAD DATA&lt;/code&gt; 造成问题，客户端应避免使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;LOCAL&lt;/code&gt;，并且应避免连接到不可信的服务器。连接时，应使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--ssl-mode=VERIFY_IDENTITY&lt;/code&gt; 选项，并使用对应的 CA 证书，以验证服务器的身份。&lt;/p&gt;

&lt;p&gt;MySQL 的服务端和客户端必须同时启用 &lt;code class=&quot;highlighter-rouge&quot;&gt;LOCAL&lt;/code&gt;，客户端才能使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;LOAD DATA LOCAL&lt;/code&gt; 语句来导入数据，否则会收到如下错误消息：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ERROR 1148 (42000): The used command is not allowed with this MySQL version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;服务端：&lt;/p&gt;

&lt;p&gt;需要在 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/my.cnf&lt;/code&gt; 配置文件中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;[mysqld]&lt;/code&gt; 区段设置 &lt;code class=&quot;highlighter-rouge&quot;&gt;local-infile=1&lt;/code&gt;，以便启用服务端的 &lt;code class=&quot;highlighter-rouge&quot;&gt;LOCAL&lt;/code&gt; 功能。&lt;/p&gt;

&lt;p&gt;客户端：&lt;/p&gt;

&lt;p&gt;在调用 mysql 时要加上 &lt;code class=&quot;highlighter-rouge&quot;&gt;--local-infile&lt;/code&gt; 参数：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql &lt;span class=&quot;nt&quot;&gt;--local-infile&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;或者，在 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/my.cnf&lt;/code&gt; 配置文件中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;[mysql]&lt;/code&gt; 区段设置 &lt;code class=&quot;highlighter-rouge&quot;&gt;local-infile=1&lt;/code&gt;，启用客户端的 &lt;code class=&quot;highlighter-rouge&quot;&gt;LOCAL&lt;/code&gt; 功能。&lt;/p&gt;

&lt;h5 id=&quot;用-insert-语句添加记录&quot;&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt; 语句添加记录&lt;/h5&gt;

&lt;p&gt;如果要每次增加一条记录，可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt; 语句。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'the Wall'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Pink Floyd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1978-01-01'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'rock'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;字符串和日期都被 &lt;strong&gt;引用&lt;/strong&gt;，可以为无值的字段 &lt;strong&gt;直接插入 NULL&lt;/strong&gt;，无需像编辑文本时用 \N。&lt;/p&gt;

&lt;h4 id=&quot;从表格中检索信息&quot;&gt;从表格中检索信息&lt;/h4&gt;

&lt;p&gt;通常使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; 语句从表格中检索信息。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;what&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conditions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;what&lt;/code&gt; 可以是要检索的列，或用 &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 表示所有列&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;table&lt;/code&gt; 要检索哪个表格&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; 是可选的，如果有，则用 &lt;code class=&quot;highlighter-rouge&quot;&gt;conditions&lt;/code&gt; 来指定检索记录必须满足的条件&lt;/p&gt;

&lt;h5 id=&quot;选择所有数据&quot;&gt;选择所有数据&lt;/h5&gt;

&lt;p&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; 语句 &lt;strong&gt;查看&lt;/strong&gt; 表格 &lt;strong&gt;所有记录&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果要 &lt;strong&gt;删除&lt;/strong&gt; 表格的 &lt;strong&gt;所有记录&lt;/strong&gt;：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;修改某条记录&lt;/strong&gt;：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'the wall'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'wall'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;选择特定行&quot;&gt;选择特定行&lt;/h5&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'the wall'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;过滤条件中的字符串通常是大小写不敏感的。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1980-1-1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以用组合条件来过滤：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'the wall'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Pink Floyd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Pink Floyd'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Cui Jian'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;选择特定列&quot;&gt;选择特定列&lt;/h5&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;要想让重复的行只显示一次，可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;DISTINCT&lt;/code&gt; 参数：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DISTINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;与 &lt;strong&gt;条件过滤&lt;/strong&gt; 配合使用：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artist&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1999-9-9'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;为行排序&quot;&gt;为行排序&lt;/h5&gt;

&lt;p&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;ORDER BY&lt;/code&gt; 子句来为检索的行排序：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artist&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;默认为升序排列，如需降序排列可以在后面加上 &lt;code class=&quot;highlighter-rouge&quot;&gt;DESC&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artist&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;计算日期&quot;&gt;计算日期&lt;/h5&gt;

&lt;p&gt;现有表格 &lt;code class=&quot;highlighter-rouge&quot;&gt;pet&lt;/code&gt;，记录宠物的基本信息，字段为：&lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;owner&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;species&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;sex&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;birth&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;death&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;MySQL 提供了几种计算日期的函数。如 &lt;code class=&quot;highlighter-rouge&quot;&gt;TIMESTAMPDIFF&lt;/code&gt; 函数可以用两个日期来计算它们之间的年数。&lt;/p&gt;

&lt;p&gt;如表格中有宠物名、生日，则可以用该函数来计算每个宠物的年龄：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TIMESTAMPDIFF(YEAR,birth,CURDATE())&lt;/code&gt; 表示计算 &lt;code class=&quot;highlighter-rouge&quot;&gt;birth&lt;/code&gt; 与 &lt;code class=&quot;highlighter-rouge&quot;&gt;CURDATE()&lt;/code&gt; 这两个日期差了几年。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CURDATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TIMESTAMPDIFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;YEAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;birth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CURDATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;----------+------------+------------+------+&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birth&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CURDATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;----------+------------+------------+------+&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Chirpy&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1998&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;09&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2003&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Puffball&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1999&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2003&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Whistler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1997&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;09&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2003&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Slim&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1996&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;29&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2003&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Claws&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1994&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2003&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fluffy&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1993&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;04&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2003&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fang&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1990&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2003&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bowser&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1989&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2003&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Buffy&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1989&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2003&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;----------+------------+------------+------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;其中 CURDATE() 为当前日期，age 为计算出来的年龄。这两列都是由 &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; 语句生成的，不在表格中。&lt;/p&gt;

&lt;p&gt;下例为从宠物统计表格中为死去的宠物计算寿命：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;death&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TIMESTAMPDIFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;YEAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;birth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;death&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;death&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;--------+------------+------------+------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birth&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;death&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;--------+------------+------------+------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bowser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1989&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1995&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;29&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;--------+------------+------------+------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;因为 NULL 是一个特殊的值，它不能用 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;gt;&lt;/code&gt; 操作符来比较。&lt;/p&gt;

&lt;p&gt;检索哪个宠物下月过生日：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birth&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MONTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;birth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-------+------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birth&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-------+------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Buffy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1989&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-------+------------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MONTH(birth) = 5&lt;/code&gt; 表示 &lt;code class=&quot;highlighter-rouge&quot;&gt;birth&lt;/code&gt; 日期中的月份为 5。&lt;/p&gt;

&lt;h5 id=&quot;空值的使用&quot;&gt;空值的使用&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; 做为空值使用。&lt;/p&gt;

&lt;p&gt;要测试某字段是否空值，只可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;IS NULL&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;IS NOT NULL&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;不能使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;gt;&lt;/code&gt; 这些算术比较符来测试 &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;，因为任何算术比较符与 &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; 比较之后的结果仍是 &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;在 MySQL 中，&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; 代表逻辑假，任何其它的都代表逻辑真。布尔操作的真默认用 &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; 来表示。&lt;/p&gt;

&lt;p&gt;事实上，空字符并不等于 &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-----------+---------------+------------+----------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-----------+---------------+------------+----------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;             &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;          &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;              &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-----------+---------------+------------+----------------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;模式匹配&quot;&gt;模式匹配&lt;/h5&gt;

&lt;p&gt;MySQL 使用标准的 SQL 模式匹配，基于扩展正则表达式。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; 匹配任何单个字符&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt; 匹配任意数量的字符，包括 0 个字符。&lt;/p&gt;

&lt;p&gt;模式匹配中，默认是大小写不敏感的。&lt;/p&gt;

&lt;p&gt;匹配的操作符是 &lt;code class=&quot;highlighter-rouge&quot;&gt;LIKE&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;NOT LIKE&lt;/code&gt;，而不是习惯中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;gt;&lt;/code&gt;。&lt;/p&gt;

&lt;h6 id=&quot;通配符&quot;&gt;通配符&lt;/h6&gt;

&lt;p&gt;以 &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt; 开头的名字：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM pet WHERE name LIKE 'b%';&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;以 &lt;code class=&quot;highlighter-rouge&quot;&gt;fy&lt;/code&gt; 结尾的名字：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM pet WHERE name LIKE '%fy';&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;包含 &lt;code class=&quot;highlighter-rouge&quot;&gt;w&lt;/code&gt; 的名字：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM pet WHERE name LIKE '%w%';&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;五个字符的名字：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM pet WHERE name LIKE '_____';&lt;/code&gt;&lt;/p&gt;

&lt;h6 id=&quot;扩展正则表达式&quot;&gt;扩展正则表达式&lt;/h6&gt;

&lt;p&gt;通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;REGEXP_LIE()&lt;/code&gt; 函数来匹配正则表达式。&lt;/p&gt;

&lt;p&gt;匹配行中的名字以 &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt; 开头：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REGEXP_LIKE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'^b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果需要在匹配时 &lt;strong&gt;大小写敏感&lt;/strong&gt;，可以加上 &lt;code class=&quot;highlighter-rouge&quot;&gt;c&lt;/code&gt; 这个匹配控制字符：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REGEXP_LIKE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'^b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'c'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;匹配行中的名字以 &lt;code class=&quot;highlighter-rouge&quot;&gt;fy&lt;/code&gt; 结尾：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REGEXP_LIKE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'fy$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;匹配行中的名字中包含 &lt;code class=&quot;highlighter-rouge&quot;&gt;w&lt;/code&gt; ：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REGEXP_LIKE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;匹配行中的名字为 5 个字符：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REGEXP_LIKE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'^.{5}$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;统计行数&quot;&gt;统计行数&lt;/h5&gt;

&lt;h6 id=&quot;显示所有字段&quot;&gt;显示所有字段&lt;/h6&gt;

&lt;p&gt;统计行数时，要显示表格所有字段，则 &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; 后面不指定字段名。统计表格所有行数：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;显示特定字段&quot;&gt;显示特定字段&lt;/h6&gt;

&lt;p&gt;统计行数时，要想显示指定的字段，则必须在 &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; 语句后指明要显示的字段，同时，还要用该字段来排序，即 &lt;code class=&quot;highlighter-rouge&quot;&gt;GROUP BY&lt;/code&gt; 相同的字段。这样才能正常显示。&lt;/p&gt;

&lt;p&gt;为检索的信息统计行数：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;--------+----------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;owner&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;--------+----------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Benny&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Diane&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Gwen&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Harold&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;--------+----------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'dog'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cat'&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------+------+----------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------+------+----------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dog&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dog&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------+------+----------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;使用多个表格&quot;&gt;使用多个表格&lt;/h5&gt;

&lt;h6 id=&quot;连接两个不同的表格&quot;&gt;连接两个不同的表格&lt;/h6&gt;

&lt;p&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;pet&lt;/code&gt; 表格基础上，再增加一个表格 &lt;code class=&quot;highlighter-rouge&quot;&gt;event&lt;/code&gt;，保存宠物的一些经历，如看病记录、生崽记录等。字段为 &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;remakr&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;假设现在你想了解这些宠物在哪些年龄段会生育，&lt;code class=&quot;highlighter-rouge&quot;&gt;event&lt;/code&gt; 表格中有生育的记录，但没有年龄。没关系，我们可以根据生育记录中的日期来计算当时的年龄，因此又需要 &lt;code class=&quot;highlighter-rouge&quot;&gt;pet&lt;/code&gt; 表格。这意味着这个查询同时需要两张表格的数据：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TIMESTAMPDIFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;YEAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;birth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remark&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'litter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;--------+------+-----------------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remark&lt;/span&gt;                      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;--------+------+-----------------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fluffy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kittens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;female&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;male&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Buffy&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;puppies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;female&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;male&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Buffy&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;puppies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;female&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;--------+------+-----------------------------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;从该查询我们可以学习到：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FROM&lt;/code&gt; 子句会把两张表格连起来，因为需要同时从两张表格中提取数据。&lt;/li&gt;
  &lt;li&gt;要想把两张表格中对应的数据连起来，必须要指定一张表格中的记录要如何匹配另一表格中的记录。因为两张表格共同的字段为 &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt;，因此我们基于 &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; 的值，使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;ON&lt;/code&gt; 子句来匹配两张表中同一名字对应的记录。&lt;/li&gt;
  &lt;li&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;INNER JOIN&lt;/code&gt; 连接两张表。然后通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;ON&lt;/code&gt; 子句来指明，必须在两张表中同时存在该字段的同一个值，该行才被匹配。&lt;/li&gt;
  &lt;li&gt;因为 &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; 在两张表中都有，为了区分不同表的字段，在 &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; 前面用表格名称做前缀 &lt;code class=&quot;highlighter-rouge&quot;&gt;pet.name&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;连接同一个表格&quot;&gt;连接同一个表格&lt;/h6&gt;

&lt;p&gt;不是非要两个不同的表格才能进行连接，有时候甚至可以连接自己。&lt;/p&gt;

&lt;p&gt;如果想要比较同一表格中的不同记录，就可以连接同一表格。&lt;/p&gt;

&lt;p&gt;例如，想要在同一种宠物间匹配一对来生育：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;species&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'f'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'m'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;--------+------+--------+------+---------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;--------+------+--------+------+---------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fluffy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Claws&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Buffy&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fang&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dog&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Buffy&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bowser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dog&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;--------+------+--------+------+---------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;重要一点是要在 &lt;code class=&quot;highlighter-rouge&quot;&gt;FROM&lt;/code&gt; 子句中为表格起两个不同的别名，然后用不同的别名来匹配。&lt;/p&gt;

&lt;h3 id=&quot;查看数据库和表格的信息&quot;&gt;查看数据库和表格的信息&lt;/h3&gt;

&lt;p&gt;查看当前 &lt;strong&gt;在用的数据库&lt;/strong&gt;：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;menagerie&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;------------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果当前没有使用任何数据库，返回结果为 &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;查看在用数据库包含哪些表：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TABLES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tables_in_menagerie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;               &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt;                 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------------------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看表格的结构：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESCRIBE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------+-------------+------+-----+---------+-------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Type&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Default&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Extra&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------+-------------+------+-----+---------+-------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YES&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;owner&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YES&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;species&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YES&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YES&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birth&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YES&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;death&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YES&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------+-------------+------+-----+---------+-------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt; 表示该字段是否被索引&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Default&lt;/code&gt; 表示该字段的默认值&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Extra&lt;/code&gt; 表示该字段的特殊信息。如果建表时使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;AUTO_INCREMENT&lt;/code&gt; 选项，该值将是 &lt;code class=&quot;highlighter-rouge&quot;&gt;auto_increment&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;mysql-批处理模式&quot;&gt;MySQL 批处理模式&lt;/h3&gt;

&lt;p&gt;除了以交互模式运行 MySQL 外，还可以以批处理模式来运行。可以把语句保存到文件中，然后让 mysql 云读取：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &amp;lt; batch-file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;也可以指定一些连接的参数：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; host &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; user &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &amp;lt; batch-file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果希望执行脚本期间即使遇到错误也继续执行，可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--force&lt;/code&gt; 选项。&lt;/p&gt;

&lt;h4 id=&quot;使用脚本的好处&quot;&gt;使用脚本的好处&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;如果需要频繁地进行查询，做成脚本可以省去很多敲命令的时间&lt;/li&gt;
  &lt;li&gt;可以很方便从现有查询中复制，修改成新的查询&lt;/li&gt;
  &lt;li&gt;对于多条语句的查询，发现错误，在脚本里很快就能修改，不用重复敲命令&lt;/li&gt;
  &lt;li&gt;如果查询的输出特别多，在批处理模式中可以借助管道逐页查看，或干脆重定向到文件中&lt;/li&gt;
  &lt;li&gt;脚本便于分享&lt;/li&gt;
  &lt;li&gt;可以用于 &lt;code class=&quot;highlighter-rouge&quot;&gt;cron&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;批处理的选项&quot;&gt;批处理的选项&lt;/h4&gt;

&lt;p&gt;使用批处理模式时，默认其输出会更加简洁，去掉了表格装饰线条。如果希望输出同交互式输出一样，可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql -t&lt;/code&gt; 选项。&lt;/p&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql -v&lt;/code&gt; 来回显每条语句。&lt;/p&gt;

&lt;h4 id=&quot;另一种运行批处理的方法&quot;&gt;另一种运行批处理的方法&lt;/h4&gt;

&lt;p&gt;也可以在 mysql 提示符中，使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt; 命令 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;\.&lt;/code&gt; 来运行脚本：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;与-apache-配合使用-mysql&quot;&gt;与 Apache 配合使用 MySQL&lt;/h3&gt;

&lt;p&gt;有一些程序需要使用 MySQL 数据库来进行用户的验证，或者把日志文件写入 MySQL 表。&lt;/p&gt;

&lt;p&gt;通过修改 Apache 配置文件，我们可以修改其日志的格式，以便更利于被 MySQL 读取。&lt;/p&gt;

&lt;p&gt;可以用以下语句把 Apache 日志文件导入 MySQL：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;LOAD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATA&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INFILE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/local/access_log'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tbl_name&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;FIELDS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TERMINATED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OPTIONALLY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ENCLOSED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot;'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ESCAPED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;当然，提前做好一个空表，把字段与日志文件相对应。&lt;/p&gt;</content><author><name>Hawk Zhang</name><email>imhawkz@gmail.com</email></author><category term="mysql" /></entry><entry><title type="html">MySQL 的备份与恢复</title><link href="https://linotes.netlify.com/database/mysql_backup/" rel="alternate" type="text/html" title="MySQL 的备份与恢复" /><published>2016-03-01T00:00:00+08:00</published><updated>2016-03-01T00:00:00+08:00</updated><id>https://linotes.netlify.com/database/mysql_backup</id><content type="html" xml:base="https://linotes.netlify.com/database/mysql_backup/">&lt;h2 id=&quot;备份与恢复的类型&quot;&gt;备份与恢复的类型&lt;/h2&gt;

&lt;p&gt;本节内容主要引自 &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/&quot;&gt; MySQL 8.0 Reference Manual &lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;物理备份与逻辑备份&quot;&gt;物理备份与逻辑备份&lt;/h3&gt;

&lt;h4 id=&quot;物理备份&quot;&gt;物理备份&lt;/h4&gt;

&lt;p&gt;备份目录或文件的原始副本，数据库的内容就保存在这些文件中。适用于大型的、重要的数据库，发生问题时需要快速恢复。&lt;/p&gt;

&lt;h5 id=&quot;物理备份的特点&quot;&gt;物理备份的特点&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;备份由数据库目录及文件的副本组成。通常是 MySQL 数据目录的完整副本。&lt;/li&gt;
  &lt;li&gt;物理备份的速度比逻辑备份更快，因为备份过程只需复制，不用转换。&lt;/li&gt;
  &lt;li&gt;输出比逻辑备份更简洁&lt;/li&gt;
  &lt;li&gt;备份和恢复的粒度从整个数据目录到独立的文件。&lt;/li&gt;
  &lt;li&gt;除了备份数据库以外，还可以备份相关文件，如日志及配置文件。&lt;/li&gt;
  &lt;li&gt;无法备份 &lt;code class=&quot;highlighter-rouge&quot;&gt;MEMORY&lt;/code&gt; 表中的数据，因为其内容没有保存在磁盘中。&lt;/li&gt;
  &lt;li&gt;便携性不好，其他主机需要有相同或类似的硬件。&lt;/li&gt;
  &lt;li&gt;备份时最好离线，否则服务端需要进行适当的锁定，以便在备份过程中不会修改数据库的内容。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;常用物理备份工具&quot;&gt;常用物理备份工具&lt;/h5&gt;

&lt;p&gt;物理备份的常用工具包括 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqlbackup&lt;/code&gt;，这是 MySQL 企业版的备份工具，用于 &lt;code class=&quot;highlighter-rouge&quot;&gt;InnoDB&lt;/code&gt; 或任何其他表。&lt;/p&gt;

&lt;p&gt;当然还有其它的文件系统级别的命令：如 &lt;code class=&quot;highlighter-rouge&quot;&gt;cp&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;scp&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;tar&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;rsync&lt;/code&gt;，用于 &lt;code class=&quot;highlighter-rouge&quot;&gt;MyISAM&lt;/code&gt; 表。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ndb_restore&lt;/code&gt; 用于恢复 &lt;code class=&quot;highlighter-rouge&quot;&gt;NDB&lt;/code&gt; 表。&lt;/p&gt;

&lt;h4 id=&quot;逻辑备份&quot;&gt;逻辑备份&lt;/h4&gt;

&lt;p&gt;以逻辑数据库结构和内容的方式来表示备份的信息。适用于少量数据，有时需要编辑数据或表格结构，或在其它平台上重建数据。&lt;/p&gt;

&lt;h5 id=&quot;逻辑备份的特点&quot;&gt;逻辑备份的特点&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;通过查询 MySQL 服务端来获取数据库的结构和内容。&lt;/li&gt;
  &lt;li&gt;备份速度比物理备份要慢，因为需要访问数据库并转换为逻辑格式。如果输出需要写到客户端一侧，服务端还要将其发送给备份程序。&lt;/li&gt;
  &lt;li&gt;输出更占空间，尤其是以文本格式保存时。&lt;/li&gt;
  &lt;li&gt;备份和恢复的粒度有：所有数据库、数据库中所有表、某个表，与存储引擎无关。&lt;/li&gt;
  &lt;li&gt;无法备份日志、配置文件及其它相关文件&lt;/li&gt;
  &lt;li&gt;备份以逻辑格式保存，高便携性&lt;/li&gt;
  &lt;li&gt;备份时允许服务端运行，无需离线&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;常用逻辑备份工具&quot;&gt;常用逻辑备份工具&lt;/h5&gt;

&lt;p&gt;常用的逻辑备份工具包括 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqldump&lt;/code&gt; 程序，&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT ... INTO OUTFILE&lt;/code&gt; 语句，它们可用于任何存储引擎，包括 &lt;code class=&quot;highlighter-rouge&quot;&gt;MEMORY&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;逻辑备份的恢复，对于 SQL 格式的备份可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 客户端来处理。&lt;/p&gt;

&lt;p&gt;如果要处理文本文件，可用 &lt;code class=&quot;highlighter-rouge&quot;&gt;LOAD DATA INFILE&lt;/code&gt; 语句，或使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqlimport&lt;/code&gt; 客户端。&lt;/p&gt;

&lt;h3 id=&quot;在线备份与离线备份&quot;&gt;在线备份与离线备份&lt;/h3&gt;

&lt;h4 id=&quot;热备温备冷备&quot;&gt;热备、温备、冷备&lt;/h4&gt;

&lt;p&gt;根据数据库在备份期间的运行状态，常见的备份方式有三种：&lt;/p&gt;

&lt;h5 id=&quot;热备&quot;&gt;热备：&lt;/h5&gt;

&lt;p&gt;数据库运行时进行备份，期间程序可以对数据库进行读、写。&lt;/p&gt;

&lt;p&gt;它比直接复制数据文件要复杂一些：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;备份期间插入和更新的数据必须备份&lt;/li&gt;
  &lt;li&gt;备份期间删除的数据必须排除&lt;/li&gt;
  &lt;li&gt;没有提交的修改必须忽略&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;热备的特点&quot;&gt;热备的特点&lt;/h6&gt;

&lt;p&gt;在线备份时可以从服务端获取数据库的信息，但无法修改数据。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;备份对客户端的打扰较弱，备份期间，客户端可以连接到服务端，并可访问某些数据。&lt;/li&gt;
  &lt;li&gt;必须进行适当的锁定，以防止数据的修改，避免影响备份的完整性。企业版的备份工具会自动锁定。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;温备&quot;&gt;温备：&lt;/h5&gt;

&lt;p&gt;数据库运行时进行备份，期间要限制某些数据库的操作。&lt;/p&gt;

&lt;p&gt;如，备份期间，某些表可能变成只读。&lt;/p&gt;

&lt;h5 id=&quot;冷备&quot;&gt;冷备：&lt;/h5&gt;

&lt;p&gt;数据库停止运行以后进行备份。对于繁忙的应用程序和网站来说，冷备不太现实，更适合温备或热备。&lt;/p&gt;

&lt;h6 id=&quot;冷备的特点&quot;&gt;冷备的特点&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;备份期间，客户端无法访问服务端。因此，冷备经常是在复制从属服务器进行的，它的离线不会影响服务端的可用性。&lt;/li&gt;
  &lt;li&gt;备份的流程更简单，因为不会受到客户端的影响。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;数据的恢复&quot;&gt;数据的恢复&lt;/h4&gt;

&lt;p&gt;热备与冷备的区别，同样体现在数据的恢复操作上。&lt;/p&gt;

&lt;p&gt;不过，在线恢复的操作要比在线备份的操作对客户端影响更大，因为进行数据恢复时，需要更强的锁定。&lt;/p&gt;

&lt;p&gt;备份时，客户端还可以读取一些数据，而在恢复时，还会修改一些数据，因此恢复某些数据期间，客户端对其是无法读取的。&lt;/p&gt;

&lt;h3 id=&quot;本地备份与远程备份&quot;&gt;本地备份与远程备份&lt;/h3&gt;

&lt;p&gt;本地备份是在 MySQL 服务端所在的主机上进行的，而远程备份是发生在其他主机上。备份可以由远程主机发起，甚至可以把输出保存在服务端本地。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysqldump&lt;/code&gt; 可以连接到本地主机或远程服务端。如果是使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt; 语句生成的 SQL 格式的输出，备份可以保存在本地，也可以保存到远程主机；如果使用的是 &lt;code class=&quot;highlighter-rouge&quot;&gt;--tab&lt;/code&gt; 选项生成的纯文本输出，数据文件会保存在服务端主机中。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT ... INTO OUTFILE&lt;/code&gt; 语句可以来自本地或远程客户端，但输出文件会保存在服务端主机。&lt;/li&gt;
  &lt;li&gt;物理备份通常是从服务端本地发起，以便让服务端离线，文件可以复制到远程主机。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;快照备份&quot;&gt;快照备份&lt;/h3&gt;

&lt;p&gt;有些文件系统会使用快照的功能，它会生成特定时间点的整个文件系统的逻辑副本，无需对整个文件系统进行物理复制。&lt;/p&gt;

&lt;p&gt;如，可以使用写时复制（copy-on-write）技术，只有快照之后的改动才需复制。&lt;/p&gt;

&lt;p&gt;MySQL 自身没有快照的功能，需要通过第三方工具来实现，如 Veritas、VLM、ZFS 等。&lt;/p&gt;

&lt;h3 id=&quot;完全备份与增量备份&quot;&gt;完全备份与增量备份&lt;/h3&gt;

&lt;p&gt;完全备份包含了 MySQL 服务端在某个时间点所管理的所有数据，而增量备份所包含的是在两个时间点之间数据所发生的变化。&lt;/p&gt;

&lt;p&gt;MySQL 有多种办法可以进行完全备份，开启服务端二进制日志以后，就可以进行增量备份了，因为服务端需要使用日志来记录数据的变化。&lt;/p&gt;

&lt;h3 id=&quot;完全恢复与时间点恢复&quot;&gt;完全恢复与时间点恢复&lt;/h3&gt;

&lt;p&gt;完全恢复会把所有数据从完全备份中恢复出来，同时会把服务端实例恢复成备份时的状态，如果该状态不够新，则完全恢复之后可以恢复自完整备份以来进行的增量备份, 让便服务器达到最新的状态。&lt;/p&gt;

&lt;p&gt;增量恢复所恢复的数据是在某个时间跨度内发生的改变，也称为时间点恢复，因为它会使服务端恢复为它在某个时间点的状态。时间点恢复是基于二进制日志的，通常是在完整恢复之后进行。&lt;/p&gt;

&lt;h2 id=&quot;数据库的备份方法&quot;&gt;数据库的备份方法&lt;/h2&gt;

&lt;h3 id=&quot;用企业版备份工具进行热备&quot;&gt;用企业版备份工具进行热备&lt;/h3&gt;

&lt;p&gt;企业版备份工具可以进行物理备份，备份对象可以是所有实例、特定数据库、表等。它可进行增量备份、压缩备份。&lt;/p&gt;

&lt;p&gt;物理备份比 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqldump&lt;/code&gt; 这样的逻辑备份更快。复制 InnoDB 表使用的是热备机制，理想情况下，InnoDB 表应代表大部分数据。其它存储引擎的表是使用温备机制。&lt;/p&gt;

&lt;h3 id=&quot;用-mysqldump-进行逻辑备份&quot;&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqldump&lt;/code&gt; 进行逻辑备份&lt;/h3&gt;

&lt;p&gt;应用程序 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqldump&lt;/code&gt; 可以进行备份，它可以备份各种表。&lt;/p&gt;

&lt;p&gt;对于 InnoDB 来说，使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqldump --single-transaction&lt;/code&gt; 可以进行在线备份，而无需锁定表。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysqldump&lt;/code&gt; 可以生成两类输出，取决于是否使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;--tab&lt;/code&gt; 选项。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;不使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--tab&lt;/code&gt; 选项 ：mysqldump 会把 SQL 语句写入标准输出。该输出使用使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE&lt;/code&gt; 语句来备份数据库、表、存储例程等，用 &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt; 语句把数据加载到表中。输出可以保存成一个文件，随后需要时可用 mysql 来重新构建备份的对象。可以通过启用一些选项来定义 SQL 语句，从而选择要备份哪些对象。&lt;/li&gt;
  &lt;li&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--tab&lt;/code&gt; 选项 ：mysqldump 会为每个备份的表格生成 &lt;strong&gt;两个&lt;/strong&gt; 输出文件。
    &lt;ul&gt;
      &lt;li&gt;一个文件名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;tbl_name.txt&lt;/code&gt;，是用 tab 分隔的文本文件，表中的每个记录对应文件中的一行&lt;/li&gt;
      &lt;li&gt;另一个文件名是 &lt;code class=&quot;highlighter-rouge&quot;&gt;tbl_name.sql&lt;/code&gt;，是由服务端使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE TABLE&lt;/code&gt; 语句生成的&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;以-sql-格式备份数据&quot;&gt;以 SQL 格式备份数据&lt;/h4&gt;

&lt;p&gt;mysqldump 默认会把 SQL 语句的输出写到标准输出中，需要时可以重定向到文件：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqldump &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;arguments] &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; file_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;备份所有数据库：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqldump &lt;span class=&quot;nt&quot;&gt;--all-databases&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; dump.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;备份指定数据库：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqldump &lt;span class=&quot;nt&quot;&gt;--databases&lt;/span&gt; db1 db2 db3 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; dump.sql
shell&amp;gt; mysqldump &lt;span class=&quot;nt&quot;&gt;--databases&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; dump.sql
shell&amp;gt; mysqldump &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; dump.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;备份指定表：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqldump &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;t1 t3 t7 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; dump.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt; 为数据库，t1、t2、t3 为表。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--databases&lt;/code&gt; 选项后面跟的所有名字都会当作数据库名字来对待。如果不用该选项，mysqldump 会把其后的第一个名字作为数据库名字，其后的作为表的名字。如果只有一个数据库，可以省略 &lt;code class=&quot;highlighter-rouge&quot;&gt;--databases&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如果使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;--all-databases&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;--databases&lt;/code&gt; 选项，mysqldump 为每个数据库创建备份前，会先使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE DATABASE&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;USE&lt;/code&gt; 语句，以确保在恢复数据时，如果不存在会先创建这些数据库，并将其做为默认数据库，以保证数据恢复的准确。&lt;/p&gt;

&lt;h4 id=&quot;恢复-sql-格式备份&quot;&gt;恢复 SQL 格式备份&lt;/h4&gt;

&lt;p&gt;恢复由 mysqldump 备份的文件时，将其做为 mysql 客户端的输入。&lt;/p&gt;

&lt;h5 id=&quot;自动创建数据库&quot;&gt;自动创建数据库&lt;/h5&gt;

&lt;p&gt;如果备份文件创建时使用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;--all-databases&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;--databases&lt;/code&gt; 选项，它会包含 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE DATABASE&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;USE&lt;/code&gt; 语句，因此恢复时无需指定将其加载到哪个数据库：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysql &amp;lt; dump.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;另一种方法是进入 mysql 之后，用 &lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt; 命令来导入：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sql&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;手动创建数据库&quot;&gt;手动创建数据库&lt;/h5&gt;

&lt;p&gt;如果备份文件是单一数据库的备份，而且备份时没有使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE DATABASE&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;USE&lt;/code&gt; 语句，恢复时则需要先手动创建数据库：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqladmin create db1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后加载备份文件时，指定数据库：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysql db1 &amp;lt; dump.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;另一种方法，进入 mysql 之后，创建数据库，设为默认数据库，导入备份文件：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sql&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;备份为分隔文本格式&quot;&gt;备份为分隔文本格式&lt;/h4&gt;

&lt;p&gt;调用 mysqldump 时，如果使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--tab=dir_name&lt;/code&gt; 选项，它会把 dir_name 做为输出目录，然后把表格备份到该目录中，每个表格输出 &lt;code class=&quot;highlighter-rouge&quot;&gt;.sql&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;.txt&lt;/code&gt; 两个文件。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqldump &lt;span class=&quot;nt&quot;&gt;--tab&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/tmp db1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;数据库 &lt;code class=&quot;highlighter-rouge&quot;&gt;db1&lt;/code&gt; 的内容将会备份到 &lt;code class=&quot;highlighter-rouge&quot;&gt;/tmp&lt;/code&gt; 目录中。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.txt&lt;/code&gt; 文件包含表数据，是由服务端写入的，因此其所有者为运行服务端的系统帐户。&lt;/p&gt;

&lt;p&gt;服务端使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT ... INTO OUTFILE&lt;/code&gt; 语句来写入该文件，因此，恢复时必须有 &lt;code class=&quot;highlighter-rouge&quot;&gt;FILE&lt;/code&gt; 权限才能进行此操作。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.sql&lt;/code&gt; 文件的所有者是备份时执行 mysqldump 的用户。&lt;/p&gt;

&lt;p&gt;建议 &lt;code class=&quot;highlighter-rouge&quot;&gt;--tab&lt;/code&gt; 选项只用于备份本地服务端，如果要用于备份远程服务端，该选项所指定的目录必须在服务端和客户端主机中同时存在，&lt;code class=&quot;highlighter-rouge&quot;&gt;.txt&lt;/code&gt; 文件将被服务端保存在服务端主机上，而 &lt;code class=&quot;highlighter-rouge&quot;&gt;.sql&lt;/code&gt; 文件将被　mysqldump 保存在客户端主机上。&lt;/p&gt;

&lt;p&gt;针对 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqldump --tab&lt;/code&gt; ，服务端默认会把表中的数据输入 &lt;code class=&quot;highlighter-rouge&quot;&gt;.txt&lt;/code&gt; 文件中，每条记录写在一行，字段之间用 tab 分隔。字段值外面没有引号，每行由换行符做为结束符。&lt;/p&gt;

&lt;h5 id=&quot;自定义输出格式&quot;&gt;自定义输出格式&lt;/h5&gt;

&lt;p&gt;mysqldump 支持以下选项：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--fields-terminated-by=str&lt;/code&gt; ：指定 &lt;strong&gt;分隔字段&lt;/strong&gt; 的字符串，默认为 tab。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--fileds-enclosed-by=char&lt;/code&gt; ：用什么字符来 &lt;strong&gt;包围字段值&lt;/strong&gt;，默认没有字符。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--fields-optionaly-enclosed-by=char&lt;/code&gt; ：用什么字符来 &lt;strong&gt;包围非数字&lt;/strong&gt; 的字段值，默认没有字符。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--fields-escaped-by=char&lt;/code&gt; ：用什么字符来 &lt;strong&gt;转义特殊字符&lt;/strong&gt;，默认没有转义。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--lines-terminated-by=str&lt;/code&gt; ：用什么字符来 &lt;strong&gt;结束行&lt;/strong&gt;，默认为换行符。&lt;/p&gt;

&lt;p&gt;使用这些选项来自定义输出的格式时，可能会需要在命令行中 &lt;strong&gt;引用&lt;/strong&gt; 或 &lt;strong&gt;转义&lt;/strong&gt; 某些字符，或者使用 &lt;strong&gt;十六进制表示法&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;用双引号包围字段值：&lt;/p&gt;

&lt;p&gt;在 Linux 中可以这样用：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--fields-enclosed-by='&quot;'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在所有平台可以这样用：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--fields-enclosed-by=0x22
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以同时使用多个选项，如用逗号分隔字段值，用 &lt;code class=&quot;highlighter-rouge&quot;&gt;\r\n&lt;/code&gt; 做为行的结束符：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqldump &lt;span class=&quot;nt&quot;&gt;--tab&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/tmp &lt;span class=&quot;nt&quot;&gt;--fields-terminated-by&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;, &lt;span class=&quot;nt&quot;&gt;--fields-enclosed-by&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&quot;'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--lines-terminated-by&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0x0d0a db1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;恢复分隔文本格式的备份&quot;&gt;恢复分隔文本格式的备份&lt;/h4&gt;

&lt;p&gt;对于使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqldump --tab&lt;/code&gt; 生成的备份来说，每个表有两个文件：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.sql&lt;/code&gt; 文件就代表一个表，其中包含 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE TABLE&lt;/code&gt; 语句，&lt;code class=&quot;highlighter-rouge&quot;&gt;.txt&lt;/code&gt; 文件包含了表的数据。&lt;/p&gt;

&lt;p&gt;要想重新加载表，要把工作路径切换到输出目录，先用 mysql 来处理 &lt;code class=&quot;highlighter-rouge&quot;&gt;.sql&lt;/code&gt; 文件，&lt;strong&gt;生成一个空表&lt;/strong&gt;，再处理 &lt;code class=&quot;highlighter-rouge&quot;&gt;.txt&lt;/code&gt; 文件，以便把数据 &lt;strong&gt;导入&lt;/strong&gt; 表中。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysql db1 &amp;lt; t1.sql
shell&amp;gt; mysqlimport db1 t1.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;另一种方法：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LOAD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATA&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INFILE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'t1.txt'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p class=&quot;notice--success&quot;&gt;备份时使用了什么格式选项，恢复时也必须使用相同的选项，这样才能保证数据被正确恢复。&lt;/p&gt;

&lt;h4 id=&quot;mysqldump-tips&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysqldump&lt;/code&gt; TIPS&lt;/h4&gt;

&lt;h5 id=&quot;生成数据库的副本&quot;&gt;生成数据库的副本&lt;/h5&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqldump db1 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; dump.sql
shell&amp;gt; mysqladmin create db2
shell&amp;gt; mysql db2 &amp;lt; dump.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;此时不要在 mysqldump 命令行中使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--databases&lt;/code&gt; 选项，因为它会使得备份文件中包含 &lt;code class=&quot;highlighter-rouge&quot;&gt;USE db1&lt;/code&gt;，这将会覆盖对 &lt;code class=&quot;highlighter-rouge&quot;&gt;db2&lt;/code&gt; 的命名。&lt;/p&gt;

&lt;h5 id=&quot;把数据库从一台服务器复制到另一台&quot;&gt;把数据库从一台服务器复制到另一台&lt;/h5&gt;

&lt;p&gt;在服务器 1 上：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqldump &lt;span class=&quot;nt&quot;&gt;--databases&lt;/span&gt; db1 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; dump.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;把备份文件复制到服务器 2 中，然后在服务器 2 上：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysql &amp;lt; dump.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;备份保存的程序&quot;&gt;备份保存的程序&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;保存的程序：保存的流程、函数、触发器、事件。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;有一些选项是用来控制 mysqldump 如何处理保存的程序的：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--events&lt;/code&gt; ：备份事件计划，默认禁用&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--routines&lt;/code&gt; ：备份保存的流程和函数，默认禁用&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--triggers&lt;/code&gt; ：备份表的触发器，默认启用，因此在备份表时，同时都会备份其中的触发器。&lt;/p&gt;

&lt;p&gt;需要时，可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--skip-events&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;--skip-routines&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;--skip-triggers&lt;/code&gt; 来显式禁用这些选项。&lt;/p&gt;

&lt;h5 id=&quot;把表结构和内容分开备份&quot;&gt;把表结构和内容分开备份&lt;/h5&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--no-data&lt;/code&gt; 选项，可以让 mysqldump 不要复制表中的数据，备份文件只包含创建表的语句。&lt;/p&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--no-create-info&lt;/code&gt; 选项，可以让 mysqldump 在输出中不要使用创建表的语句，于是备份文件中只有表的数据。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqldump &lt;span class=&quot;nt&quot;&gt;--no-data&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; dump-defs.sql
shell&amp;gt; mysqldump &lt;span class=&quot;nt&quot;&gt;--no-create-info&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; dump-data.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在备份文件中包含保存的例程及事件定义：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqldump &lt;span class=&quot;nt&quot;&gt;--no-data&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--routines&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--events&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; dump-defs.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;用-mysqldump-来测试升级的兼容性&quot;&gt;用 mysqldump 来测试升级的兼容性&lt;/h5&gt;

&lt;p&gt;如果要进行 MySQL 升级，比较明智的做法是把新版本单独安装，与当前版本隔离开。然后从当前服务端把数据库及其对象的定义备份出来，将其加载到新版本中，以确认新版是否能正常工作。&lt;/p&gt;

&lt;p&gt;备份当前服务端：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqldump &lt;span class=&quot;nt&quot;&gt;--all-databases&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--no-data&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--routines&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; dump-defs.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在新服务端：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysql &amp;lt; dump-defs.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;备份文件不包含表的数据，因此处理起来非常快。不用等太久就能观察到是否有潜在的兼容性问题，备份文件处理期间，仔细查找是否有警告或错误信息。&lt;/p&gt;

&lt;p&gt;在确认各种定义都被正确处理时，再把数据备份下来，加载到新服务端。&lt;/p&gt;

&lt;p&gt;当前服务端：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqldump &lt;span class=&quot;nt&quot;&gt;--all-databases&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--no-create-info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; dump-data.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;新服务端：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysql &amp;lt; dump-data.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;用二进制日志进行时间点增量恢复&quot;&gt;用二进制日志进行时间点增量恢复&lt;/h2&gt;

&lt;p&gt;时间点恢复是指对某个时间点之后的数据变化进行恢复。这种恢复通常是在一个完整恢复之后进行的。时间点恢复将服务器的状态恢复到完整备份之后某个更近的时间点。&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;本小节的范例中，使用 mysql 客户端来处理由 mysqlbinlog 生成的二进制日志。如果你的二进制日志中含有 &lt;code class=&quot;highlighter-rouge&quot;&gt;\0&lt;/code&gt; 字符，即空字符，不能直接用 mysql 来分析，需要启用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--binary-mode&lt;/code&gt; 选项。&lt;/p&gt;

&lt;h3 id=&quot;时间点恢复的原则&quot;&gt;时间点恢复的原则&lt;/h3&gt;

&lt;h4 id=&quot;确定二进制日志文件名&quot;&gt;确定二进制日志文件名&lt;/h4&gt;

&lt;p&gt;完整备份之后生成的累积备份保存在二进制日志中，时间点恢复是按照其中的信息来完成的。服务端启动时必须使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--log-bin&lt;/code&gt; 选项才能生成二进制日志。&lt;/p&gt;

&lt;p&gt;要想从二进制日志中恢复数据，必须了解当前的二进制日志文件的文件名和位置。服务端默认将其保存在数据目录中，但也可能使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--log-bin&lt;/code&gt; 选项时指定了其他位置。&lt;/p&gt;

&lt;p&gt;查看所有二进制日志列表：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BINARY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOGS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看当前使用的二进制日志：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MASTER&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATUS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;日志格式转换&quot;&gt;日志格式转换&lt;/h4&gt;

&lt;p&gt;mysqlbinlog 程序会把二进制日志文件中的事件从二进制格式 &lt;strong&gt;转换&lt;/strong&gt; 为文本，然后这些事件才能被执行或查看。&lt;/p&gt;

&lt;p&gt;通过 mysqlbinlog 的一些选项，可以基于事件的时间或其在日志中的位置，来选择日志中的特定部分。&lt;/p&gt;

&lt;h4 id=&quot;执行日志中的事件&quot;&gt;执行日志中的事件&lt;/h4&gt;

&lt;p&gt;执行日志中的事件可以重复这些对数据的操作，使得恢复某个时间跨度内的数据修改成为可能。&lt;/p&gt;

&lt;p&gt;通过使用 mysql 客户端来处理 mysqlbinlog 的输出，来执行日志中的事件：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqlbinlog binlog_files | mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;查看日志&quot;&gt;查看日志&lt;/h4&gt;

&lt;p&gt;要想确定事件的时间或位置以选择部分日志，需要查看日志的内容，把 mysqlbinlog 的输出发送给支持翻页阅读的程序：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqlbinlog binlog_files | more
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;或者，重定向到文件：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqlbinlog binlog_files &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; tmpfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;把日志保存为文件&quot;&gt;把日志保存为文件&lt;/h4&gt;

&lt;p&gt;在执行日志内容之前，先把日志另存为文件，然后删除一些不需要执行的内容，用该文件做为 mysql 的标准输入来执行日志。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &amp;lt; tmpfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;处理多个日志文件&quot;&gt;处理多个日志文件&lt;/h3&gt;

&lt;p&gt;如果有多个二进制日志要执行，最安全的方法是使用一个连接一起来处理。&lt;/p&gt;

&lt;p&gt;这种分别处理是不安全的：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqlbinlog binlog.000001 | mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# DANGER!!&lt;/span&gt;
shell&amp;gt; mysqlbinlog binlog.000002 | mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# DANGER!!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这是用不同的连接来处理多个日志。如果第一个日志中包含了 &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE TEMPORARY TABLE&lt;/code&gt; 语句，第二个日志中含有使用这个临时表的语句，这种方法就会出问题。因为第一个 mysql 进程结束时，服务端会删除临时表，第二个 mysql 进程是找不到这个临时表的。&lt;/p&gt;

&lt;p&gt;为了避免这样的问题发生，一定要使用同一个连接来执行所有的日志：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqlbinlog binlog.000001 binlog.000002 | mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;另一个方法是把所有日志写到一个文件中，然后处理这个文件：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqlbinlog binlog.000001 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  /tmp/statements.sql
shell&amp;gt; mysqlbinlog binlog.000002 &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /tmp/statements.sql
shell&amp;gt; mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;source /tmp/statements.sql&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;包含-gtid-的日志&quot;&gt;包含 GTID 的日志&lt;/h3&gt;

&lt;p&gt;如果二进制日志中含有 GTID（Global Transaction Identifier），在用 mysqlbinlog 读取日志时要使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--skip-gtids&lt;/code&gt; 选项：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqlbinlog &lt;span class=&quot;nt&quot;&gt;--skip-gtids&lt;/span&gt; binlog.000001 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  /tmp/dump.sql
shell&amp;gt; mysqlbinlog &lt;span class=&quot;nt&quot;&gt;--skip-gtids&lt;/span&gt; binlog.000002 &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /tmp/dump.sql
shell&amp;gt; mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;source /tmp/dump.sql&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;使用事件时间来恢复&quot;&gt;使用事件时间来恢复&lt;/h3&gt;

&lt;p&gt;在确定了要恢复的日志中哪个时间段的内容后，用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--start-datetime&lt;/code&gt; 来指定开始时间，用  &lt;code class=&quot;highlighter-rouge&quot;&gt;--stop-datetime&lt;/code&gt; 指定结束时间。需要使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;DATETIME&lt;/code&gt; 格式来表示时间，即 &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;假设在 2005年4月20日 上午 10 点整，执行了一条 SQL 语句，导致一个大表被删除，要想恢复这个表及其中的数据，可以先恢复前一晚上的备份，然后执行以下命令：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqlbinlog &lt;span class=&quot;nt&quot;&gt;--stop-datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2005-04-20 9:59:59&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
         /var/log/mysql/bin.123456 | mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该命令会恢复该时间点之前的所有数据。如果直到几个小时之后才发现错误语句的执行，可能还需要恢复在此之后发生的操作：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqlbinlog &lt;span class=&quot;nt&quot;&gt;--start-datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2005-04-20 10:01:00&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
         /var/log/mysql/bin.123456 | mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;至此，原则上就可以把 10 点之前的数据，以及 10 点以后的数据全部恢复了。&lt;/p&gt;

&lt;h3 id=&quot;使用事件位置来恢复&quot;&gt;使用事件位置来恢复&lt;/h3&gt;

&lt;p&gt;可以指定日志中两个位置之间的部分来恢复，使用选项 &lt;code class=&quot;highlighter-rouge&quot;&gt;--start-position&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;--stop-position&lt;/code&gt; 来指定起始和结束的位置。工作原理与用时间点恢复差不多。这种方式可以更精确地选择恢复哪部分日志，尤其是错误语句执行的同一时刻发生了许多事务的情况下。要想确定位置编号，先在在大概时间范围内运行 mysqlbinlog，重定向到文件中仔细检查：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqlbinlog &lt;span class=&quot;nt&quot;&gt;--start-datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2005-04-20 9:55:00&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;--stop-datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2005-04-20 10:05:00&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
         /var/log/mysql/bin.123456 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /tmp/mysql_restore.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;用文本编辑器打开 &lt;code class=&quot;highlighter-rouge&quot;&gt;.sql&lt;/code&gt; 文件，查找事故语句，确定其在日志中的位置。位置标签为 &lt;code class=&quot;highlighter-rouge&quot;&gt;log_pos&lt;/code&gt; ，后面跟一个数字，即位置编号。在恢复之前的备份文件之后，再用位置编号来处理二进制日志文件：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqlbinlog &lt;span class=&quot;nt&quot;&gt;--stop-position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;368312 /var/log/mysql/bin.123456 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
         | mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该语句恢复该位置之前的所有事务。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysqlbinlog &lt;span class=&quot;nt&quot;&gt;--start-position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;368315 /var/log/mysql/bin.123456 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
         | mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该语句恢复该位置之后的所有事务。&lt;/p&gt;

&lt;p&gt;因为在记录每条语句之前， mysqlbinlog 的输出中会包含 &lt;code class=&quot;highlighter-rouge&quot;&gt;SET TIMSTAMP&lt;/code&gt; 语句，因此恢复的数据和相关的日志会反映事务执行的原始时间。&lt;/p&gt;

&lt;h2 id=&quot;myisam-表的维护及灾难恢复&quot;&gt;MyISAM 表的维护及灾难恢复&lt;/h2&gt;

&lt;h3 id=&quot;使用-myisamchk-进行崩溃恢复&quot;&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;myisamchk&lt;/code&gt; 进行崩溃恢复&lt;/h3&gt;

&lt;p&gt;运行 mysqld 时默认是禁用外部锁的，当 mysqld 正在使用某个表时，无法同时使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;myisamchk&lt;/code&gt; 来对这个表进行检查，必须先执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqladmin flush-tables&lt;/code&gt;，然后再检查。如果不能做到这一点，那检查表的时候就必须停止 mysqld 的运行。&lt;/p&gt;

&lt;p&gt;如果服务端运行时启用了外部锁，就可以在任何时候使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;myisamchk&lt;/code&gt; 来对表进行检查了。这种情况下，如果检查期间，服务端尝试更新同一个表，它会等待，直到检查结束才继续其更新。&lt;/p&gt;

&lt;p&gt;如果要使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;myisamchk&lt;/code&gt; 来修复或优化表，则 &lt;strong&gt;必须&lt;/strong&gt; 要确保 mysqld 服务端没有使用该表。如果没有停止运行 mysqld，至少也要先运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqladmin flush-tables&lt;/code&gt;，然后再运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;myisamchk&lt;/code&gt;。如果服务端和 &lt;code class=&quot;highlighter-rouge&quot;&gt;myisamchk&lt;/code&gt; 同时访问这个表，有可能会损坏该表。&lt;/p&gt;

&lt;p&gt;进行崩溃恢复时，一定要记住：数据库中的每个 MyISAM 表都对应数据库目录中的三个文件，&lt;code class=&quot;highlighter-rouge&quot;&gt;.frm&lt;/code&gt; 文件用于保存表的定义，&lt;code class=&quot;highlighter-rouge&quot;&gt;.MYD&lt;/code&gt; 文件为数据文件，&lt;code class=&quot;highlighter-rouge&quot;&gt;.MYI&lt;/code&gt; 为索引文件。崩溃通常会导致数据文件和索引文件损坏。&lt;/p&gt;

&lt;p&gt;myisamchk 会逐行地生成数据文件的副本，修复之后它会删除原数据文件，把新生成的文件重命名为原数据文件。&lt;/p&gt;

&lt;p&gt;如果使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--quick&lt;/code&gt; 选项，myisamchk 就不会生成临时的数据文件，它会认为数据文件没有损坏，只生成一个新的索引文件。这种做法比较安全，因为 myisamchk 会自动检测数据文件是否损坏，如果损坏，会退出。&lt;/p&gt;

&lt;p&gt;还可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--quick&lt;/code&gt; 选项两次，此时，myisamchk 遇到错误不会退出，而会尝试通过修改数据文件来解决。只有当可用磁盘空间不多时才建议使用两次该选项。但在修复之前，还是应该把表备份一下。&lt;/p&gt;

&lt;h3 id=&quot;如何检测-myisam-表的错误&quot;&gt;如何检测 MyISAM 表的错误&lt;/h3&gt;

&lt;p&gt;要想检查 MyISAM 表，可用以下命令：&lt;/p&gt;

&lt;h4 id=&quot;myisamchk-tbl_name&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;myisamchk tbl_name&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;该命令会找到 99.99% 的错误，它找不到的是只涉及数据文件的错误，这种很少见。&lt;/p&gt;

&lt;p&gt;如果要检查一个表，通常应该不用选项，直接运行 mysiamchk，或只用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-s&lt;/code&gt; 选项，安静模式。&lt;/p&gt;

&lt;h4 id=&quot;myisamchk--m-tbl_name&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;myisamchk -m tbl_name&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;该命令会找到 99.99% 的错误。它首先会检查所有的索引条目，然后检查所有的行，它会为行中所有的键值计算一个校验码，确认该校验码与索引树中各键的校验码相匹配。&lt;/p&gt;

&lt;h4 id=&quot;myisamchk--e-tbl_name&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;myisamchk -e tbl_name&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-e&lt;/code&gt; 表示 extended check。该命令会对所有数据进行一个彻底的检查&lt;/p&gt;

&lt;p&gt;它会对每个键都进行读测试，以确认它们都指向正确的记录。如果表很大，索引很多，这可能会需要很长时间。&lt;/p&gt;

&lt;p&gt;myisamchk 通常在发现第一个错误时会暂停，如果要获得更多的信息，可以加一个  &lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt;  选项。&lt;/p&gt;

&lt;h4 id=&quot;myisamchk--e--i-tbl_name&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;myisamchk -e -i tbl_name&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;与上一个命令类似，但 &lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; 选项告诉 myisamchk 打印额外的统计信息。&lt;/p&gt;

&lt;h3 id=&quot;如何修复-myisam-表&quot;&gt;如何修复 MyISAM 表&lt;/h3&gt;

&lt;p&gt;表损坏的症状，可以是查询被意外取消，以及各类错误，如：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Can’t find file tbl_name.MYI (Errcode: nnn)&lt;/li&gt;
  &lt;li&gt;Unexpected end of file&lt;/li&gt;
  &lt;li&gt;Record file is crashed&lt;/li&gt;
  &lt;li&gt;Got error nnn from table handler&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;nnn 代表错误编号，通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;perror nnn&lt;/code&gt; 可以查看更多关于该错误的信息。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; perror 126 127 132 134 135 136 141 144 145
MySQL error code 126 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Index file is crashed
MySQL error code 127 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Record-file is crashed
MySQL error code 132 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Old database file
MySQL error code 134 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Record was already deleted &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;or record file crashed&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
MySQL error code 135 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; No more room &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;record file
MySQL error code 136 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; No more room &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;index file
MySQL error code 141 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Duplicate unique key or constraint on write or update
MySQL error code 144 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Table is crashed and last repair failed
MySQL error code 145 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Table was marked as crashed and should be repaired
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;表空间不够用&quot;&gt;表空间不够用&lt;/h4&gt;

&lt;p&gt;其中，编号为 135 和 136 的错误，无法仅通过简单的修复来解决。必须使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER TABLE&lt;/code&gt; 来提升最大行数和平均行长度：&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tbl_name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX_ROWS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xxx&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AVG_ROW_LENGTH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yyy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果不知道当前的设置，用 &lt;code class=&quot;highlighter-rouge&quot;&gt;SHOW CREATE TABLE&lt;/code&gt; 查看。&lt;/p&gt;

&lt;h4 id=&quot;其它错误&quot;&gt;其它错误&lt;/h4&gt;

&lt;p&gt;对于其它的错误，必须对表进行修复。myisamchk 通常可以检测并修复多数错误。&lt;/p&gt;

&lt;p&gt;开始之前，把工作目录切换到数据库目录，并检查表文件的权限。确保其对运行 mysqld 的用户及当前用户是可读的。如果要修改文件，还需要可写。&lt;/p&gt;

&lt;p&gt;开始修复表之前，需要先停止运行 mysqld 服务端。如果在远程服务器上运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqladmin shutdown&lt;/code&gt;，在 mysqladmin 返回之后，mysqld 服务端还会继续运行一段时间，直到所有运行中的语句停止运行，所有发生变化的索引全部冲洗到磁盘中，才会彻底停止。&lt;/p&gt;

&lt;p&gt;修复的过程主要有三个阶段：&lt;/p&gt;

&lt;h5 id=&quot;第一步检查表&quot;&gt;第一步：检查表&lt;/h5&gt;

&lt;p&gt;运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;myisamchk *.MYI&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如果时间充足，则运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;myisamchk -e *.MYI&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-s&lt;/code&gt; 隐藏不必要的信息。&lt;/p&gt;

&lt;p&gt;如果 mysqld 已经停止运行，应该使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--update-state&lt;/code&gt; 选项，myisamchk 会把表标记为 “已检测”。&lt;/p&gt;

&lt;p&gt;如果 myisamchk 发现了某些表的错误，跳转到第二步。&lt;/p&gt;

&lt;p&gt;检查如果遇到意外错误，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;out of memory&lt;/code&gt; 等，或 myisamchk 崩溃了，跳转到第三步。&lt;/p&gt;

&lt;h5 id=&quot;第二步简单安全地修复&quot;&gt;第二步：简单安全地修复&lt;/h5&gt;

&lt;p&gt;首先，用 &lt;code class=&quot;highlighter-rouge&quot;&gt;myisamchk -r -q tbl_name&lt;/code&gt; 尝试一下，&lt;code class=&quot;highlighter-rouge&quot;&gt;-r -q&lt;/code&gt; 表示快速恢复模式。&lt;/p&gt;

&lt;p&gt;该模式会尝试在不修改数据文件的情况下修复索引文件。如果数据文件是完整的，该有的都有，而且删除链接都指向数据文件正确的位置，该模式应该会修复表。否则进入以下流程：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;为数据文件做个备份&lt;/li&gt;
  &lt;li&gt;运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;myisamchk -r tbl_name&lt;/code&gt;，会把错误的行和删除的行从数据文件中清除掉，然后重建索引文件&lt;/li&gt;
  &lt;li&gt;如果上步失败，则运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;myisamchk --safe-recover tbl_name&lt;/code&gt;，安全恢复模式会用一个较老的恢复办法，能处理一些普通恢复模式无法处理的问题，但更费时间&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;notice&quot;&gt;运行 myisamchk 时，如果希望修复操作能更快一些，可以把变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;sort_buffer_size&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;key_buffer_size&lt;/code&gt; 的值设置为可用内存的 25% 左右。&lt;/p&gt;

&lt;p&gt;修复期间如果遇到意外错误，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;out of memory&lt;/code&gt; 等，或 myisamchk 崩溃了，跳转到第三步。&lt;/p&gt;

&lt;h5 id=&quot;第三步难度大的修复&quot;&gt;第三步：难度大的修复&lt;/h5&gt;

&lt;p&gt;如果索引文件的前 16KB 被破坏，或包含错误信息，或索引文件丢失，才会第这一步。此时，很有必要重新创建一个索引文件：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;把数据文件移动到安全的位置&lt;/li&gt;
  &lt;li&gt;用表格描述文件来创建新的空的数据文件和索引文件：&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; mysql db_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autocommit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TRUNCATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tbl_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;把原数据文件复制到新数据文件中，同时建议保存原数据文件副本，以备不时之需。&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;notice--warning&quot;&gt;如果使用了主从复制，应该先将其暂停，然后再进行上面的操作。因为涉及到文件系统的操作，这些不会保存到 MySQL 日志中。&lt;/p&gt;

&lt;p&gt;返回第二步，&lt;code class=&quot;highlighter-rouge&quot;&gt;myisamchk -r -q&lt;/code&gt; 此时应该能正常进行了。&lt;/p&gt;

&lt;p&gt;也可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;REPAIRE TABLE tbl_name USE_FRM&lt;/code&gt; 语句，会自动进行整个流程。&lt;/p&gt;

&lt;h3 id=&quot;myisam-表的优化&quot;&gt;MyISAM 表的优化&lt;/h3&gt;

&lt;p&gt;若要合并零碎的行，并消除因删除或更新行导致的空间浪费，请在恢复模式下运行 myisamchk：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; myisamchk &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; tbl_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;OPTIMIZE TABLE&lt;/code&gt; 语句，也能以同样的方式优化表格，该语句会修复表格，并对键进行分析，还会排序索引树，以便键的查找能更快速。&lt;/p&gt;

&lt;h3 id=&quot;设置-myisam-表维护计划&quot;&gt;设置 MyISAM 表维护计划&lt;/h3&gt;

&lt;p&gt;经常对表格进行检查是非常有必要的，以免出现问题造成措手不及。&lt;/p&gt;

&lt;h4 id=&quot;方法一&quot;&gt;方法一&lt;/h4&gt;

&lt;p&gt;检查 MyISAM 表格的一种方法是使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;CHECK TABLE&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;REPAIR TABLE&lt;/code&gt; 语句。&lt;/p&gt;

&lt;h4 id=&quot;方法二&quot;&gt;方法二&lt;/h4&gt;

&lt;p&gt;另一种方法是使用 myisamchk，如果是用于维护，可使用静默模式，即开启 &lt;code class=&quot;highlighter-rouge&quot;&gt;-s&lt;/code&gt; 选项，只有发生错误时才会显示信息。&lt;/p&gt;

&lt;h4 id=&quot;方法三&quot;&gt;方法三&lt;/h4&gt;

&lt;p&gt;还可以考虑在启动服务端时启用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--myisam-recover-options&lt;/code&gt; 选项，以启用对 MyISAM 表的自动检查。假如在更新期间，如果重启系统了，通常需要先检查一下表，然后再开始使用。&lt;/p&gt;

&lt;h4 id=&quot;方法四&quot;&gt;方法四&lt;/h4&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;cron&lt;/code&gt; 来添加计划任务：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;35 0 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; 0 /path/to/myisamchk &lt;span class=&quot;nt&quot;&gt;--fast&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--silent&lt;/span&gt; /path/to/datadir/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.MYI
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果观察一段时间发现很少出错，可以考虑适当减小检查的频率。&lt;/p&gt;

&lt;p&gt;通常来说，MySQL 的表不太需要维护。&lt;/p&gt;

&lt;p&gt;如果对 MyISAM 表进行大量的更新，如使用动态大小的行（含有 &lt;code class=&quot;highlighter-rouge&quot;&gt;VARCHAR&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;BLOB&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;TEXT&lt;/code&gt; 字段的表），或某些表中有许多被删除的行，时不时地需要整理碎片以清理表空间，这种情况下可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;OPTIMIZE TABLE&lt;/code&gt; 来处理这些表。&lt;/p&gt;

&lt;p&gt;或者，如果可以把 mysqld 服务端停止一段时间，切换到数据目录，然后使用以下命令：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;shell&amp;gt; myisamchk &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--sort-index&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--myisam_sort_buffer_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;16M &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.MYI
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Hawk Zhang</name><email>imhawkz@gmail.com</email></author><category term="mysql" /><category term="备份" /></entry></feed>